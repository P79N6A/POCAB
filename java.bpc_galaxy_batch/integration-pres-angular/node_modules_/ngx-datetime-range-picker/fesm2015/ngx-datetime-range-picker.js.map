{"version":3,"file":"ngx-datetime-range-picker.js","sources":["ng://ngx-datetime-range-picker/lib/ngx-datetime-range-picker.constants.ts","ng://ngx-datetime-range-picker/lib/ngx-datetime-range-picker.service.ts","ng://ngx-datetime-range-picker/lib/ngx-datetime-range-picker.component.ts","ng://ngx-datetime-range-picker/lib/material/material.module.ts","ng://ngx-datetime-range-picker/lib/pipes/objNgFor.pipe.ts","ng://ngx-datetime-range-picker/lib/ngx-datetime-range-picker.module.ts","ng://ngx-datetime-range-picker/public_api.ts","ng://ngx-datetime-range-picker/ngx-datetime-range-picker.ts"],"sourcesContent":["declare var require: any;\nconst moment = require(\"moment\");\nconst USA_MST_TZ_CODE = \"MST\";\nconst USA_TZ_CODE = \"PST\";\nconst EU_TZ_CODE = \"CET\";\n\nexport const NgxDatetimeRangePickerConstants = {\n  DEFAULT: {\n    TYPE: \"daily\",\n    INPUT_CLASS: \"m1drp\",\n    DATE_FROMAT: \"YYYY-MM-DD\",\n    TIME_FORMAT: \"HH:mm\",\n    START_DATE: moment().format(\"YYYY-MM-DD\"),\n    END_DATE: moment().format(\"YYYY-MM-DD\"),\n    MIN_DATE: moment()\n      .subtract(2, \"year\")\n      .startOf(\"year\")\n      .format(\"YYYY-MM-DD\"),\n    MAX_DATE: moment().format(\"YYYY-MM-DD\"),\n    START_TIME: \"00:00\",\n    END_TIME: \"23:59\",\n    MODEL_KEYS: [\"daily\", \"weekly\", \"monthly\", \"quarterly\", \"yearly\"],\n    TZ_CODE: USA_MST_TZ_CODE\n  },\n  CONSTANT: {\n    MONTHS_AVAILABLE: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"],\n    USA_MST_TZ_CODE,\n    USA_TZ_CODE,\n    EU_TZ_CODE,\n    TZ_CODES: [USA_TZ_CODE, EU_TZ_CODE],\n    OFFSETS: {\n      [USA_TZ_CODE]: {\n        SO: -7,\n        WO: -8\n      },\n      [EU_TZ_CODE]: {\n        SO: 1,\n        WO: 0\n      }\n    },\n    TZ_NAMES: {\n      [USA_MST_TZ_CODE]: \"America/Phoenix\",\n      [USA_TZ_CODE]: \"America/Los_Angeles\",\n      [EU_TZ_CODE]: \"Europe/Berlin\"\n    }\n  }\n};\n","import { Injectable } from \"@angular/core\";\nimport { NgxDatetimeRangePickerConstants } from \"./ngx-datetime-range-picker.constants\";\nimport { AriaLabelsOptions, NgxDatetimeRangePickerOptions, NgxDatetimeRangePickerSettings } from \"./interfaces/index\";\n\ndeclare var require: any;\nconst moment = require(\"moment\");\nconst _ = require(\"lodash\");\n\nconst DEFAULT_TYPE = NgxDatetimeRangePickerConstants.DEFAULT.TYPE;\nconst DEFAULT_INPUT_CLASS = NgxDatetimeRangePickerConstants.DEFAULT.INPUT_CLASS;\nconst DEFAULT_DATE_FROMAT = NgxDatetimeRangePickerConstants.DEFAULT.DATE_FROMAT;\nconst DEFAULT_TIME_FORMAT = NgxDatetimeRangePickerConstants.DEFAULT.TIME_FORMAT;\nconst DEFAULT_START_DATE = NgxDatetimeRangePickerConstants.DEFAULT.START_DATE;\nconst DEFAULT_END_DATE = NgxDatetimeRangePickerConstants.DEFAULT.END_DATE;\nconst DEFAULT_MIN_DATE = NgxDatetimeRangePickerConstants.DEFAULT.MIN_DATE;\nconst DEFAULT_MAX_DATE = NgxDatetimeRangePickerConstants.DEFAULT.MAX_DATE;\nconst DEFAULT_START_TIME = NgxDatetimeRangePickerConstants.DEFAULT.START_TIME;\nconst DEFAULT_END_TIME = NgxDatetimeRangePickerConstants.DEFAULT.END_TIME;\nconst DEFAULT_MODEL_KEYS = NgxDatetimeRangePickerConstants.DEFAULT.MODEL_KEYS;\nconst MONTHS_AVAILABLE = NgxDatetimeRangePickerConstants.CONSTANT.MONTHS_AVAILABLE;\nconst DEFAULT_TIMEZONE_CODE = NgxDatetimeRangePickerConstants.DEFAULT.TZ_CODE;\nconst EU_TZ_CODE = NgxDatetimeRangePickerConstants.CONSTANT.EU_TZ_CODE;\nconst TZ_NAMES = NgxDatetimeRangePickerConstants.CONSTANT.TZ_NAMES;\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class NgxDatetimeRangePickerService {\n  getNotAvailableText(): string {\n    return \"N/A\";\n  }\n\n  getDefaultAriaLabelOptions(): AriaLabelsOptions {\n    return {\n      inputField: \"Date Range Input Field\" as string\n    };\n  }\n\n  getDefaultOptions(): NgxDatetimeRangePickerOptions {\n    return {\n      dateArray: [] as string[],\n      startDate: DEFAULT_START_DATE as string,\n      endDate: DEFAULT_END_DATE as string,\n      minDate: DEFAULT_MIN_DATE as string,\n      maxDate: DEFAULT_MAX_DATE as string,\n      startTime: DEFAULT_START_TIME as string,\n      endTime: DEFAULT_END_TIME as string\n    };\n  }\n\n  getDefaultSettings(): NgxDatetimeRangePickerSettings {\n    return {\n      type: DEFAULT_TYPE as string,\n      modelKeys: DEFAULT_MODEL_KEYS as string[],\n      selectedModel: undefined as string,\n      showTimezoneSelect: false as boolean,\n      useLocalTimezone: false as boolean,\n      timePicker: false as boolean,\n      inputClass: DEFAULT_INPUT_CLASS as string,\n      inputDateFormat: null as string,\n      viewDateFormat: DEFAULT_DATE_FROMAT as string,\n      outputDateFormat: DEFAULT_DATE_FROMAT as string,\n      singleDatePicker: false as boolean,\n      componentDisabled: false as boolean,\n      placeholder: \"Select Date\" as string,\n      showRowNumber: true as boolean,\n      availableRanges: {} as Object,\n      showRanges: true as boolean,\n      disableWeekends: false as boolean,\n      disableWeekdays: false as boolean,\n      retailCalendar: false as boolean,\n      displayBeginDate: false as boolean,\n      displayEndDate: false as boolean,\n      ariaLabels: this.getDefaultAriaLabelOptions() as AriaLabelsOptions\n    };\n  }\n\n  formatDateToDefaultFormat(date, format = DEFAULT_DATE_FROMAT): string {\n    let fromattedDate = null;\n    if (date) {\n      if (!isNaN(Number(date))) {\n        fromattedDate = moment(date).format(DEFAULT_DATE_FROMAT);\n      } else {\n        if (!format) {\n          format = moment(date)._f;\n        } else {\n          if (format !== moment(date)._f) {\n            console.warn(\"ERR_NGX_DATETIME_RANGE_PICKER: inputDateFormat !== dateFormat\");\n          }\n        }\n        if (!format) {\n          console.warn(\n            \"ERR_NGX_DATETIME_RANGE_PICKER: The provided date is in unknown format. Pass the format or pass the date in known format\"\n          );\n        }\n        fromattedDate = moment(date, format).format(DEFAULT_DATE_FROMAT);\n      }\n    }\n\n    return fromattedDate;\n  }\n\n  formatTimeToDefaultFormat(time) {\n    let formattedTime = null;\n    if (time) {\n      if (time.indexOf(\":\") > -1) {\n        if (time.indexOf(\"AM\") > -1 || time.indexOf(\"PM\") > -1) {\n          formattedTime = moment(time, \"h:mm A\").format(DEFAULT_TIME_FORMAT);\n        } else {\n          formattedTime = time;\n        }\n      } else {\n        console.warn(\n          \"ERR_NGX_DATETIME_RANGE_PICKER: The provided time is not in correct format. Format: HH:mm or hh:mm A\"\n        );\n      }\n    }\n    return formattedTime;\n  }\n\n  getFrequencyColumnHeader(type) {\n    return (() => {\n      switch (type) {\n        case \"daily\":\n          return \"W#\";\n        case \"weekly\":\n          return \"\";\n        case \"monthly\":\n          return \"Q#\";\n        case \"quarterly\":\n          return \"Year\";\n        case \"yearly\":\n          return \"\";\n      }\n    })();\n  }\n\n  getCalendarRowNumberText(type, number) {\n    return (() => {\n      switch (type) {\n        case \"daily\":\n          return `W${number}`;\n        case \"weekly\":\n          return \"\";\n        case \"monthly\":\n          return `Q${number}`;\n        case \"quarterly\":\n          return `${number}`;\n        case \"yearly\":\n          return \"\";\n      }\n    })();\n  }\n\n  createDefaultRanges(config): Object {\n    const ranges = {};\n    const type = config.type;\n    const maxDate = _.cloneDeep(config.maxDate);\n    const formattedMaxDate = this.formatDateToDefaultFormat(maxDate, DEFAULT_DATE_FROMAT);\n\n    if (type === \"daily\") {\n      ranges[\"Last 7 Days\"] = {\n        startDate: moment(formattedMaxDate, DEFAULT_DATE_FROMAT)\n          .subtract(6, \"days\")\n          .format(DEFAULT_DATE_FROMAT),\n        endDate: formattedMaxDate\n      };\n      ranges[\"Last 30 Days\"] = {\n        startDate: moment(formattedMaxDate, DEFAULT_DATE_FROMAT)\n          .subtract(29, \"days\")\n          .format(DEFAULT_DATE_FROMAT),\n        endDate: formattedMaxDate\n      };\n      ranges[\"Last 90 Days\"] = {\n        startDate: moment(formattedMaxDate, DEFAULT_DATE_FROMAT)\n          .subtract(89, \"days\")\n          .format(DEFAULT_DATE_FROMAT),\n        endDate: formattedMaxDate\n      };\n    } else if (type === \"weekly\") {\n      ranges[\"Last 4 Weeks\"] = {\n        startDate: moment(formattedMaxDate, DEFAULT_DATE_FROMAT)\n          .subtract(3, \"weeks\")\n          .format(DEFAULT_DATE_FROMAT),\n        endDate: formattedMaxDate\n      };\n      ranges[\"Last 13 Weeks\"] = {\n        startDate: moment(formattedMaxDate, DEFAULT_DATE_FROMAT)\n          .subtract(12, \"weeks\")\n          .format(DEFAULT_DATE_FROMAT),\n        endDate: formattedMaxDate\n      };\n      ranges[\"Last 26 Weeks\"] = {\n        startDate: moment(formattedMaxDate, DEFAULT_DATE_FROMAT)\n          .subtract(25, \"weeks\")\n          .format(DEFAULT_DATE_FROMAT),\n        endDate: formattedMaxDate\n      };\n    } else if (type === \"monthly\") {\n      // if(retailCalendar) ? subtract(3, 'months')....so on for 'Last 3 Months'....so on\n      ranges[\"Last 3 Months\"] = {\n        startDate: moment(formattedMaxDate, DEFAULT_DATE_FROMAT)\n          .subtract(2, \"months\")\n          .format(DEFAULT_DATE_FROMAT),\n        endDate: formattedMaxDate\n      };\n      ranges[\"Last 6 Months\"] = {\n        startDate: moment(formattedMaxDate, DEFAULT_DATE_FROMAT)\n          .subtract(5, \"months\")\n          .format(DEFAULT_DATE_FROMAT),\n        endDate: formattedMaxDate\n      };\n      ranges[\"Last 9 Months\"] = {\n        startDate: moment(formattedMaxDate, DEFAULT_DATE_FROMAT)\n          .subtract(8, \"months\")\n          .format(DEFAULT_DATE_FROMAT),\n        endDate: formattedMaxDate\n      };\n    } else if (type === \"quarterly\") {\n      // if(retailCalendar) ? subtract(1, 'quarters')....so on for 'Last 2 Quarters'....so on\n      ranges[\"Last 2 Quarters\"] = {\n        startDate: moment(formattedMaxDate, DEFAULT_DATE_FROMAT)\n          .subtract(1, \"quarters\")\n          .format(DEFAULT_DATE_FROMAT),\n        endDate: formattedMaxDate\n      };\n      ranges[\"Last 4 Quarters\"] = {\n        startDate: moment(formattedMaxDate, DEFAULT_DATE_FROMAT)\n          .subtract(3, \"quarters\")\n          .format(DEFAULT_DATE_FROMAT),\n        endDate: formattedMaxDate\n      };\n    } else if (type === \"yearly\") {\n      ranges[\"Last Year\"] = {\n        startDate: moment(formattedMaxDate, DEFAULT_DATE_FROMAT)\n          .subtract(1, \"year\")\n          .format(DEFAULT_DATE_FROMAT),\n        endDate: formattedMaxDate\n      };\n    }\n    ranges[\"Custom Range\"] = { startDate: null, endDate: null };\n    return ranges;\n  }\n\n  getSanitizedDateArray(config) {\n    const sanitizedDateArray = [];\n    const type = config.type;\n    const dateArray = config.dateArray;\n    const inputDateFormat = config.inputDateFormat;\n\n    // dateArray can have nulls\n    _.forEach(dateArray, (date) => {\n      if (date) {\n        let format = null;\n        if (isNaN(Number(date))) {\n          if (inputDateFormat) {\n            format = inputDateFormat;\n          } else {\n            format = moment(date)._f;\n          }\n        }\n\n        if (inputDateFormat !== moment(date)._f) {\n          console.warn(\n            \"ERR_NGX_DATETIME_RANGE_PICKER: inputDateFormat !== dateFormat in dateArray. Converted dates might not be as expected\"\n          );\n        }\n\n        let value = format ? moment(date, format).format(format) : moment(date).valueOf();\n        if (type === \"weekly\") {\n          value = format\n            ? moment(date, format)\n                .endOf(\"week\")\n                .format(format)\n            : moment(date)\n                .endOf(\"week\")\n                .valueOf();\n        } else if (type === \"monthly\") {\n          value = format\n            ? moment(date, format)\n                .endOf(\"month\")\n                .format(format)\n            : moment(date)\n                .endOf(\"month\")\n                .valueOf();\n        } else if (type === \"quarterly\") {\n          value = format\n            ? moment(date, format)\n                .endOf(\"quarter\")\n                .format(format)\n            : moment(date)\n                .endOf(\"quarter\")\n                .valueOf();\n        } else if (type === \"yearly\") {\n          value = format\n            ? moment(date, format)\n                .endOf(\"year\")\n                .format(format)\n            : moment(date)\n                .endOf(\"year\")\n                .valueOf();\n        }\n        if (value) {\n          sanitizedDateArray.push(value);\n        } else {\n          console.warn(\n            `ERR_NGX_DATETIME_RANGE_PICKER: dateArray values are in unknown format. Pass the format or pass the dates in known format`\n          );\n        }\n      }\n    });\n\n    return _.uniqBy(sanitizedDateArray);\n  }\n\n  getNumberOfWeeks(date): number {\n    let numberOfWeeks = null;\n    if (date) {\n      const monthStart: number = moment(date, DEFAULT_DATE_FROMAT)\n        .startOf(\"month\")\n        .day();\n      const monthEnd: number = Number(\n        moment(date, DEFAULT_DATE_FROMAT)\n          .endOf(\"month\")\n          .format(\"D\")\n      );\n      numberOfWeeks = Math.ceil((monthStart + monthEnd) / 7);\n    }\n    return numberOfWeeks;\n  }\n\n  getYearlyWeekCount(year, retailCalendar?) {\n    let weekCount: number = null;\n    if (year) {\n      const yearStartDate = moment(year, \"YYYY\")\n        .startOf(\"year\")\n        .format(DEFAULT_DATE_FROMAT);\n      const yearEndDate = moment(year, \"YYYY\")\n        .endOf(\"year\")\n        .format(DEFAULT_DATE_FROMAT);\n      const yearEndWeekEndDate = moment(yearEndDate, DEFAULT_DATE_FROMAT)\n        .startOf(\"week\")\n        .format(DEFAULT_DATE_FROMAT);\n\n      const yearStartWeekEndDate = moment(yearStartDate, DEFAULT_DATE_FROMAT)\n        .endOf(\"week\")\n        .format(DEFAULT_DATE_FROMAT);\n\n      const yearSartWeekNumber = this.getWeekNumber(yearStartWeekEndDate);\n      const yearEndWeekNumber = this.getWeekNumber(yearEndWeekEndDate);\n      weekCount = yearEndWeekNumber - yearSartWeekNumber + 1;\n    }\n    return weekCount;\n  }\n\n  getMonthsAvailable(minDate, maxDate, selectedYear) {\n    const months = [];\n    if (minDate && maxDate && selectedYear) {\n      let minDatems = moment(minDate, DEFAULT_DATE_FROMAT).valueOf();\n      let maxDatems = moment(maxDate, DEFAULT_DATE_FROMAT).valueOf();\n      const yearStartms = moment()\n        .year(selectedYear)\n        .startOf(\"year\")\n        .valueOf();\n      const yearEndms = moment()\n        .year(selectedYear)\n        .endOf(\"year\")\n        .valueOf();\n\n      if (minDatems < yearStartms) {\n        minDatems = yearStartms;\n      }\n      if (maxDatems > yearEndms) {\n        maxDatems = yearEndms;\n      }\n\n      let minDateMonthNumber = moment(minDatems).month();\n      const diff: number = moment(maxDatems).diff(moment(minDatems), \"months\");\n      const maxMonths = diff < MONTHS_AVAILABLE.length ? diff : MONTHS_AVAILABLE.length;\n\n      for (let i = 0; i <= maxMonths; i++) {\n        if (minDateMonthNumber >= MONTHS_AVAILABLE.length) {\n          months.push(MONTHS_AVAILABLE[minDateMonthNumber - MONTHS_AVAILABLE.length]);\n        } else {\n          months.push(MONTHS_AVAILABLE[minDateMonthNumber]);\n        }\n        minDateMonthNumber++;\n      }\n    }\n    return months;\n  }\n\n  getYearsAvailable(config) {\n    const minDate = config ? config.minDate : \"\";\n    const maxDate = config ? config.maxDate : \"\";\n    const years = [];\n    if (minDate && maxDate) {\n      const minYear = Number(this.getSelectedYear(config, minDate, \"left\"));\n      const maxYear = Number(this.getSelectedYear(config, maxDate, \"right\"));\n      const diff = maxYear - minYear;\n\n      for (let i = 0; i <= diff; i++) {\n        years.push(`${minYear + i}`);\n      }\n    }\n    return years.reverse();\n  }\n\n  isDateAvailable(date, minDate, maxDate, startDate, endDate, monthStartDate, monthEndDate, config): boolean {\n    let available = false;\n    const type = config.type;\n    const dateArray = config.dateArray ? config.dateArray : [];\n    const inputDateFormat = config.inputDateFormat;\n    const disableWeekends = config.disableWeekends;\n    const disableWeekdays = config.disableWeekdays;\n    if (type === \"daily\") {\n      minDate = minDate > monthStartDate ? minDate : monthStartDate;\n      maxDate = maxDate < monthEndDate ? maxDate : monthEndDate;\n    }\n\n    // if(date === minDate\n    //     || date === maxDate) {\n    //   available = true;\n    // }\n\n    if (date >= minDate && date <= maxDate) {\n      if (dateArray.length > 0) {\n        available = _.some(dateArray, (d) => {\n          let format = null;\n          if (isNaN(Number(date))) {\n            if (inputDateFormat) {\n              format = inputDateFormat;\n            } else {\n              format = moment(date)._f;\n            }\n          }\n          return moment(d, format).valueOf() === date;\n        });\n      } else {\n        available = true;\n      }\n\n      if (available) {\n        if (disableWeekends) {\n          available = !this.isWeekend(date);\n        }\n        if (disableWeekdays) {\n          available = !this.isWeekday(date);\n        }\n      }\n    }\n    return available;\n  }\n\n  isDateInRange(date, minDate, maxDate, startDate, endDate, monthStartDate, monthEndDate, available, config): boolean {\n    let inRange = false;\n    const type = config.type;\n    const singleDatePicker = config.singleDatePicker;\n    if (!singleDatePicker) {\n      if (type === \"daily\") {\n        minDate = monthStartDate;\n        maxDate = monthEndDate;\n      }\n      if (date >= startDate && date <= endDate && date >= minDate && date <= maxDate) {\n        if (available) {\n          inRange = true;\n        }\n      }\n    }\n    return inRange;\n  }\n\n  isDateActive(date, startDate, endDate, side): boolean {\n    let active = false;\n    if ((date === startDate && side === \"left\") || (date === endDate && side === \"right\")) {\n      active = true;\n    }\n    return active;\n  }\n\n  isDateToday(date, config): boolean {\n    let today = false;\n    const todayDate = moment()\n      .startOf(\"day\")\n      .valueOf();\n    const type = config.type;\n    const firstLastDay = this.getFirstLastDay(moment(todayDate).format(DEFAULT_DATE_FROMAT), type);\n    const firstDay = moment(firstLastDay.firstDay, DEFAULT_DATE_FROMAT).valueOf();\n    const lastDay = moment(firstLastDay.lastDay, DEFAULT_DATE_FROMAT).valueOf();\n    if (date >= firstDay && date <= lastDay) {\n      today = true;\n    }\n    return today;\n  }\n\n  isWeekday(date, format?) {\n    return !this.isWeekend(date, format);\n  }\n\n  isWeekend(date, format?) {\n    if (!format) {\n      format = null;\n    }\n    const day = moment(date, format).day();\n    return day === 0 || day === 6 ? true : false;\n  }\n\n  getCalendarRowVariables(options) {\n    const variables: any = {};\n    const type = options.type;\n    const monthStartWeekNumber = options.monthStartWeekNumber;\n    const dateRows = options.dateRows;\n    const year = `${options.year}`;\n\n    if (type === \"daily\") {\n      variables.rowNumber = monthStartWeekNumber + dateRows;\n      variables.columns = 6;\n    } else if (type === \"weekly\") {\n      // variables.rowNumber = `${(dateRows*2)+1} - ${(dateRows*2)+2}`;\n      variables.rowNumber = ``;\n      variables.columns = 6;\n    } else if (type === \"monthly\") {\n      variables.rowNumber = dateRows + 1;\n      variables.columns = 2;\n    } else if (type === \"quarterly\") {\n      variables.rowNumber = year.charAt(dateRows);\n      variables.columns = 0;\n    } else if (type === \"yearly\") {\n      variables.rowNumber = \"\";\n      variables.columns = 0;\n    }\n\n    return variables;\n  }\n\n  getCalendarRowItemVariables(options) {\n    const variables: any = {\n      currentItemDate: \"\",\n      rowItemText: \"\",\n      itemCount: null\n    };\n    const type = options.type;\n    const monthStartWeekNumber = options.monthStartWeekNumber;\n    const yearStartDate = options.yearStartDate;\n    const year = options.year;\n    const rowItem = options.rowItem;\n    const dateRows = options.dateRows;\n    const columns = options.columns;\n    const itemCount = rowItem + dateRows * columns + dateRows;\n    let currentItemDate = \"\";\n    let rowItemText = \"\";\n    let firstLastDayObject: any = {};\n\n    if (type === \"daily\") {\n      if (!_.isNil(monthStartWeekNumber) && !_.isNil(dateRows) && !_.isNil(year)) {\n        const yearStartDateDaily = moment()\n          .year(year)\n          .startOf(\"year\")\n          .format(DEFAULT_DATE_FROMAT);\n        currentItemDate = moment(yearStartDateDaily, DEFAULT_DATE_FROMAT)\n          .add(monthStartWeekNumber + dateRows - 1, \"week\")\n          .startOf(\"week\")\n          .add(rowItem, \"day\")\n          .format(DEFAULT_DATE_FROMAT);\n        rowItemText = moment(currentItemDate, DEFAULT_DATE_FROMAT).format(\"D\");\n      }\n    } else if (type === \"weekly\") {\n      if (!_.isNil(yearStartDate) && !_.isNil(itemCount)) {\n        currentItemDate = moment(yearStartDate, DEFAULT_DATE_FROMAT)\n          .add(itemCount, \"week\")\n          .endOf(\"week\")\n          .format(DEFAULT_DATE_FROMAT);\n        const weekNumber: any = itemCount + 1;\n        rowItemText = `W${weekNumber}`;\n      }\n    } else if (type === \"monthly\") {\n      if (!_.isNil(itemCount) && !_.isNil(year)) {\n        currentItemDate = moment()\n          .year(year)\n          .month(itemCount)\n          .endOf(\"month\")\n          .format(DEFAULT_DATE_FROMAT);\n        rowItemText = moment(currentItemDate, DEFAULT_DATE_FROMAT).format(\"MMM\");\n      }\n    } else if (type === \"quarterly\") {\n      if (!_.isNil(itemCount) && !_.isNil(year)) {\n        currentItemDate = moment()\n          .year(year)\n          .quarter(itemCount + 1)\n          .endOf(\"quarter\")\n          .format(DEFAULT_DATE_FROMAT);\n        rowItemText = `Quarter ${itemCount + 1}`;\n      }\n    }\n\n    firstLastDayObject = this.getFirstLastDay(currentItemDate, type);\n\n    variables.itemCount = itemCount;\n    variables.currentItemDate = currentItemDate;\n    variables.rowItemText = rowItemText;\n    variables.firstDay = firstLastDayObject.firstDay;\n    variables.lastDay = firstLastDayObject.lastDay;\n    return variables;\n  }\n\n  isRowIemValid(options): boolean {\n    let valid = false;\n    const type = options.type;\n    const year = options.year;\n    const itemCount = options.itemCount;\n    const retailCalendar = options.retailCalendar;\n    const validWeekCount = this.getYearlyWeekCount(year, retailCalendar);\n\n    if (type === \"daily\") {\n      valid = true;\n    } else if (type === \"weekly\") {\n      if (itemCount < validWeekCount) {\n        valid = true;\n      }\n    } else if (type === \"monthly\") {\n      return true;\n    } else if (type === \"quarterly\") {\n      return true;\n    }\n\n    return valid;\n  }\n\n  formatStartDate(config, returnFormat) {\n    const startDate = config ? config.startDate : null;\n    const type = config ? config.type : \"\";\n    let formattedStartDate = null;\n\n    if (startDate) {\n      formattedStartDate = moment(startDate, DEFAULT_DATE_FROMAT).format(returnFormat);\n      if (type === \"weekly\") {\n        formattedStartDate = moment(startDate, DEFAULT_DATE_FROMAT)\n          .startOf(\"week\")\n          .format(returnFormat);\n      } else if (type === \"monthly\") {\n        formattedStartDate = moment(startDate, DEFAULT_DATE_FROMAT)\n          .startOf(\"month\")\n          .format(returnFormat);\n      } else if (type === \"quarterly\") {\n        formattedStartDate = moment(startDate, DEFAULT_DATE_FROMAT)\n          .startOf(\"quarter\")\n          .format(returnFormat);\n      } else if (type === \"yearly\") {\n        formattedStartDate = moment(startDate, DEFAULT_DATE_FROMAT)\n          .startOf(\"year\")\n          .format(returnFormat);\n      }\n    }\n\n    return formattedStartDate;\n  }\n\n  getSelectedYear(config, date, side): string {\n    return moment(date, DEFAULT_DATE_FROMAT).format(\"YYYY\");\n  }\n\n  getFirstLastDay(date, type) {\n    let firstDay = \"\";\n    let lastDay = \"\";\n\n    if (type === \"daily\") {\n      firstDay = lastDay = date;\n    } else if (type === \"weekly\") {\n      firstDay = moment(date, DEFAULT_DATE_FROMAT)\n        .startOf(\"week\")\n        .format(DEFAULT_DATE_FROMAT);\n      lastDay = moment(date, DEFAULT_DATE_FROMAT)\n        .endOf(\"week\")\n        .format(DEFAULT_DATE_FROMAT);\n    } else if (type === \"monthly\") {\n      firstDay = moment(date, DEFAULT_DATE_FROMAT)\n        .startOf(\"month\")\n        .format(DEFAULT_DATE_FROMAT);\n      lastDay = moment(date, DEFAULT_DATE_FROMAT)\n        .endOf(\"month\")\n        .format(DEFAULT_DATE_FROMAT);\n    } else if (type === \"quarterly\") {\n      firstDay = moment(date, DEFAULT_DATE_FROMAT)\n        .startOf(\"quarter\")\n        .format(DEFAULT_DATE_FROMAT);\n      lastDay = moment(date, DEFAULT_DATE_FROMAT)\n        .endOf(\"quarter\")\n        .format(DEFAULT_DATE_FROMAT);\n    } else if (type === \"yearly\") {\n      firstDay = moment(date, DEFAULT_DATE_FROMAT)\n        .startOf(\"year\")\n        .format(DEFAULT_DATE_FROMAT);\n      lastDay = moment(date, DEFAULT_DATE_FROMAT)\n        .endOf(\"year\")\n        .format(DEFAULT_DATE_FROMAT);\n    }\n\n    return {\n      firstDay,\n      lastDay\n    };\n  }\n\n  getLocalTimezone() {\n    let tz = /\\((.*)\\)/.exec(new Date().toString())[1];\n\n    if (tz === \"Central Europe Standard Time\") {\n      tz = EU_TZ_CODE;\n    } else {\n      tz = DEFAULT_TIMEZONE_CODE;\n    }\n\n    return tz;\n  }\n\n  getZoneDate(tz, format, date?) {\n    if (date) {\n      date = moment(date, format)\n        .startOf(\"day\")\n        .valueOf();\n    } else {\n      date = moment().valueOf();\n    }\n\n    let today = new Date(date).toLocaleString(\"en-US\", {\n      timeZone: TZ_NAMES[tz]\n    });\n    today = moment(today, \"MM/DD/YYYY, hh:mm:ss A\");\n    return today;\n  }\n\n  getZoneToday(tz, viewDateFormat) {\n    const today = this.getZoneDate(tz, viewDateFormat);\n    return moment(today).format(`${viewDateFormat}  hh:mm A`);\n  }\n\n  formatToZoneDate(tz, format, date) {\n    const formattedDate = this.getZoneDate(tz, format, date);\n    return moment(formattedDate).format(`${format}`);\n  }\n\n  convertToViewTimeItem(item) {\n    let stringified_item = item + \"\";\n    if (stringified_item.length === 1) {\n      stringified_item = `0${stringified_item}`;\n    }\n    return stringified_item;\n  }\n\n  getWeekNumber(date): any {\n    if (date) {\n      const year = moment(date, \"YYYY-MM-DD\").year();\n      const month = moment(date, \"YYYY-MM-DD\").month();\n      const day = Number(moment(date, \"YYYY-MM-DD\").format(\"D\"));\n\n      const yearStartms = new Date(year, 0, 1);\n      const datems = new Date(year, month, day);\n      return Math.ceil(((datems.getTime() - yearStartms.getTime()) / 86400000 + yearStartms.getDay() + 1) / 7);\n    } else {\n      console.warn(\"getWeekNumber: Invalid date\");\n      return this.getNotAvailableText();\n    }\n  }\n}\n","import {\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnChanges,\n  Output,\n  Renderer,\n  SimpleChanges,\n  ViewChild,\n  ViewEncapsulation\n} from \"@angular/core\";\nimport { Observable } from \"rxjs\";\nimport { NgxDatetimeRangePickerConstants } from \"./ngx-datetime-range-picker.constants\";\nimport { NgxDatetimeRangePickerService } from \"./ngx-datetime-range-picker.service\";\nimport {\n  CalendarSides,\n  NgxDatetimeRangePickerModelItem,\n  NgxDatetimeRangePickerOptions,\n  NgxDatetimeRangePickerSettings\n} from \"./interfaces/index\";\n\ndeclare var require: any;\nconst moment = require(\"moment\");\nconst _ = require(\"lodash\");\n\nenum InputFocusBlur {\n  focus = 1,\n  blur = 2\n}\n\nconst DEFAULT_DATE_FROMAT = NgxDatetimeRangePickerConstants.DEFAULT.DATE_FROMAT;\nconst DEFAULT_TIME_FORMAT = NgxDatetimeRangePickerConstants.DEFAULT.TIME_FORMAT;\nconst DEFAULT_START_DATE = NgxDatetimeRangePickerConstants.DEFAULT.START_DATE;\nconst DEFAULT_END_DATE = NgxDatetimeRangePickerConstants.DEFAULT.END_DATE;\nconst DEFAULT_MIN_DATE = NgxDatetimeRangePickerConstants.DEFAULT.MIN_DATE;\nconst DEFAULT_MAX_DATE = NgxDatetimeRangePickerConstants.DEFAULT.MAX_DATE;\nconst DEFAULT_START_TIME = NgxDatetimeRangePickerConstants.DEFAULT.START_TIME;\nconst DEFAULT_END_TIME = NgxDatetimeRangePickerConstants.DEFAULT.END_TIME;\nconst TZ_CODES = NgxDatetimeRangePickerConstants.CONSTANT.TZ_CODES;\nconst USA_TZ_CODE = NgxDatetimeRangePickerConstants.CONSTANT.USA_TZ_CODE;\n\n@Component({\n  selector: \"ngx-datetime-range-picker\",\n  templateUrl: \"./ngx-datetime-range-picker.component.html\",\n  styleUrls: [\"./ngx-datetime-range-picker.component.scss\"],\n  encapsulation: ViewEncapsulation.None\n})\nexport class NgxDatetimeRangePickerComponent implements OnChanges {\n  @Input() options: NgxDatetimeRangePickerOptions;\n  @Input() settings: NgxDatetimeRangePickerSettings;\n  @Input() optionService: Observable<any>;\n  @Input() dateRangeModel: Object;\n  @Input() canBeEmpty = false;\n  @Output() dateRangeModelChange: EventEmitter<Object> = new EventEmitter<Object>();\n  @Output() dateRangeChanged: EventEmitter<NgxDatetimeRangePickerModelItem> = new EventEmitter<\n    NgxDatetimeRangePickerModelItem\n  >();\n  @Output() inputFocusBlur: EventEmitter<Object> = new EventEmitter<Object>();\n  @Output() selectedDate: EventEmitter<Object> = new EventEmitter<Object>();\n  @ViewChild(\"filterInputBox\") filterInputBox: any;\n\n  sides: string[] = [];\n  dates: CalendarSides = {\n    left: {} as Object,\n    right: {} as Object\n  };\n  calendarAvailable: CalendarSides = {\n    left: false as boolean,\n    right: false as boolean\n  };\n  showCalendar = false;\n  customRange = false;\n  selectedDateText = \"\";\n  dateTitleText: CalendarSides = {\n    left: \"\" as string,\n    right: \"\" as string\n  };\n  weekDayOptions: string[] = [\"su\", \"mo\", \"tu\", \"we\", \"th\", \"fr\", \"sa\"];\n  selectedMonth: CalendarSides = {\n    left: \"\" as string,\n    right: \"\" as string\n  };\n  selectedYear: CalendarSides = {\n    left: \"\" as string,\n    right: \"\" as string\n  };\n  activeItem: CalendarSides = {\n    left: \"\" as string,\n    right: \"\" as string\n  };\n  activeStartDate: string = null;\n  activeEndDate: string = null;\n  activeRange: string = null;\n  frequencyColumnHeader: string = null;\n\n  config: any = {};\n\n  isValidFilter = false;\n  isUserModelChange = true;\n\n  timezones: string[] = TZ_CODES;\n  localTimezone: string = this.ngxDateTimeRangePickerService.getLocalTimezone();\n  // Since 'useLocalTimezone: false' byDefault;\n  selectedTimezone: string;\n  todayTime = \"\";\n\n  timeItems: string[] = [\"hour\", \"minute\"];\n  times: CalendarSides = {\n    left: \"\" as string,\n    right: \"\" as string\n  };\n  selectedHour: CalendarSides = {\n    left: \"\" as string,\n    right: \"\" as string\n  };\n  selectedMinute: CalendarSides = {\n    left: \"\" as string,\n    right: \"\" as string\n  };\n  selectedMeridian: CalendarSides = {\n    left: \"\" as string,\n    right: \"\" as string\n  };\n\n  constructor(\n    public element: ElementRef,\n    private renderer: Renderer,\n    private ngxDateTimeRangePickerService: NgxDatetimeRangePickerService\n  ) {\n    this.options = this.ngxDateTimeRangePickerService.getDefaultOptions();\n    this.settings = this.ngxDateTimeRangePickerService.getDefaultSettings();\n    this.config = Object.assign(this.options, this.settings);\n\n    this.todayTime = this.ngxDateTimeRangePickerService.getZoneToday(this.selectedTimezone, this.config.viewDateFormat);\n\n    this.renderer.listenGlobal(\"document\", \"click\", (event: any) => {\n      if (\n        this.showCalendar &&\n        event.target &&\n        event.target.className !== \"mat-option-text\" &&\n        this.element.nativeElement !== event.target &&\n        !this.element.nativeElement.contains(event.target)\n      ) {\n        this.onCalendarClose(event);\n      }\n    });\n  }\n\n  public ngOnChanges(changes: SimpleChanges) {\n    this.isUserModelChange = true;\n\n    if (changes.canBeEmpty) {\n      this.canBeEmpty = changes.canBeEmpty.currentValue;\n    }\n\n    if (changes.settings) {\n      this.settings = _.merge(this.settings, changes.settings.currentValue);\n    }\n\n    if (changes.dateRangeModel) {\n      this.dateRangeModel = changes.dateRangeModel.currentValue;\n    }\n\n    // this.settings.selectedModel = (this.settings.selectedModel) ? this.settings.selectedModel : this.settings.type;\n\n    if (changes.dateRangeModel && !changes.dateRangeModel.firstChange) {\n      const previousValue = changes.dateRangeModel.previousValue[this.config.selectedModel];\n      const currentValue = changes.dateRangeModel.currentValue[this.config.selectedModel];\n      if (\n        previousValue &&\n        currentValue &&\n        previousValue.startDate === currentValue.startDate &&\n        previousValue.endDate === currentValue.endDate\n      ) {\n        this.isUserModelChange = false;\n      }\n    }\n\n    if (changes.optionService && changes.optionService.currentValue) {\n      changes.optionService.currentValue.subscribe(\n        (dateOptions: any) => {\n          if (_.isObject(dateOptions) && !_.isArray(dateOptions)) {\n            this.options = dateOptions.plain ? dateOptions.plain() : dateOptions;\n          }\n        },\n        (err) => {\n          console.error(\"DateRangePickerComponent | Filter Call Failure: \", err);\n        },\n        () => {\n          this.init();\n        }\n      );\n    }\n\n    if (changes.options) {\n      this.options = changes.options ? changes.options.currentValue : this.options;\n    }\n\n    if (!changes.optionService) {\n      this.init();\n    }\n  }\n\n  // Events\n  onDateRangeInputChange(value: string) {\n    this.dateRangeSelected();\n  }\n\n  setDisabledState(disabled: boolean): void {\n    this.config.componentDisabled = disabled;\n  }\n\n  onComponentClick(): void {\n    this.showCalendar = !this.showCalendar;\n  }\n\n  onFocusInput(event: any): void {\n    this.inputFocusBlur.emit({\n      reason: InputFocusBlur.focus,\n      value: event.target.value\n    });\n  }\n\n  onBlurInput(event: any): void {\n    this.selectedDateText = event.target.value;\n    this.inputFocusBlur.emit({\n      reason: InputFocusBlur.blur,\n      value: event.target.value\n    });\n  }\n\n  onCalendarClose(event: any): void {\n    if (this.config.startDate && this.config.endDate) {\n      this.filterInputBox.nativeElement.classList.remove(\"empty-filter\");\n      this.showCalendar = false;\n    } else {\n      // this.filterInputBox.nativeElement.classList.add('empty-filter');\n    }\n  }\n\n  isPrevAvailale(month) {\n    const minDate = this.ngxDateTimeRangePickerService.formatDateToDefaultFormat(\n      this.config.minDate,\n      DEFAULT_DATE_FROMAT\n    );\n    const currentMonthStartDate = moment(month, \"MMM YYYY\")\n      .startOf(\"month\")\n      .valueOf();\n    if (\n      currentMonthStartDate >\n      moment(minDate, DEFAULT_DATE_FROMAT)\n        .startOf(\"month\")\n        .valueOf()\n    ) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  isNextAvailale(month) {\n    const maxDate = this.ngxDateTimeRangePickerService.formatDateToDefaultFormat(\n      this.config.maxDate,\n      DEFAULT_DATE_FROMAT\n    );\n    const currentMonthEndDate = moment(month, \"MMM YYYY\")\n      .endOf(\"month\")\n      .valueOf();\n    if (\n      currentMonthEndDate <\n      moment(maxDate, DEFAULT_DATE_FROMAT)\n        .endOf(\"month\")\n        .valueOf()\n    ) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  getCalendarColspan() {\n    if (this.config.type === \"daily\") {\n      return 6;\n    } else if (this.config.type === \"weekly\") {\n      return 8;\n    } else if (this.config.type === \"monthly\") {\n      return 3;\n    } else if (this.config.type === \"quarterly\") {\n      return 1;\n    } else if (this.config.type === \"yearly\") {\n      return 1;\n    }\n  }\n\n  getCalendarRowItemColspan() {\n    if (this.config.type === \"monthly\") {\n      return 3;\n    } else if (this.config.type === \"quarterly\") {\n      return 6;\n    } else if (this.config.type === \"yearly\") {\n      return 6;\n    }\n  }\n\n  getDatecharacteristics(date, month, side) {\n    const currentDate = moment(date, DEFAULT_DATE_FROMAT)\n      .startOf(\"day\")\n      .valueOf();\n    const minDate = moment(\n      this.ngxDateTimeRangePickerService.formatDateToDefaultFormat(this.config.minDate, DEFAULT_DATE_FROMAT),\n      DEFAULT_DATE_FROMAT\n    )\n      .startOf(\"day\")\n      .valueOf();\n    const maxDate = moment(\n      this.ngxDateTimeRangePickerService.formatDateToDefaultFormat(this.config.maxDate, DEFAULT_DATE_FROMAT),\n      DEFAULT_DATE_FROMAT\n    )\n      .startOf(\"day\")\n      .valueOf();\n    const startDate = moment(\n      this.ngxDateTimeRangePickerService.formatDateToDefaultFormat(this.config.startDate, DEFAULT_DATE_FROMAT),\n      DEFAULT_DATE_FROMAT\n    )\n      .startOf(\"day\")\n      .valueOf();\n    const endDate = moment(\n      this.ngxDateTimeRangePickerService.formatDateToDefaultFormat(this.config.endDate, DEFAULT_DATE_FROMAT),\n      DEFAULT_DATE_FROMAT\n    )\n      .startOf(\"day\")\n      .valueOf();\n    const currentMonthStartDate = moment(month, \"MMM YYYY\")\n      .startOf(\"month\")\n      .startOf(\"day\")\n      .valueOf();\n    const currentMonthEndDate = moment(month, \"MMM YYYY\")\n      .endOf(\"month\")\n      .startOf(\"day\")\n      .valueOf();\n\n    const available: boolean = this.ngxDateTimeRangePickerService.isDateAvailable(\n      currentDate,\n      minDate,\n      maxDate,\n      startDate,\n      endDate,\n      currentMonthStartDate,\n      currentMonthEndDate,\n      this.config\n    );\n    const inRange: boolean = this.ngxDateTimeRangePickerService.isDateInRange(\n      currentDate,\n      minDate,\n      maxDate,\n      startDate,\n      endDate,\n      currentMonthStartDate,\n      currentMonthEndDate,\n      available,\n      this.config\n    );\n    const active: boolean = this.ngxDateTimeRangePickerService.isDateActive(currentDate, startDate, endDate, side);\n    const today: boolean = this.ngxDateTimeRangePickerService.isDateToday(currentDate, this.config);\n\n    // Active\n    if (currentDate === startDate && side === \"left\") {\n      this.activeStartDate = date;\n    } else if (currentDate === endDate && side === \"right\") {\n      this.activeEndDate = date;\n    }\n\n    return {\n      available,\n      inRange,\n      active,\n      today\n    };\n  }\n\n  onClickPrevious(month, side) {\n    const startDate = moment(month, \"MMM YYYY\")\n      .subtract(1, \"month\")\n      .startOf(\"month\")\n      .format(DEFAULT_DATE_FROMAT);\n    this.dates[side] = this.generateCalendar(startDate, side);\n  }\n\n  onClickNext(month, side) {\n    const endDate = moment(month, \"MMM YYYY\")\n      .add(1, \"month\")\n      .endOf(\"month\")\n      .format(DEFAULT_DATE_FROMAT);\n    this.dates[side] = this.generateCalendar(endDate, side);\n  }\n\n  onCellClick(item, itemCell, side) {\n    const date = item.date ? moment(item.date, DEFAULT_DATE_FROMAT).valueOf() : item.date;\n    const startDate = this.config.startDate\n      ? moment(this.config.startDate, DEFAULT_DATE_FROMAT).valueOf()\n      : this.config.startDate;\n    const endDate = this.config.endDate\n      ? moment(this.config.endDate, DEFAULT_DATE_FROMAT).valueOf()\n      : this.config.endDate;\n    const minDate = this.config.minDate\n      ? moment(this.config.minDate, DEFAULT_DATE_FROMAT).valueOf()\n      : this.config.minDate;\n    const maxDate = this.config.maxDate\n      ? moment(this.config.maxDate, DEFAULT_DATE_FROMAT).valueOf()\n      : this.config.maxDate;\n\n    if (!item.available) {\n      if (date < minDate || date > maxDate) {\n        return;\n      }\n      this.dates[side] = this.generateCalendar(item.date, side);\n    }\n\n    if (endDate || date < startDate) {\n      this.config.endDate = null;\n      this.config.startDate = item.date;\n      this.activeItem.left = item;\n    } else if (!endDate && date < startDate) {\n      this.config.endDate = _.cloneDeep(this.config.startDate);\n      this.activeItem.right = item;\n    } else {\n      this.config.endDate = item.date;\n      this.activeItem.right = item;\n    }\n\n    if (this.config.singleDatePicker) {\n      this.config.endDate = _.cloneDeep(this.config.startDate);\n      this.activeItem.right = this.activeItem.left = item;\n    }\n\n    this.doApply();\n  }\n\n  onCellMouseEnter(item, itemCell): void {\n    if (!item.available) {\n      return;\n    }\n\n    const date = item.date ? moment(item.date, DEFAULT_DATE_FROMAT).valueOf() : item.date;\n    const startDate = this.config.startDate\n      ? moment(this.config.startDate, DEFAULT_DATE_FROMAT).valueOf()\n      : this.config.startDate;\n    const endDate = this.config.endDate\n      ? moment(this.config.endDate, DEFAULT_DATE_FROMAT).valueOf()\n      : this.config.endDate;\n    let hoverItemFirstDate = itemCell ? itemCell.getAttribute(\"firstDay\") : \"\";\n    let hoverItemLastDate = itemCell ? itemCell.getAttribute(\"lastDay\") : \"\";\n    const hoverItemText = itemCell ? itemCell.innerText : \"\";\n    hoverItemFirstDate = moment(hoverItemFirstDate, DEFAULT_DATE_FROMAT).format(this.config.viewDateFormat);\n    hoverItemLastDate = moment(hoverItemLastDate, DEFAULT_DATE_FROMAT).format(this.config.viewDateFormat);\n\n    let activeItemInputFieldText = `${hoverItemText} (${hoverItemFirstDate} - ${hoverItemLastDate})`;\n\n    if (this.config.type === \"daily\") {\n      activeItemInputFieldText = `${hoverItemLastDate}`;\n    }\n\n    if (!endDate) {\n      _.forOwn(this.dates, (sideDates, side) => {\n        _.forEach(sideDates.itemRows, (rows) => {\n          _.forEach(rows.items, (rowItem) => {\n            if (rowItem.available) {\n              const hoverItemDate = rowItem.date ? moment(rowItem.date, DEFAULT_DATE_FROMAT).valueOf() : rowItem.date;\n              if ((hoverItemDate > startDate && hoverItemDate < date) || date === hoverItemDate) {\n                rowItem.inRange = true;\n                this.dateTitleText.right = activeItemInputFieldText;\n              }\n            }\n          });\n        });\n      });\n    } else {\n      if (this.config.singleDatePicker) {\n        this.dateTitleText.right = activeItemInputFieldText;\n      } else {\n        this.dateTitleText.left = activeItemInputFieldText;\n      }\n    }\n  }\n\n  onCellMouseLeave(): void {\n    if (!this.config.endDate) {\n      _.forOwn(this.dates, (sideDates, side) => {\n        _.forEach(sideDates.itemRows, (rows) => {\n          _.forEach(rows.items, (item) => {\n            item.inRange = false;\n          });\n        });\n      });\n    } else {\n      this.updateActiveItemInputField();\n    }\n  }\n\n  onRangeClick(rangeLabel, dateRangeModel: any) {\n    this.activeRange = rangeLabel;\n    if (rangeLabel === \"Custom Range\") {\n      this.customRange = !this.customRange;\n      if (this.customRange) {\n        this.updateCalendar();\n      } else {\n        this.sides.length = 0;\n        this.dates = {};\n        if (this.config.timePicker) {\n          this.times = {};\n        }\n      }\n    } else {\n      this.config.startDate = dateRangeModel.startDate;\n      this.config.endDate = dateRangeModel.endDate;\n      if (this.config.timePicker) {\n        // _.forEach(this.sides, (side) => {\n        //   this.times[side] = this.generateTimePicker(null, side);\n        // })\n        if (this.config.timePicker) {\n          this.times = {};\n        }\n        this.updateCalendar();\n      }\n      this.setActiveItemOnRangeClick();\n    }\n  }\n\n  updateCalendar() {\n    this.sides.length = 0;\n    this.dates = {};\n    // takes 223 milliSeconds\n    // Order is important left - right\n    if (!this.config.singleDatePicker) {\n      this.sides.push(\"left\");\n      this.dates.left = this.generateCalendar(this.config.startDate, \"left\");\n      if (this.config.timePicker) {\n        this.times.left = this.generateTimePicker(this.config.startTime, \"left\");\n      }\n    }\n    this.sides.push(\"right\");\n    this.dates.right = this.generateCalendar(this.config.endDate, \"right\");\n    if (this.config.timePicker) {\n      this.times.right = this.generateTimePicker(this.config.endTime, \"right\");\n    }\n  }\n\n  onCalendarLabelChange(label, side, type) {\n    this.showCalendar = true;\n    if (type === \"month\") {\n      this.selectedMonth[side] = label;\n    } else if (type === \"year\") {\n      this.selectedYear[side] = label;\n    }\n\n    if (this.config.type !== \"daily\") {\n      this.selectedMonth[side] = \"Jun\";\n    }\n\n    if (this.config.type !== \"yearly\") {\n      const selectedMonth = `${this.selectedMonth[side]} ${this.selectedYear[side]}`;\n      const date = moment(selectedMonth, \"MMM YYYY\")\n        .startOf(\"month\")\n        .format(DEFAULT_DATE_FROMAT);\n      this.dates[side] = this.generateCalendar(date, side);\n    } else {\n      if (this.selectedYear.left <= this.selectedYear.right && side === \"right\") {\n        this.config.startDate = moment(this.selectedYear.left, \"YYYY\")\n          .startOf(\"year\")\n          .format(DEFAULT_DATE_FROMAT);\n        this.config.endDate = moment(this.selectedYear.right, \"YYYY\")\n          .endOf(\"year\")\n          .format(DEFAULT_DATE_FROMAT);\n\n        this.doApply();\n      }\n      const config = {\n        startDate: moment(this.selectedYear.left, \"YYYY\")\n          .startOf(\"year\")\n          .format(DEFAULT_DATE_FROMAT),\n        type: \"yearly\"\n      };\n      const startDate = this.ngxDateTimeRangePickerService.formatStartDate(config, this.config.viewDateFormat);\n      const endDate = this.config.endDate\n        ? moment(this.config.endDate, DEFAULT_DATE_FROMAT).format(this.config.viewDateFormat)\n        : \"\";\n      this.dateTitleText.left = `${startDate}`;\n      this.dateTitleText.right = `${endDate}`;\n    }\n  }\n\n  onTimeLabelChange(timeItem, side, item) {\n    let time = null;\n    if (side === \"left\") {\n      time = this.config.startTime.split(\":\");\n      if (timeItem === \"hour\") {\n        this.config.startTime = `${item}:${time[1]}`;\n      } else {\n        this.config.startTime = `${time[0]}:${item}`;\n      }\n\n      const startDateEpoch = moment(this.config.startDate, DEFAULT_DATE_FROMAT).valueOf();\n      const endDateEpoch = moment(this.config.endDate, DEFAULT_DATE_FROMAT).valueOf();\n      if (startDateEpoch === endDateEpoch) {\n        this.times.right = this.generateTimePicker(this.config.startTime, \"right\");\n      }\n    } else {\n      time = this.config.endTime.split(\":\");\n      if (timeItem === \"hour\") {\n        this.config.endTime = `${item}:${time[1]}`;\n      } else {\n        this.config.endTime = `${time[0]}:${item}`;\n      }\n    }\n\n    if (timeItem === \"hour\") {\n      this.selectedHour[side] = this.ngxDateTimeRangePickerService.convertToViewTimeItem(item);\n    } else {\n      this.selectedMinute[side] = this.ngxDateTimeRangePickerService.convertToViewTimeItem(item);\n    }\n  }\n\n  onTimeApply() {\n    this.dateRangeSelected();\n    this.updateInputField();\n  }\n\n  // Helpers\n  init() {\n    if (this.isUserModelChange) {\n      this.isValidFilter = false;\n      this.config = Object.assign(\n        this.ngxDateTimeRangePickerService.getDefaultOptions(),\n        this.ngxDateTimeRangePickerService.getDefaultSettings()\n      );\n      this.initialize();\n      this.parseOptions();\n      this.updateInputField();\n    }\n  }\n\n  initialize() {\n    this.sides.length = 0;\n    this.dates = {};\n    this.calendarAvailable = {\n      left: false as boolean,\n      right: false as boolean\n    };\n    this.showCalendar = false;\n    this.selectedDateText = \"\";\n    this.dateTitleText = {\n      left: \"\" as string,\n      right: \"\" as string\n    };\n    this.weekDayOptions = [\"su\", \"mo\", \"tu\", \"we\", \"th\", \"fr\", \"sa\"];\n    this.selectedMonth = {\n      left: \"\" as string,\n      right: \"\" as string\n    };\n    this.selectedYear = {\n      left: \"\" as string,\n      right: \"\" as string\n    };\n    // this.activeItem = {\n    //   'left': <string> '',\n    //   'right': <string> ''\n    // };\n    this.times = {\n      left: \"\" as string,\n      right: \"\" as string\n    };\n    this.activeStartDate = null;\n    this.activeEndDate = null;\n    this.frequencyColumnHeader = null;\n    this.customRange = false;\n    this.activeRange = \"\";\n  }\n\n  parseOptions(): void {\n    if (this.options !== undefined) {\n      Object.keys(this.options).forEach((k) => {\n        this.config[k] = this.options[k];\n      });\n    }\n    if (this.settings !== undefined) {\n      Object.keys(this.settings).forEach((k) => {\n        this.config[k] = this.settings[k];\n      });\n    }\n\n    this.config.selectedModel = this.config.selectedModel ? this.config.selectedModel : this.config.type;\n\n    if (this.config.type === \"weekly\" || this.config.type === \"yearly\") {\n      this.config.showRowNumber = false;\n    }\n    if (this.config.singleDatePicker) {\n      this.config.startDate = _.cloneDeep(this.config.endDate);\n    }\n\n    this.selectTimeZone();\n    this.parseOptionsToDefaultDateFormat();\n    this.processDateRangeModel();\n    this.handleDateArray();\n    this.sanitizeDates();\n    this.processRanges();\n    this.doDateRangeModelChange();\n    // this.config.selectedModel = undefined;\n  }\n\n  selectTimeZone() {\n    if (this.config.timezoneSupport) {\n      if (!this.config.defaultTimezone) {\n        this.config.defaultTimezone = USA_TZ_CODE;\n      }\n      this.selectedTimezone = this.config.defaultTimezone;\n    }\n\n    if (this.config.useLocalTimezone) {\n      this.selectedTimezone = this.localTimezone;\n    }\n    this.onTimezoneChange(this.selectedTimezone);\n  }\n\n  parseOptionsToDefaultDateFormat() {\n    this.config.minDate = this.config.minDate\n      ? this.ngxDateTimeRangePickerService.formatDateToDefaultFormat(this.config.minDate, this.config.inputDateFormat)\n      : DEFAULT_MIN_DATE;\n    this.config.maxDate = this.config.maxDate\n      ? this.ngxDateTimeRangePickerService.formatDateToDefaultFormat(this.config.maxDate, this.config.inputDateFormat)\n      : DEFAULT_MAX_DATE;\n    this.config.startDate = this.config.startDate\n      ? this.ngxDateTimeRangePickerService.formatDateToDefaultFormat(this.config.startDate, this.config.inputDateFormat)\n      : DEFAULT_START_DATE;\n    this.config.endDate = this.config.endDate\n      ? this.ngxDateTimeRangePickerService.formatDateToDefaultFormat(this.config.endDate, this.config.inputDateFormat)\n      : DEFAULT_END_DATE;\n\n    if (this.config.timePicker) {\n      this.config.minTime = this.config.minTime\n        ? this.ngxDateTimeRangePickerService.formatTimeToDefaultFormat(this.config.minTime)\n        : DEFAULT_START_TIME;\n      this.config.maxTime = this.config.maxTime\n        ? this.ngxDateTimeRangePickerService.formatTimeToDefaultFormat(this.config.maxTime)\n        : DEFAULT_END_TIME;\n      this.config.startTime = this.config.startTime\n        ? this.ngxDateTimeRangePickerService.formatTimeToDefaultFormat(this.config.startTime)\n        : DEFAULT_START_TIME;\n      this.config.endTime = this.config.endTime\n        ? this.ngxDateTimeRangePickerService.formatTimeToDefaultFormat(this.config.endTime)\n        : DEFAULT_END_TIME;\n    }\n  }\n\n  /**\n   * @desc sets startDate, endDate\n   */\n  processDateRangeModel() {\n    if (undefined !== this.dateRangeModel && !_.isEmpty(this.dateRangeModel)) {\n      if (this.dateRangeModel[this.config.selectedModel]) {\n        const dateRangeMinDate = this.dateRangeModel[this.config.selectedModel].minDate;\n        const dateRangeMaxDate = this.dateRangeModel[this.config.selectedModel].maxDate;\n        const dateRangeStartDate = this.dateRangeModel[this.config.selectedModel].startDate;\n        const dateRangeEndDate = this.dateRangeModel[this.config.selectedModel].endDate;\n        const dateRangeDateArray = this.dateRangeModel[this.config.selectedModel].dateArray;\n\n        this.config.dateArray = dateRangeDateArray ? dateRangeDateArray : this.config.dateArray;\n        this.config.minDate = dateRangeMinDate\n          ? this.ngxDateTimeRangePickerService.formatDateToDefaultFormat(dateRangeMinDate, this.config.inputDateFormat)\n          : this.config.minDate;\n        this.config.maxDate = dateRangeMaxDate\n          ? this.ngxDateTimeRangePickerService.formatDateToDefaultFormat(dateRangeMaxDate, this.config.inputDateFormat)\n          : this.config.maxDate;\n        this.config.startDate = dateRangeStartDate\n          ? this.ngxDateTimeRangePickerService.formatDateToDefaultFormat(\n              dateRangeStartDate,\n              this.config.inputDateFormat\n            )\n          : this.config.startDate;\n        this.config.endDate = dateRangeEndDate\n          ? this.ngxDateTimeRangePickerService.formatDateToDefaultFormat(dateRangeEndDate, this.config.inputDateFormat)\n          : this.config.endDate;\n\n        if (this.config.timePicker) {\n          const dateRangeMinTime = this.dateRangeModel[this.config.selectedModel].minTime;\n          const dateRangeMaxTime = this.dateRangeModel[this.config.selectedModel].maxTime;\n          const dateRangeStartTime = this.dateRangeModel[this.config.selectedModel].startTime;\n          const dateRangeEndTime = this.dateRangeModel[this.config.selectedModel].endTime;\n          this.config.minTime = this.config.minTime\n            ? this.ngxDateTimeRangePickerService.formatTimeToDefaultFormat(dateRangeMinTime)\n            : this.config.minTime;\n          this.config.maxTime = this.config.maxTime\n            ? this.ngxDateTimeRangePickerService.formatTimeToDefaultFormat(dateRangeMaxTime)\n            : this.config.maxTime;\n          this.config.startTime = this.config.startTime\n            ? this.ngxDateTimeRangePickerService.formatTimeToDefaultFormat(dateRangeStartTime)\n            : this.config.startTime;\n          this.config.endTime = this.config.endTime\n            ? this.ngxDateTimeRangePickerService.formatTimeToDefaultFormat(dateRangeEndTime)\n            : this.config.endTime;\n        }\n      }\n    }\n  }\n\n  /**\n   * @desc sets minDate, maxDate, startDate, endDate if not passed\n   */\n  handleDateArray() {\n    if (this.config.dateArray && this.config.dateArray.length > 0) {\n      this.config.dateArray = this.ngxDateTimeRangePickerService.getSanitizedDateArray(this.config);\n\n      // sort in asc order\n      this.config.dateArray = _.sortBy(this.config.dateArray, (date) => {\n        let format = null;\n        if (isNaN(Number(date))) {\n          if (this.config.inputDateFormat) {\n            format = this.config.inputDateFormat;\n          } else {\n            format = moment(date)._f;\n          }\n        }\n        const value = moment(date, format).valueOf();\n        if (!isNaN(value)) {\n          return value;\n        } else {\n          console.warn(\n            \"ERR_NGX_DATETIME_RANGE_PICKER: dateArray values are in unknown format. Pass the format or pass the dates in known format\"\n          );\n        }\n      });\n\n      const minDate = this.config.dateArray[0];\n      const maxDate = this.config.dateArray[this.config.dateArray.length - 1];\n\n      if (\n        moment(this.config.minDate, DEFAULT_DATE_FROMAT).valueOf() ===\n        moment(DEFAULT_MIN_DATE, DEFAULT_DATE_FROMAT).valueOf()\n      ) {\n        this.config.minDate = this.ngxDateTimeRangePickerService.formatDateToDefaultFormat(\n          minDate,\n          this.config.inputDateFormat\n        );\n      }\n      if (\n        moment(this.config.maxDate, DEFAULT_DATE_FROMAT).valueOf() ===\n        moment(DEFAULT_MAX_DATE, DEFAULT_DATE_FROMAT).valueOf()\n      ) {\n        this.config.maxDate = this.ngxDateTimeRangePickerService.formatDateToDefaultFormat(\n          maxDate,\n          this.config.inputDateFormat\n        );\n      }\n      if (\n        moment(this.config.startDate, DEFAULT_DATE_FROMAT).valueOf() ===\n        moment(DEFAULT_START_DATE, DEFAULT_DATE_FROMAT).valueOf()\n      ) {\n        this.config.startDate = this.ngxDateTimeRangePickerService.formatDateToDefaultFormat(\n          minDate,\n          this.config.inputDateFormat\n        );\n      }\n      if (\n        moment(this.config.endDate, DEFAULT_DATE_FROMAT).valueOf() ===\n        moment(DEFAULT_END_DATE, DEFAULT_DATE_FROMAT).valueOf()\n      ) {\n        this.config.endDate = this.ngxDateTimeRangePickerService.formatDateToDefaultFormat(\n          maxDate,\n          this.config.inputDateFormat\n        );\n      }\n    }\n  }\n\n  sanitizeDates() {\n    const subtractWeekCount = 0;\n    if (this.config.type === \"monthly\") {\n      this.config.minDate = moment(this.config.minDate, DEFAULT_DATE_FROMAT)\n        .endOf(\"month\")\n        .format(DEFAULT_DATE_FROMAT);\n      this.config.maxDate = moment(this.config.maxDate, DEFAULT_DATE_FROMAT)\n        .subtract(subtractWeekCount, \"week\")\n        .endOf(\"month\")\n        .format(DEFAULT_DATE_FROMAT);\n      this.config.startDate = moment(this.config.startDate, DEFAULT_DATE_FROMAT)\n        .endOf(\"month\")\n        .format(DEFAULT_DATE_FROMAT);\n      this.config.endDate = moment(this.config.endDate, DEFAULT_DATE_FROMAT)\n        .subtract(subtractWeekCount, \"week\")\n        .endOf(\"month\")\n        .format(DEFAULT_DATE_FROMAT);\n    } else if (this.config.type === \"quarterly\") {\n      this.config.minDate = moment(this.config.minDate, DEFAULT_DATE_FROMAT)\n        .endOf(\"quarter\")\n        .format(DEFAULT_DATE_FROMAT);\n      this.config.maxDate = moment(this.config.maxDate, DEFAULT_DATE_FROMAT)\n        .subtract(subtractWeekCount, \"week\")\n        .endOf(\"quarter\")\n        .format(DEFAULT_DATE_FROMAT);\n      this.config.startDate = moment(this.config.startDate, DEFAULT_DATE_FROMAT)\n        .endOf(\"quarter\")\n        .format(DEFAULT_DATE_FROMAT);\n      this.config.endDate = moment(this.config.endDate, DEFAULT_DATE_FROMAT)\n        .subtract(subtractWeekCount, \"week\")\n        .endOf(\"quarter\")\n        .format(DEFAULT_DATE_FROMAT);\n    }\n\n    if (this.config.type === \"weekly\") {\n      this.config.minDate = moment(this.config.minDate, DEFAULT_DATE_FROMAT)\n        .endOf(\"week\")\n        .format(DEFAULT_DATE_FROMAT);\n      this.config.maxDate = moment(this.config.maxDate, DEFAULT_DATE_FROMAT)\n        .endOf(\"week\")\n        .format(DEFAULT_DATE_FROMAT);\n      this.config.startDate = moment(this.config.startDate, DEFAULT_DATE_FROMAT)\n        .endOf(\"week\")\n        .format(DEFAULT_DATE_FROMAT);\n      this.config.endDate = moment(this.config.endDate, DEFAULT_DATE_FROMAT)\n        .endOf(\"week\")\n        .format(DEFAULT_DATE_FROMAT);\n\n      if (this.config.type === \"yearly\") {\n        const minDate = moment(this.config.minDate, DEFAULT_DATE_FROMAT).format(DEFAULT_DATE_FROMAT);\n        const startDate = moment(this.config.startDate, DEFAULT_DATE_FROMAT).format(DEFAULT_DATE_FROMAT);\n        this.config.minDate = minDate;\n        this.config.startDate = startDate;\n      }\n    }\n\n    if (\n      moment(this.config.startDate, DEFAULT_DATE_FROMAT).valueOf() <\n      moment(this.config.minDate, DEFAULT_DATE_FROMAT).valueOf()\n    ) {\n      this.config.minDate = this.config.startDate;\n    }\n\n    if (\n      moment(this.config.endDate, DEFAULT_DATE_FROMAT).valueOf() >\n      moment(this.config.maxDate, DEFAULT_DATE_FROMAT).valueOf()\n    ) {\n      this.config.maxDate = this.config.endDate;\n    }\n  }\n\n  processRanges() {\n    if (this.config.showRanges && !this.config.singleDatePicker) {\n      if (_.isEmpty(this.config.availableRanges)) {\n        this.config.availableRanges = this.ngxDateTimeRangePickerService.createDefaultRanges(this.config);\n      }\n      this.selectActiveRange();\n    } else {\n      this.activeRange = \"Custom Range\";\n      this.onRangeClick(this.activeRange, null);\n    }\n  }\n\n  selectActiveRange() {\n    _.forOwn(this.config.availableRanges, (rangeModel, range) => {\n      if (this.config.startDate === rangeModel.startDate && this.config.endDate === rangeModel.endDate) {\n        this.activeRange = range;\n        this.updateActiveItem();\n      }\n    });\n\n    if (!this.activeRange) {\n      this.activeRange = \"Custom Range\";\n      this.onRangeClick(this.activeRange, null);\n    }\n  }\n\n  generateCalendar(date, side) {\n    this.selectedMonth[side] = moment(date, DEFAULT_DATE_FROMAT).format(\"MMM\");\n    this.selectedYear[side] = this.ngxDateTimeRangePickerService.getSelectedYear(this.config, date, side);\n    const calendarLabel = `${this.selectedMonth[side]} ${this.selectedYear[side]}`;\n\n    const dates = {\n      label: calendarLabel as string,\n      months: this.ngxDateTimeRangePickerService.getMonthsAvailable(\n        this.config.minDate,\n        this.config.maxDate,\n        this.selectedYear[side]\n      ),\n      years: this.ngxDateTimeRangePickerService.getYearsAvailable(this.config),\n      itemRows: [] as Object[]\n    };\n\n    this.weekDayOptions = [\"\"];\n\n    if (this.config.type !== \"yearly\") {\n      // moment returns wrong week number\n      const monthStartWeekNumber: number = moment(date, DEFAULT_DATE_FROMAT)\n        .year(this.selectedYear[side])\n        .startOf(\"month\")\n        .week(); // previousMonthLastWeek\n      const yearStartDate = moment(this.selectedYear[side], \"YYYY\")\n        .startOf(\"year\")\n        .format(DEFAULT_DATE_FROMAT);\n      let numberOfRows = 1;\n      let rowNumber: any = 0;\n      let columns: any = 0;\n      let currentItemDate = \"\";\n      let datecharacteristics: any = {};\n      let rowItemText = \"\";\n      let rowVariables: any = {};\n      let rowItemVariables: any = {};\n      let firstDay = \"\";\n      let lastDay = \"\";\n\n      if (this.config.type === \"daily\") {\n        numberOfRows = this.ngxDateTimeRangePickerService.getNumberOfWeeks(date);\n        this.weekDayOptions = [\"su\", \"mo\", \"tu\", \"we\", \"th\", \"fr\", \"sa\"];\n      } else if (this.config.type === \"weekly\") {\n        numberOfRows = 8;\n        this.weekDayOptions = [\"\", \"\", \"\", \"\", \"\", \"\", \"\"];\n      } else if (this.config.type === \"monthly\") {\n        numberOfRows = 4;\n        this.weekDayOptions = [\"\", \"\", \"\"];\n      } else if (this.config.type === \"quarterly\") {\n        numberOfRows = 4;\n        this.weekDayOptions = [\"\"];\n      }\n\n      for (let dateRows = 0; dateRows < numberOfRows; dateRows++) {\n        const dateRowObj = {\n          rowNumber: null as string,\n          rowNumberText: null as string,\n          items: [] as Object[]\n        };\n\n        const rowOptions: any = {};\n        rowOptions.type = this.config.type;\n        rowOptions.monthStartWeekNumber = monthStartWeekNumber;\n        rowOptions.dateRows = dateRows;\n        rowOptions.year = this.selectedYear[side];\n        rowVariables = this.ngxDateTimeRangePickerService.getCalendarRowVariables(rowOptions);\n\n        rowNumber = rowVariables.rowNumber;\n        columns = rowVariables.columns;\n\n        dateRowObj.rowNumber = rowNumber;\n        dateRowObj.rowNumberText = this.ngxDateTimeRangePickerService.getCalendarRowNumberText(\n          this.config.type,\n          rowNumber\n        );\n\n        for (let rowItem = 0; rowItem <= columns; rowItem++) {\n          const rowItemOptions: any = {};\n          rowItemOptions.type = this.config.type;\n          rowItemOptions.monthStartWeekNumber = monthStartWeekNumber;\n          rowItemOptions.dateRows = dateRows;\n          rowItemOptions.rowNumber = rowNumber;\n          rowItemOptions.yearStartDate = yearStartDate;\n          rowItemOptions.year = this.selectedYear[side];\n          rowItemOptions.rowItem = rowItem;\n          rowItemOptions.columns = columns;\n          rowItemOptions.year = this.selectedYear[side];\n          rowItemVariables = this.ngxDateTimeRangePickerService.getCalendarRowItemVariables(rowItemOptions);\n\n          currentItemDate = rowItemVariables.currentItemDate;\n          rowItemText = rowItemVariables.rowItemText;\n          firstDay = rowItemVariables.firstDay;\n          lastDay = rowItemVariables.lastDay;\n          rowOptions.itemCount = rowItemVariables.itemCount;\n          datecharacteristics = this.getDatecharacteristics(currentItemDate, calendarLabel, side);\n\n          const itemObj = {\n            date: currentItemDate,\n            rowItemText,\n            firstDay,\n            lastDay,\n            available: datecharacteristics.available,\n            inRange: datecharacteristics.inRange,\n            active: datecharacteristics.active,\n            today: datecharacteristics.today\n          };\n          if (this.ngxDateTimeRangePickerService.isRowIemValid(rowOptions)) {\n            if (datecharacteristics.active) {\n              this.activeItem[side] = itemObj;\n            }\n            dateRowObj.items.push(itemObj);\n          }\n        }\n        dates.itemRows.push(dateRowObj);\n      }\n    }\n\n    this.calendarAvailable[side] = true;\n    return dates;\n  }\n\n  generateTimePicker(time, side) {\n    const timeObject = {\n      hour: [],\n      minute: [],\n      meridian: []\n    };\n\n    let startHour = 0;\n    const endHour = 23;\n    let startMinute = 0;\n    const endMinute = 59;\n    let selectedHour = side === \"left\" ? startHour : endHour;\n    let selectedMinute = side === \"left\" ? startMinute : endMinute;\n    const startDateEpoch = moment(this.config.startDate, DEFAULT_DATE_FROMAT).valueOf();\n    const endDateEpoch = moment(this.config.endDate, DEFAULT_DATE_FROMAT).valueOf();\n\n    if (time) {\n      selectedHour = moment(time, DEFAULT_TIME_FORMAT).format(\"H\");\n      selectedMinute = moment(time, DEFAULT_TIME_FORMAT).format(\"m\");\n\n      if (side === \"right\" && startDateEpoch === endDateEpoch) {\n        startHour = selectedHour;\n        startMinute = selectedMinute;\n      }\n    }\n\n    // let dateOptions = {\n    //   timeZone: TZ_NAMES[this.selectedTimezone],\n    //   timeZoneName: 'short',\n    //   hour12: false\n    // }\n    // let startDateObj = new Date(`Jan 1 1970 ${startHour}:${startMinute}:00 GMT-0700 (Mountain Standard Time)`);\n    // let endDateObj = new Date(`Jan 1 1970 ${endHour}:${endMinute}:00 GMT-0700 (Mountain Standard Time)`);\n    // startTime = startDateObj.toLocaleTimeString('en-US', dateOptions);\n    // endTime = endDateObj.toLocaleTimeString('en-US', dateOptions);\n\n    // startHour = moment(startTime, 'HH:mm:ss').format('H');\n    // endHour = moment(endTime, 'HH:mm:ss').format('H');\n    // startMinute = moment(startTime, 'HH:mm:ss').format('m');\n    // endMinute = moment(endTime, 'HH:mm:ss').format('m');\n\n    for (let h = startHour; h <= 23; h++) {\n      const stringified_h = this.ngxDateTimeRangePickerService.convertToViewTimeItem(h);\n      timeObject.hour.push(stringified_h);\n    }\n    for (let m = startMinute; m <= 59; m++) {\n      const stringified_m = this.ngxDateTimeRangePickerService.convertToViewTimeItem(m);\n      timeObject.minute.push(stringified_m);\n    }\n\n    this.selectedHour[side] = this.ngxDateTimeRangePickerService.convertToViewTimeItem(selectedHour);\n    this.selectedMinute[side] = this.ngxDateTimeRangePickerService.convertToViewTimeItem(selectedMinute);\n\n    if (side === \"left\") {\n      this.config.startTime = `${this.selectedHour[side]}:${this.selectedMinute[side]}`;\n    } else if (side === \"right\") {\n      this.config.endTime = `${this.selectedHour[side]}:${this.selectedMinute[side]}`;\n    }\n\n    return timeObject;\n  }\n\n  capitalize(day) {\n    return _.capitalize(day);\n  }\n\n  updateInputField() {\n    const startDate = this.ngxDateTimeRangePickerService.formatStartDate(this.config, this.config.viewDateFormat);\n    const endDate = this.config.endDate\n      ? moment(this.config.endDate, DEFAULT_DATE_FROMAT).format(this.config.viewDateFormat)\n      : \"\";\n\n    if (this.config.singleDatePicker) {\n      let startDateText = startDate;\n      let endDataText = endDate;\n      let dateText = \"\";\n\n      if (this.config.timePicker) {\n        startDateText = `${startDate} ${this.config.startTime}`;\n        endDataText = `${endDate} ${this.config.endTime}`;\n      }\n      if (this.config.displayBeginDate) {\n        dateText = `${startDateText}`;\n      } else if (this.config.displayEndDate) {\n        dateText = `${endDataText}`;\n      } else {\n        dateText = `${startDateText} - ${endDataText}`;\n      }\n\n      this.selectedDateText = dateText;\n    } else {\n      let startDateText = startDate;\n      let endDataText = endDate;\n\n      if (this.config.timePicker) {\n        startDateText = `${startDate} ${this.config.startTime}`;\n        endDataText = `${endDate} ${this.config.endTime}`;\n      }\n\n      this.selectedDateText = `${startDateText} - ${endDataText}`;\n    }\n\n    if (this.canBeEmpty || this.selectedDateText.indexOf(\"nvalid\") < 0) {\n      this.isValidFilter = true;\n    }\n\n    if (this.config.type === \"yearly\") {\n      this.dateTitleText.left = `${startDate}`;\n      this.dateTitleText.right = `${endDate}`;\n    } else {\n      this.updateActiveItemInputField();\n    }\n  }\n\n  updateActiveItemInputField() {\n    let itemFirstDate = \"\";\n    let itemLastDate = \"\";\n    let itemText = \"\";\n    if (!this.config.singleDatePicker) {\n      itemFirstDate = this.activeItem.left.firstDay;\n      itemLastDate = this.activeItem.left.lastDay;\n      itemText = this.activeItem.left.rowItemText;\n      itemFirstDate = moment(itemFirstDate, DEFAULT_DATE_FROMAT).format(this.config.viewDateFormat);\n      itemLastDate = moment(itemLastDate, DEFAULT_DATE_FROMAT).format(this.config.viewDateFormat);\n      if (this.config.type !== \"daily\") {\n        this.dateTitleText.left = `${itemText} (${itemFirstDate} - ${itemLastDate})`;\n      } else {\n        this.dateTitleText.left = `${itemFirstDate}`;\n      }\n    }\n\n    itemFirstDate = this.activeItem.right.firstDay;\n    itemLastDate = this.activeItem.right.lastDay;\n    itemText = this.activeItem.right.rowItemText;\n    itemFirstDate = moment(itemFirstDate, DEFAULT_DATE_FROMAT).format(this.config.viewDateFormat);\n    itemLastDate = moment(itemLastDate, DEFAULT_DATE_FROMAT).format(this.config.viewDateFormat);\n    if (this.config.type !== \"daily\") {\n      this.dateTitleText.right = `${itemText} (${itemFirstDate} - ${itemLastDate})`;\n    } else {\n      this.dateTitleText.right = `${itemFirstDate}`;\n    }\n  }\n\n  dateRangeSelected() {\n    const dateRangeModel: NgxDatetimeRangePickerModelItem = this.getNgxDatetimeRangePickerModelItem();\n    this.showCalendar = false;\n    this.filterInputBox.nativeElement.classList.remove(\"empty-filter\");\n    this.doDateRangeModelChange();\n    this.dateRangeChanged.emit(dateRangeModel);\n  }\n\n  getDateRangeModel(format?) {\n    let dRModel = {};\n    if (undefined !== this.dateRangeModel && !_.isEmpty(this.dateRangeModel)) {\n      dRModel = _.cloneDeep(this.dateRangeModel);\n    }\n    dRModel[this.config.selectedModel] = this.getNgxDatetimeRangePickerModelItem(format);\n    return dRModel;\n  }\n\n  getNgxDatetimeRangePickerModelItem(format?): NgxDatetimeRangePickerModelItem {\n    let dateRangeModelItem: NgxDatetimeRangePickerModelItem;\n    let outputDateFormat = this.config.outputDateFormat;\n    if (undefined !== format) {\n      outputDateFormat = format;\n    }\n    let startDate = this.ngxDateTimeRangePickerService.formatStartDate(this.config, outputDateFormat);\n    let endDate = moment(this.config.endDate, DEFAULT_DATE_FROMAT).format(outputDateFormat);\n\n    if (this.config.selectedTimezone) {\n      startDate = this.ngxDateTimeRangePickerService.formatToZoneDate(\n        this.config.selectedTimezone,\n        outputDateFormat,\n        startDate\n      );\n      endDate = this.ngxDateTimeRangePickerService.formatToZoneDate(\n        this.config.selectedTimezone,\n        outputDateFormat,\n        endDate\n      );\n    }\n\n    dateRangeModelItem = { startDate, endDate };\n\n    if (this.config.timePicker) {\n      const startTime = this.config.startTime;\n      const endTime = this.config.endTime;\n\n      dateRangeModelItem = {\n        startDate,\n        endDate,\n        startTime,\n        endTime\n      };\n    }\n\n    return dateRangeModelItem;\n  }\n\n  doApply() {\n    const startDate = this.config.startDate;\n    const endDate = this.config.endDate;\n\n    this.activeStartDate = startDate as string;\n    this.activeEndDate = endDate as string;\n\n    if (this.config.startDate && this.config.endDate) {\n      if (!this.config.timePicker) {\n        this.dateRangeSelected();\n      } else {\n        if (this.config.timePicker) {\n          _.forEach(this.sides, (side) => {\n            this.times[side] = this.generateTimePicker(null, side);\n          });\n        }\n      }\n    }\n\n    let outputStartDate = startDate ? moment(startDate, DEFAULT_DATE_FROMAT).valueOf() : null;\n    let outputEndDate = endDate ? moment(endDate, DEFAULT_DATE_FROMAT).valueOf() : null;\n    if (this.config.outputDateFormat) {\n      outputStartDate = startDate ? moment(startDate, DEFAULT_DATE_FROMAT).format(this.config.outputDateFormat) : null;\n      outputEndDate = endDate ? moment(endDate, DEFAULT_DATE_FROMAT).format(this.config.outputDateFormat) : null;\n    }\n    this.selectedDate.emit({\n      startDate: outputStartDate,\n      endDate: outputEndDate\n    });\n\n    this.updateInputField();\n  }\n\n  doDateRangeModelChange() {\n    const dateRangeModel = this.getDateRangeModel(this.config.inputDateFormat);\n    this.dateRangeModelChange.emit(dateRangeModel);\n  }\n\n  onTimezoneChange(tz) {\n    this.selectedTimezone = tz;\n    this.todayTime = this.ngxDateTimeRangePickerService.getZoneToday(this.selectedTimezone, this.config.viewDateFormat);\n\n    this.parseOptionsToDefaultDateFormat();\n    _.forEach(this.sides, (side) => {\n      let date = this.config.startDate;\n      let time = this.config.startTime;\n      if (side === \"right\") {\n        date = this.config.endDate;\n        time = this.config.endTime;\n      }\n      this.dates[side] = this.generateCalendar(date, side);\n      if (this.config.timePicker) {\n        this.times[side] = this.generateTimePicker(time, side);\n      }\n    });\n  }\n\n  getSelectedTimeItemText(item, side) {\n    if (item === \"hour\") {\n      return this.selectedHour[side];\n    } else if (item === \"minute\") {\n      return this.selectedMinute[side];\n    }\n  }\n\n  setActiveItemOnRangeClick() {\n    this.updateActiveItem();\n    this.doApply();\n  }\n\n  updateActiveItem() {\n    const startDate: any = this.ngxDateTimeRangePickerService.getFirstLastDay(this.config.startDate, this.config.type);\n    const endDate: any = this.ngxDateTimeRangePickerService.getFirstLastDay(this.config.endDate, this.config.type);\n\n    if (this.config.type === \"weekly\") {\n      startDate.rowItemText = `W${this.ngxDateTimeRangePickerService.getWeekNumber(startDate.firstDay)}`;\n      endDate.rowItemText = `W${this.ngxDateTimeRangePickerService.getWeekNumber(endDate.firstDay)}`;\n    } else if (this.config.type === \"monthly\") {\n      startDate.rowItemText = `${moment(startDate.firstDay, DEFAULT_DATE_FROMAT).format(\"MMM\")}`;\n      endDate.rowItemText = `${moment(endDate.firstDay, DEFAULT_DATE_FROMAT).format(\"MMM\")}`;\n    } else if (this.config.type === \"quarterly\") {\n      startDate.rowItemText = `Quarter ${moment(startDate.firstDay, DEFAULT_DATE_FROMAT).quarter()}`;\n      endDate.rowItemText = `Quarter ${moment(endDate.firstDay, DEFAULT_DATE_FROMAT).quarter()}`;\n    }\n\n    this.activeItem.left = startDate;\n    this.activeItem.right = endDate;\n\n    // this.doApply();\n  }\n}\n","import { NgModule } from \"@angular/core\";\nimport { MatButtonModule, MatFormFieldModule, MatIconModule, MatInputModule, MatSelectModule } from \"@angular/material\";\n\nconst modules = [MatFormFieldModule, MatButtonModule, MatInputModule, MatIconModule, MatSelectModule];\n@NgModule({\n  imports: modules,\n  exports: modules\n})\nexport class MaterialModule {}\n","import { Pipe, PipeTransform } from \"@angular/core\";\n\n/**\n * Iterate over {key: value}\n * Returns the keys of the object\n * Usage:\n *    let objKey of obj | ObjNgFor\n * Example:\n *    let obj = {a: 1, b: 2};\n *    *ngFor=\"let key of obj | ObjNgFor\"\n *    {{keys}}: {{obj[key]}}\n */\n\n@Pipe({ name: \"ObjNgFor\", pure: false })\nexport class ObjNgFor implements PipeTransform {\n  public transform(value: any, args: any[] = null): any {\n    return Object.keys(value); // .map(key => value[key]);\n  }\n}\n","import { NgModule, ModuleWithProviders, Optional, SkipSelf } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { FormsModule } from \"@angular/forms\";\nimport { NoopAnimationsModule } from \"@angular/platform-browser/animations\";\nimport { MaterialModule } from \"./material/material.module\";\nimport { NgxDatetimeRangePickerComponent } from \"./ngx-datetime-range-picker.component\";\nimport { ObjNgFor } from \"./pipes/objNgFor.pipe\";\nimport { NgxDatetimeRangePickerService } from \"./ngx-datetime-range-picker.service\";\n\n@NgModule({\n  declarations: [ObjNgFor, NgxDatetimeRangePickerComponent],\n  imports: [CommonModule, NoopAnimationsModule, FormsModule, MaterialModule],\n  exports: [NgxDatetimeRangePickerComponent, MaterialModule]\n})\nexport class NgxDatetimeRangePickerModule {\n  constructor(@Optional() @SkipSelf() parentModule: NgxDatetimeRangePickerModule) {\n    if (parentModule) {\n      throw new Error(\"NgxDatetimeRangePickerModule is already loaded. Import it in the AppModule only\");\n    }\n  }\n\n  public static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: NgxDatetimeRangePickerModule,\n      providers: [NgxDatetimeRangePickerService]\n    };\n  }\n}\n","/*\n * Public API Surface of ngx-datetime-range-picker\n */\n\nexport * from \"./lib/ngx-datetime-range-picker.service\";\nexport * from \"./lib/ngx-datetime-range-picker.component\";\nexport * from \"./lib/ngx-datetime-range-picker.module\";\nexport * from \"./lib/interfaces\";\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n\nexport {MaterialModule as Éµb} from './lib/material/material.module';\nexport {ObjNgFor as Éµa} from './lib/pipes/objNgFor.pipe';"],"names":["moment","EU_TZ_CODE","_","DEFAULT_DATE_FROMAT","DEFAULT_TIME_FORMAT","DEFAULT_START_DATE","DEFAULT_END_DATE","DEFAULT_MIN_DATE","DEFAULT_MAX_DATE","DEFAULT_START_TIME","DEFAULT_END_TIME","USA_TZ_CODE","tslib_1.__decorate","tslib_1.__param"],"mappings":"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"}