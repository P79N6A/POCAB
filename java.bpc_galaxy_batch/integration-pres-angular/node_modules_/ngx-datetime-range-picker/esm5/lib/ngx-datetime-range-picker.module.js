import * as tslib_1 from "tslib";
import { NgModule, Optional, SkipSelf } from "@angular/core";
import { CommonModule } from "@angular/common";
import { FormsModule } from "@angular/forms";
import { NoopAnimationsModule } from "@angular/platform-browser/animations";
import { MaterialModule } from "./material/material.module";
import { NgxDatetimeRangePickerComponent } from "./ngx-datetime-range-picker.component";
import { ObjNgFor } from "./pipes/objNgFor.pipe";
import { NgxDatetimeRangePickerService } from "./ngx-datetime-range-picker.service";
var NgxDatetimeRangePickerModule = /** @class */ (function () {
    function NgxDatetimeRangePickerModule(parentModule) {
        if (parentModule) {
            throw new Error("NgxDatetimeRangePickerModule is already loaded. Import it in the AppModule only");
        }
    }
    NgxDatetimeRangePickerModule_1 = NgxDatetimeRangePickerModule;
    NgxDatetimeRangePickerModule.forRoot = function () {
        return {
            ngModule: NgxDatetimeRangePickerModule_1,
            providers: [NgxDatetimeRangePickerService]
        };
    };
    var NgxDatetimeRangePickerModule_1;
    NgxDatetimeRangePickerModule = NgxDatetimeRangePickerModule_1 = tslib_1.__decorate([
        NgModule({
            declarations: [ObjNgFor, NgxDatetimeRangePickerComponent],
            imports: [CommonModule, NoopAnimationsModule, FormsModule, MaterialModule],
            exports: [NgxDatetimeRangePickerComponent, MaterialModule]
        }),
        tslib_1.__param(0, Optional()), tslib_1.__param(0, SkipSelf()),
        tslib_1.__metadata("design:paramtypes", [NgxDatetimeRangePickerModule])
    ], NgxDatetimeRangePickerModule);
    return NgxDatetimeRangePickerModule;
}());
export { NgxDatetimeRangePickerModule };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LWRhdGV0aW1lLXJhbmdlLXBpY2tlci5tb2R1bGUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtZGF0ZXRpbWUtcmFuZ2UtcGlja2VyLyIsInNvdXJjZXMiOlsibGliL25neC1kYXRldGltZS1yYW5nZS1waWNrZXIubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsUUFBUSxFQUF1QixRQUFRLEVBQUUsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ2xGLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUMvQyxPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFDN0MsT0FBTyxFQUFFLG9CQUFvQixFQUFFLE1BQU0sc0NBQXNDLENBQUM7QUFDNUUsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLDRCQUE0QixDQUFDO0FBQzVELE9BQU8sRUFBRSwrQkFBK0IsRUFBRSxNQUFNLHVDQUF1QyxDQUFDO0FBQ3hGLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSx1QkFBdUIsQ0FBQztBQUNqRCxPQUFPLEVBQUUsNkJBQTZCLEVBQUUsTUFBTSxxQ0FBcUMsQ0FBQztBQU9wRjtJQUNFLHNDQUFvQyxZQUEwQztRQUM1RSxJQUFJLFlBQVksRUFBRTtZQUNoQixNQUFNLElBQUksS0FBSyxDQUFDLGlGQUFpRixDQUFDLENBQUM7U0FDcEc7SUFDSCxDQUFDO3FDQUxVLDRCQUE0QjtJQU96QixvQ0FBTyxHQUFyQjtRQUNFLE9BQU87WUFDTCxRQUFRLEVBQUUsOEJBQTRCO1lBQ3RDLFNBQVMsRUFBRSxDQUFDLDZCQUE2QixDQUFDO1NBQzNDLENBQUM7SUFDSixDQUFDOztJQVpVLDRCQUE0QjtRQUx4QyxRQUFRLENBQUM7WUFDUixZQUFZLEVBQUUsQ0FBQyxRQUFRLEVBQUUsK0JBQStCLENBQUM7WUFDekQsT0FBTyxFQUFFLENBQUMsWUFBWSxFQUFFLG9CQUFvQixFQUFFLFdBQVcsRUFBRSxjQUFjLENBQUM7WUFDMUUsT0FBTyxFQUFFLENBQUMsK0JBQStCLEVBQUUsY0FBYyxDQUFDO1NBQzNELENBQUM7UUFFYSxtQkFBQSxRQUFRLEVBQUUsQ0FBQSxFQUFFLG1CQUFBLFFBQVEsRUFBRSxDQUFBO2lEQUFlLDRCQUE0QjtPQURuRSw0QkFBNEIsQ0FheEM7SUFBRCxtQ0FBQztDQUFBLEFBYkQsSUFhQztTQWJZLDRCQUE0QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5nTW9kdWxlLCBNb2R1bGVXaXRoUHJvdmlkZXJzLCBPcHRpb25hbCwgU2tpcFNlbGYgfSBmcm9tIFwiQGFuZ3VsYXIvY29yZVwiO1xuaW1wb3J0IHsgQ29tbW9uTW9kdWxlIH0gZnJvbSBcIkBhbmd1bGFyL2NvbW1vblwiO1xuaW1wb3J0IHsgRm9ybXNNb2R1bGUgfSBmcm9tIFwiQGFuZ3VsYXIvZm9ybXNcIjtcbmltcG9ydCB7IE5vb3BBbmltYXRpb25zTW9kdWxlIH0gZnJvbSBcIkBhbmd1bGFyL3BsYXRmb3JtLWJyb3dzZXIvYW5pbWF0aW9uc1wiO1xuaW1wb3J0IHsgTWF0ZXJpYWxNb2R1bGUgfSBmcm9tIFwiLi9tYXRlcmlhbC9tYXRlcmlhbC5tb2R1bGVcIjtcbmltcG9ydCB7IE5neERhdGV0aW1lUmFuZ2VQaWNrZXJDb21wb25lbnQgfSBmcm9tIFwiLi9uZ3gtZGF0ZXRpbWUtcmFuZ2UtcGlja2VyLmNvbXBvbmVudFwiO1xuaW1wb3J0IHsgT2JqTmdGb3IgfSBmcm9tIFwiLi9waXBlcy9vYmpOZ0Zvci5waXBlXCI7XG5pbXBvcnQgeyBOZ3hEYXRldGltZVJhbmdlUGlja2VyU2VydmljZSB9IGZyb20gXCIuL25neC1kYXRldGltZS1yYW5nZS1waWNrZXIuc2VydmljZVwiO1xuXG5ATmdNb2R1bGUoe1xuICBkZWNsYXJhdGlvbnM6IFtPYmpOZ0ZvciwgTmd4RGF0ZXRpbWVSYW5nZVBpY2tlckNvbXBvbmVudF0sXG4gIGltcG9ydHM6IFtDb21tb25Nb2R1bGUsIE5vb3BBbmltYXRpb25zTW9kdWxlLCBGb3Jtc01vZHVsZSwgTWF0ZXJpYWxNb2R1bGVdLFxuICBleHBvcnRzOiBbTmd4RGF0ZXRpbWVSYW5nZVBpY2tlckNvbXBvbmVudCwgTWF0ZXJpYWxNb2R1bGVdXG59KVxuZXhwb3J0IGNsYXNzIE5neERhdGV0aW1lUmFuZ2VQaWNrZXJNb2R1bGUge1xuICBjb25zdHJ1Y3RvcihAT3B0aW9uYWwoKSBAU2tpcFNlbGYoKSBwYXJlbnRNb2R1bGU6IE5neERhdGV0aW1lUmFuZ2VQaWNrZXJNb2R1bGUpIHtcbiAgICBpZiAocGFyZW50TW9kdWxlKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXCJOZ3hEYXRldGltZVJhbmdlUGlja2VyTW9kdWxlIGlzIGFscmVhZHkgbG9hZGVkLiBJbXBvcnQgaXQgaW4gdGhlIEFwcE1vZHVsZSBvbmx5XCIpO1xuICAgIH1cbiAgfVxuXG4gIHB1YmxpYyBzdGF0aWMgZm9yUm9vdCgpOiBNb2R1bGVXaXRoUHJvdmlkZXJzIHtcbiAgICByZXR1cm4ge1xuICAgICAgbmdNb2R1bGU6IE5neERhdGV0aW1lUmFuZ2VQaWNrZXJNb2R1bGUsXG4gICAgICBwcm92aWRlcnM6IFtOZ3hEYXRldGltZVJhbmdlUGlja2VyU2VydmljZV1cbiAgICB9O1xuICB9XG59XG4iXX0=