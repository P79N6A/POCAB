{"version":3,"sources":["../../../../node_modules/tslib/tslib.es6.js","ng://ngx-datetime-range-picker/lib/ngx-datetime-range-picker.component.ts","ng://ngx-datetime-range-picker/lib/ngx-datetime-range-picker.constants.ts","ng://ngx-datetime-range-picker/lib/ngx-datetime-range-picker.service.ts","ng://ngx-datetime-range-picker/lib/material/material.module.ts","ng://ngx-datetime-range-picker/lib/pipes/objNgFor.pipe.ts","ng://ngx-datetime-range-picker/lib/ngx-datetime-range-picker.module.ts"],"names":["__decorate","decorators","target","key","desc","d","c","arguments","length","r","Object","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","__metadata","metadataKey","metadataValue","metadata","InputFocusBlur","moment","require","NgxDatetimeRangePickerConstants","DEFAULT","TYPE","INPUT_CLASS","DATE_FROMAT","TIME_FORMAT","START_DATE","format","END_DATE","MIN_DATE","subtract","startOf","MAX_DATE","START_TIME","END_TIME","MODEL_KEYS","TZ_CODE","CONSTANT","MONTHS_AVAILABLE","USA_MST_TZ_CODE","USA_TZ_CODE","EU_TZ_CODE","TZ_CODES","OFFSETS","_a","SO","WO","TZ_NAMES","_b","_","DEFAULT_TYPE","DEFAULT_INPUT_CLASS","DEFAULT_DATE_FROMAT","DEFAULT_TIME_FORMAT","DEFAULT_START_DATE","DEFAULT_END_DATE","DEFAULT_MIN_DATE","DEFAULT_MAX_DATE","DEFAULT_START_TIME","DEFAULT_END_TIME","DEFAULT_MODEL_KEYS","DEFAULT_TIMEZONE_CODE","NgxDatetimeRangePickerService","prototype","getNotAvailableText","getDefaultAriaLabelOptions","inputField","getDefaultOptions","dateArray","startDate","endDate","minDate","maxDate","startTime","endTime","getDefaultSettings","type","modelKeys","selectedModel","undefined","showTimezoneSelect","useLocalTimezone","timePicker","inputClass","inputDateFormat","viewDateFormat","outputDateFormat","singleDatePicker","componentDisabled","placeholder","showRowNumber","availableRanges","showRanges","disableWeekends","disableWeekdays","retailCalendar","displayBeginDate","displayEndDate","ariaLabels","this","formatDateToDefaultFormat","date","fromattedDate","isNaN","Number","_f","console","warn","formatTimeToDefaultFormat","time","formattedTime","indexOf","getFrequencyColumnHeader","getCalendarRowNumberText","number","createDefaultRanges","config","ranges","cloneDeep","formattedMaxDate","getSanitizedDateArray","sanitizedDateArray","forEach","value","valueOf","endOf","push","uniqBy","getNumberOfWeeks","numberOfWeeks","monthStart","day","monthEnd","Math","ceil","getYearlyWeekCount","year","weekCount","yearStartDate","yearEndDate","yearEndWeekEndDate","yearStartWeekEndDate","yearSartWeekNumber","getWeekNumber","getMonthsAvailable","selectedYear","months","minDatems","maxDatems","yearStartms","yearEndms","minDateMonthNumber","month","diff","maxMonths","getYearsAvailable","years","minYear","getSelectedYear","reverse","isDateAvailable","monthStartDate","monthEndDate","available","some","isWeekend","isWeekday","isDateInRange","inRange","isDateActive","side","active","isDateToday","today","todayDate","firstLastDay","getFirstLastDay","firstDay","lastDay","getCalendarRowVariables","options","variables","monthStartWeekNumber","dateRows","rowNumber","columns","charAt","getCalendarRowItemVariables","firstLastDayObject","currentItemDate","rowItemText","itemCount","rowItem","isNil","yearStartDateDaily","add","quarter","isRowIemValid","valid","validWeekCount","formatStartDate","returnFormat","formattedStartDate","getLocalTimezone","tz","exec","Date","toString","getZoneDate","toLocaleString","timeZone","getZoneToday","formatToZoneDate","formattedDate","convertToViewTimeItem","item","stringified_item","datems","getTime","getDay","Injectable","providedIn","NgxDatetimeRangePickerComponent","element","renderer","ngxDateTimeRangePickerService","_this","canBeEmpty","dateRangeModelChange","EventEmitter","dateRangeChanged","inputFocusBlur","selectedDate","sides","dates","left","right","calendarAvailable","showCalendar","customRange","selectedDateText","dateTitleText","weekDayOptions","selectedMonth","activeItem","activeStartDate","activeEndDate","activeRange","frequencyColumnHeader","isValidFilter","isUserModelChange","timezones","localTimezone","todayTime","timeItems","times","selectedHour","selectedMinute","selectedMeridian","settings","assign","selectedTimezone","listenGlobal","event","className","nativeElement","contains","onCalendarClose","ngOnChanges","changes","currentValue","merge","dateRangeModel","firstChange","previousValue","optionService","subscribe","dateOptions","isObject","isArray","plain","err","error","init","onDateRangeInputChange","dateRangeSelected","setDisabledState","disabled","onComponentClick","onFocusInput","emit","reason","focus","onBlurInput","blur","filterInputBox","classList","remove","isPrevAvailale","isNextAvailale","getCalendarColspan","getCalendarRowItemColspan","getDatecharacteristics","currentDate","currentMonthStartDate","currentMonthEndDate","onClickPrevious","generateCalendar","onClickNext","onCellClick","itemCell","doApply","onCellMouseEnter","hoverItemFirstDate","getAttribute","hoverItemLastDate","activeItemInputFieldText","innerText","forOwn","sideDates","itemRows","rows","items","hoverItemDate","onCellMouseLeave","updateActiveItemInputField","onRangeClick","rangeLabel","updateCalendar","setActiveItemOnRangeClick","generateTimePicker","onCalendarLabelChange","label","onTimeLabelChange","timeItem","split","onTimeApply","updateInputField","initialize","parseOptions","keys","k","selectTimeZone","parseOptionsToDefaultDateFormat","processDateRangeModel","handleDateArray","sanitizeDates","processRanges","doDateRangeModelChange","timezoneSupport","defaultTimezone","onTimezoneChange","minTime","maxTime","isEmpty","dateRangeMinDate","dateRangeMaxDate","dateRangeStartDate","dateRangeEndDate","dateRangeDateArray","dateRangeMinTime","dateRangeMaxTime","dateRangeStartTime","dateRangeEndTime","sortBy","selectActiveRange","rangeModel","range","updateActiveItem","calendarLabel","week","numberOfRows","datecharacteristics","rowVariables","rowItemVariables","dateRowObj","rowNumberText","rowOptions","rowItemOptions","itemObj","timeObject","hour","minute","meridian","startHour","startMinute","startDateEpoch","endDateEpoch","h","stringified_h","m","stringified_m","capitalize","startDateText","endDataText","dateText","itemFirstDate","itemLastDate","itemText","getNgxDatetimeRangePickerModelItem","getDateRangeModel","dRModel","dateRangeModelItem","outputStartDate","outputEndDate","getSelectedTimeItemText","tslib_1.__decorate","Input","Observable","Output","ViewChild","Component","selector","template","encapsulation","ViewEncapsulation","None","ElementRef","Renderer","modules","MatFormFieldModule","MatButtonModule","MatInputModule","MatIconModule","MatSelectModule","MaterialModule","NgModule","imports","exports","ObjNgFor","transform","args","Pipe","name","pure","NgxDatetimeRangePickerModule","parentModule","Error","forRoot","ngModule","NgxDatetimeRangePickerModule_1","providers","declarations","CommonModule","NoopAnimationsModule","FormsModule","tslib_1.__param","Optional","SkipSelf"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import {\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnChanges,\n  Output,\n  Renderer,\n  SimpleChanges,\n  ViewChild,\n  ViewEncapsulation\n} from \"@angular/core\";\nimport { Observable } from \"rxjs\";\nimport { NgxDatetimeRangePickerConstants } from \"./ngx-datetime-range-picker.constants\";\nimport { NgxDatetimeRangePickerService } from \"./ngx-datetime-range-picker.service\";\nimport {\n  CalendarSides,\n  NgxDatetimeRangePickerModelItem,\n  NgxDatetimeRangePickerOptions,\n  NgxDatetimeRangePickerSettings\n} from \"./interfaces/index\";\n\ndeclare var require: any;\nconst moment = require(\"moment\");\nconst _ = require(\"lodash\");\n\nenum InputFocusBlur {\n  focus = 1,\n  blur = 2\n}\n\nconst DEFAULT_DATE_FROMAT = NgxDatetimeRangePickerConstants.DEFAULT.DATE_FROMAT;\nconst DEFAULT_TIME_FORMAT = NgxDatetimeRangePickerConstants.DEFAULT.TIME_FORMAT;\nconst DEFAULT_START_DATE = NgxDatetimeRangePickerConstants.DEFAULT.START_DATE;\nconst DEFAULT_END_DATE = NgxDatetimeRangePickerConstants.DEFAULT.END_DATE;\nconst DEFAULT_MIN_DATE = NgxDatetimeRangePickerConstants.DEFAULT.MIN_DATE;\nconst DEFAULT_MAX_DATE = NgxDatetimeRangePickerConstants.DEFAULT.MAX_DATE;\nconst DEFAULT_START_TIME = NgxDatetimeRangePickerConstants.DEFAULT.START_TIME;\nconst DEFAULT_END_TIME = NgxDatetimeRangePickerConstants.DEFAULT.END_TIME;\nconst TZ_CODES = NgxDatetimeRangePickerConstants.CONSTANT.TZ_CODES;\nconst USA_TZ_CODE = NgxDatetimeRangePickerConstants.CONSTANT.USA_TZ_CODE;\n\n@Component({\n  selector: \"ngx-datetime-range-picker\",\n  templateUrl: \"./ngx-datetime-range-picker.component.html\",\n  styleUrls: [\"./ngx-datetime-range-picker.component.scss\"],\n  encapsulation: ViewEncapsulation.None\n})\nexport class NgxDatetimeRangePickerComponent implements OnChanges {\n  @Input() options: NgxDatetimeRangePickerOptions;\n  @Input() settings: NgxDatetimeRangePickerSettings;\n  @Input() optionService: Observable<any>;\n  @Input() dateRangeModel: Object;\n  @Input() canBeEmpty = false;\n  @Output() dateRangeModelChange: EventEmitter<Object> = new EventEmitter<Object>();\n  @Output() dateRangeChanged: EventEmitter<NgxDatetimeRangePickerModelItem> = new EventEmitter<\n    NgxDatetimeRangePickerModelItem\n  >();\n  @Output() inputFocusBlur: EventEmitter<Object> = new EventEmitter<Object>();\n  @Output() selectedDate: EventEmitter<Object> = new EventEmitter<Object>();\n  @ViewChild(\"filterInputBox\") filterInputBox: any;\n\n  sides: string[] = [];\n  dates: CalendarSides = {\n    left: {} as Object,\n    right: {} as Object\n  };\n  calendarAvailable: CalendarSides = {\n    left: false as boolean,\n    right: false as boolean\n  };\n  showCalendar = false;\n  customRange = false;\n  selectedDateText = \"\";\n  dateTitleText: CalendarSides = {\n    left: \"\" as string,\n    right: \"\" as string\n  };\n  weekDayOptions: string[] = [\"su\", \"mo\", \"tu\", \"we\", \"th\", \"fr\", \"sa\"];\n  selectedMonth: CalendarSides = {\n    left: \"\" as string,\n    right: \"\" as string\n  };\n  selectedYear: CalendarSides = {\n    left: \"\" as string,\n    right: \"\" as string\n  };\n  activeItem: CalendarSides = {\n    left: \"\" as string,\n    right: \"\" as string\n  };\n  activeStartDate: string = null;\n  activeEndDate: string = null;\n  activeRange: string = null;\n  frequencyColumnHeader: string = null;\n\n  config: any = {};\n\n  isValidFilter = false;\n  isUserModelChange = true;\n\n  timezones: string[] = TZ_CODES;\n  localTimezone: string = this.ngxDateTimeRangePickerService.getLocalTimezone();\n  // Since 'useLocalTimezone: false' byDefault;\n  selectedTimezone: string;\n  todayTime = \"\";\n\n  timeItems: string[] = [\"hour\", \"minute\"];\n  times: CalendarSides = {\n    left: \"\" as string,\n    right: \"\" as string\n  };\n  selectedHour: CalendarSides = {\n    left: \"\" as string,\n    right: \"\" as string\n  };\n  selectedMinute: CalendarSides = {\n    left: \"\" as string,\n    right: \"\" as string\n  };\n  selectedMeridian: CalendarSides = {\n    left: \"\" as string,\n    right: \"\" as string\n  };\n\n  constructor(\n    public element: ElementRef,\n    private renderer: Renderer,\n    private ngxDateTimeRangePickerService: NgxDatetimeRangePickerService\n  ) {\n    this.options = this.ngxDateTimeRangePickerService.getDefaultOptions();\n    this.settings = this.ngxDateTimeRangePickerService.getDefaultSettings();\n    this.config = Object.assign(this.options, this.settings);\n\n    this.todayTime = this.ngxDateTimeRangePickerService.getZoneToday(this.selectedTimezone, this.config.viewDateFormat);\n\n    this.renderer.listenGlobal(\"document\", \"click\", (event: any) => {\n      if (\n        this.showCalendar &&\n        event.target &&\n        event.target.className !== \"mat-option-text\" &&\n        this.element.nativeElement !== event.target &&\n        !this.element.nativeElement.contains(event.target)\n      ) {\n        this.onCalendarClose(event);\n      }\n    });\n  }\n\n  public ngOnChanges(changes: SimpleChanges) {\n    this.isUserModelChange = true;\n\n    if (changes.canBeEmpty) {\n      this.canBeEmpty = changes.canBeEmpty.currentValue;\n    }\n\n    if (changes.settings) {\n      this.settings = _.merge(this.settings, changes.settings.currentValue);\n    }\n\n    if (changes.dateRangeModel) {\n      this.dateRangeModel = changes.dateRangeModel.currentValue;\n    }\n\n    // this.settings.selectedModel = (this.settings.selectedModel) ? this.settings.selectedModel : this.settings.type;\n\n    if (changes.dateRangeModel && !changes.dateRangeModel.firstChange) {\n      const previousValue = changes.dateRangeModel.previousValue[this.config.selectedModel];\n      const currentValue = changes.dateRangeModel.currentValue[this.config.selectedModel];\n      if (\n        previousValue &&\n        currentValue &&\n        previousValue.startDate === currentValue.startDate &&\n        previousValue.endDate === currentValue.endDate\n      ) {\n        this.isUserModelChange = false;\n      }\n    }\n\n    if (changes.optionService && changes.optionService.currentValue) {\n      changes.optionService.currentValue.subscribe(\n        (dateOptions: any) => {\n          if (_.isObject(dateOptions) && !_.isArray(dateOptions)) {\n            this.options = dateOptions.plain ? dateOptions.plain() : dateOptions;\n          }\n        },\n        (err) => {\n          console.error(\"DateRangePickerComponent | Filter Call Failure: \", err);\n        },\n        () => {\n          this.init();\n        }\n      );\n    }\n\n    if (changes.options) {\n      this.options = changes.options ? changes.options.currentValue : this.options;\n    }\n\n    if (!changes.optionService) {\n      this.init();\n    }\n  }\n\n  // Events\n  onDateRangeInputChange(value: string) {\n    this.dateRangeSelected();\n  }\n\n  setDisabledState(disabled: boolean): void {\n    this.config.componentDisabled = disabled;\n  }\n\n  onComponentClick(): void {\n    this.showCalendar = !this.showCalendar;\n  }\n\n  onFocusInput(event: any): void {\n    this.inputFocusBlur.emit({\n      reason: InputFocusBlur.focus,\n      value: event.target.value\n    });\n  }\n\n  onBlurInput(event: any): void {\n    this.selectedDateText = event.target.value;\n    this.inputFocusBlur.emit({\n      reason: InputFocusBlur.blur,\n      value: event.target.value\n    });\n  }\n\n  onCalendarClose(event: any): void {\n    if (this.config.startDate && this.config.endDate) {\n      this.filterInputBox.nativeElement.classList.remove(\"empty-filter\");\n      this.showCalendar = false;\n    } else {\n      // this.filterInputBox.nativeElement.classList.add('empty-filter');\n    }\n  }\n\n  isPrevAvailale(month) {\n    const minDate = this.ngxDateTimeRangePickerService.formatDateToDefaultFormat(\n      this.config.minDate,\n      DEFAULT_DATE_FROMAT\n    );\n    const currentMonthStartDate = moment(month, \"MMM YYYY\")\n      .startOf(\"month\")\n      .valueOf();\n    if (\n      currentMonthStartDate >\n      moment(minDate, DEFAULT_DATE_FROMAT)\n        .startOf(\"month\")\n        .valueOf()\n    ) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  isNextAvailale(month) {\n    const maxDate = this.ngxDateTimeRangePickerService.formatDateToDefaultFormat(\n      this.config.maxDate,\n      DEFAULT_DATE_FROMAT\n    );\n    const currentMonthEndDate = moment(month, \"MMM YYYY\")\n      .endOf(\"month\")\n      .valueOf();\n    if (\n      currentMonthEndDate <\n      moment(maxDate, DEFAULT_DATE_FROMAT)\n        .endOf(\"month\")\n        .valueOf()\n    ) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  getCalendarColspan() {\n    if (this.config.type === \"daily\") {\n      return 6;\n    } else if (this.config.type === \"weekly\") {\n      return 8;\n    } else if (this.config.type === \"monthly\") {\n      return 3;\n    } else if (this.config.type === \"quarterly\") {\n      return 1;\n    } else if (this.config.type === \"yearly\") {\n      return 1;\n    }\n  }\n\n  getCalendarRowItemColspan() {\n    if (this.config.type === \"monthly\") {\n      return 3;\n    } else if (this.config.type === \"quarterly\") {\n      return 6;\n    } else if (this.config.type === \"yearly\") {\n      return 6;\n    }\n  }\n\n  getDatecharacteristics(date, month, side) {\n    const currentDate = moment(date, DEFAULT_DATE_FROMAT)\n      .startOf(\"day\")\n      .valueOf();\n    const minDate = moment(\n      this.ngxDateTimeRangePickerService.formatDateToDefaultFormat(this.config.minDate, DEFAULT_DATE_FROMAT),\n      DEFAULT_DATE_FROMAT\n    )\n      .startOf(\"day\")\n      .valueOf();\n    const maxDate = moment(\n      this.ngxDateTimeRangePickerService.formatDateToDefaultFormat(this.config.maxDate, DEFAULT_DATE_FROMAT),\n      DEFAULT_DATE_FROMAT\n    )\n      .startOf(\"day\")\n      .valueOf();\n    const startDate = moment(\n      this.ngxDateTimeRangePickerService.formatDateToDefaultFormat(this.config.startDate, DEFAULT_DATE_FROMAT),\n      DEFAULT_DATE_FROMAT\n    )\n      .startOf(\"day\")\n      .valueOf();\n    const endDate = moment(\n      this.ngxDateTimeRangePickerService.formatDateToDefaultFormat(this.config.endDate, DEFAULT_DATE_FROMAT),\n      DEFAULT_DATE_FROMAT\n    )\n      .startOf(\"day\")\n      .valueOf();\n    const currentMonthStartDate = moment(month, \"MMM YYYY\")\n      .startOf(\"month\")\n      .startOf(\"day\")\n      .valueOf();\n    const currentMonthEndDate = moment(month, \"MMM YYYY\")\n      .endOf(\"month\")\n      .startOf(\"day\")\n      .valueOf();\n\n    const available: boolean = this.ngxDateTimeRangePickerService.isDateAvailable(\n      currentDate,\n      minDate,\n      maxDate,\n      startDate,\n      endDate,\n      currentMonthStartDate,\n      currentMonthEndDate,\n      this.config\n    );\n    const inRange: boolean = this.ngxDateTimeRangePickerService.isDateInRange(\n      currentDate,\n      minDate,\n      maxDate,\n      startDate,\n      endDate,\n      currentMonthStartDate,\n      currentMonthEndDate,\n      available,\n      this.config\n    );\n    const active: boolean = this.ngxDateTimeRangePickerService.isDateActive(currentDate, startDate, endDate, side);\n    const today: boolean = this.ngxDateTimeRangePickerService.isDateToday(currentDate, this.config);\n\n    // Active\n    if (currentDate === startDate && side === \"left\") {\n      this.activeStartDate = date;\n    } else if (currentDate === endDate && side === \"right\") {\n      this.activeEndDate = date;\n    }\n\n    return {\n      available,\n      inRange,\n      active,\n      today\n    };\n  }\n\n  onClickPrevious(month, side) {\n    const startDate = moment(month, \"MMM YYYY\")\n      .subtract(1, \"month\")\n      .startOf(\"month\")\n      .format(DEFAULT_DATE_FROMAT);\n    this.dates[side] = this.generateCalendar(startDate, side);\n  }\n\n  onClickNext(month, side) {\n    const endDate = moment(month, \"MMM YYYY\")\n      .add(1, \"month\")\n      .endOf(\"month\")\n      .format(DEFAULT_DATE_FROMAT);\n    this.dates[side] = this.generateCalendar(endDate, side);\n  }\n\n  onCellClick(item, itemCell, side) {\n    const date = item.date ? moment(item.date, DEFAULT_DATE_FROMAT).valueOf() : item.date;\n    const startDate = this.config.startDate\n      ? moment(this.config.startDate, DEFAULT_DATE_FROMAT).valueOf()\n      : this.config.startDate;\n    const endDate = this.config.endDate\n      ? moment(this.config.endDate, DEFAULT_DATE_FROMAT).valueOf()\n      : this.config.endDate;\n    const minDate = this.config.minDate\n      ? moment(this.config.minDate, DEFAULT_DATE_FROMAT).valueOf()\n      : this.config.minDate;\n    const maxDate = this.config.maxDate\n      ? moment(this.config.maxDate, DEFAULT_DATE_FROMAT).valueOf()\n      : this.config.maxDate;\n\n    if (!item.available) {\n      if (date < minDate || date > maxDate) {\n        return;\n      }\n      this.dates[side] = this.generateCalendar(item.date, side);\n    }\n\n    if (endDate || date < startDate) {\n      this.config.endDate = null;\n      this.config.startDate = item.date;\n      this.activeItem.left = item;\n    } else if (!endDate && date < startDate) {\n      this.config.endDate = _.cloneDeep(this.config.startDate);\n      this.activeItem.right = item;\n    } else {\n      this.config.endDate = item.date;\n      this.activeItem.right = item;\n    }\n\n    if (this.config.singleDatePicker) {\n      this.config.endDate = _.cloneDeep(this.config.startDate);\n      this.activeItem.right = this.activeItem.left = item;\n    }\n\n    this.doApply();\n  }\n\n  onCellMouseEnter(item, itemCell): void {\n    if (!item.available) {\n      return;\n    }\n\n    const date = item.date ? moment(item.date, DEFAULT_DATE_FROMAT).valueOf() : item.date;\n    const startDate = this.config.startDate\n      ? moment(this.config.startDate, DEFAULT_DATE_FROMAT).valueOf()\n      : this.config.startDate;\n    const endDate = this.config.endDate\n      ? moment(this.config.endDate, DEFAULT_DATE_FROMAT).valueOf()\n      : this.config.endDate;\n    let hoverItemFirstDate = itemCell ? itemCell.getAttribute(\"firstDay\") : \"\";\n    let hoverItemLastDate = itemCell ? itemCell.getAttribute(\"lastDay\") : \"\";\n    const hoverItemText = itemCell ? itemCell.innerText : \"\";\n    hoverItemFirstDate = moment(hoverItemFirstDate, DEFAULT_DATE_FROMAT).format(this.config.viewDateFormat);\n    hoverItemLastDate = moment(hoverItemLastDate, DEFAULT_DATE_FROMAT).format(this.config.viewDateFormat);\n\n    let activeItemInputFieldText = `${hoverItemText} (${hoverItemFirstDate} - ${hoverItemLastDate})`;\n\n    if (this.config.type === \"daily\") {\n      activeItemInputFieldText = `${hoverItemLastDate}`;\n    }\n\n    if (!endDate) {\n      _.forOwn(this.dates, (sideDates, side) => {\n        _.forEach(sideDates.itemRows, (rows) => {\n          _.forEach(rows.items, (rowItem) => {\n            if (rowItem.available) {\n              const hoverItemDate = rowItem.date ? moment(rowItem.date, DEFAULT_DATE_FROMAT).valueOf() : rowItem.date;\n              if ((hoverItemDate > startDate && hoverItemDate < date) || date === hoverItemDate) {\n                rowItem.inRange = true;\n                this.dateTitleText.right = activeItemInputFieldText;\n              }\n            }\n          });\n        });\n      });\n    } else {\n      if (this.config.singleDatePicker) {\n        this.dateTitleText.right = activeItemInputFieldText;\n      } else {\n        this.dateTitleText.left = activeItemInputFieldText;\n      }\n    }\n  }\n\n  onCellMouseLeave(): void {\n    if (!this.config.endDate) {\n      _.forOwn(this.dates, (sideDates, side) => {\n        _.forEach(sideDates.itemRows, (rows) => {\n          _.forEach(rows.items, (item) => {\n            item.inRange = false;\n          });\n        });\n      });\n    } else {\n      this.updateActiveItemInputField();\n    }\n  }\n\n  onRangeClick(rangeLabel, dateRangeModel: any) {\n    this.activeRange = rangeLabel;\n    if (rangeLabel === \"Custom Range\") {\n      this.customRange = !this.customRange;\n      if (this.customRange) {\n        this.updateCalendar();\n      } else {\n        this.sides.length = 0;\n        this.dates = {};\n        if (this.config.timePicker) {\n          this.times = {};\n        }\n      }\n    } else {\n      this.config.startDate = dateRangeModel.startDate;\n      this.config.endDate = dateRangeModel.endDate;\n      if (this.config.timePicker) {\n        // _.forEach(this.sides, (side) => {\n        //   this.times[side] = this.generateTimePicker(null, side);\n        // })\n        if (this.config.timePicker) {\n          this.times = {};\n        }\n        this.updateCalendar();\n      }\n      this.setActiveItemOnRangeClick();\n    }\n  }\n\n  updateCalendar() {\n    this.sides.length = 0;\n    this.dates = {};\n    // takes 223 milliSeconds\n    // Order is important left - right\n    if (!this.config.singleDatePicker) {\n      this.sides.push(\"left\");\n      this.dates.left = this.generateCalendar(this.config.startDate, \"left\");\n      if (this.config.timePicker) {\n        this.times.left = this.generateTimePicker(this.config.startTime, \"left\");\n      }\n    }\n    this.sides.push(\"right\");\n    this.dates.right = this.generateCalendar(this.config.endDate, \"right\");\n    if (this.config.timePicker) {\n      this.times.right = this.generateTimePicker(this.config.endTime, \"right\");\n    }\n  }\n\n  onCalendarLabelChange(label, side, type) {\n    this.showCalendar = true;\n    if (type === \"month\") {\n      this.selectedMonth[side] = label;\n    } else if (type === \"year\") {\n      this.selectedYear[side] = label;\n    }\n\n    if (this.config.type !== \"daily\") {\n      this.selectedMonth[side] = \"Jun\";\n    }\n\n    if (this.config.type !== \"yearly\") {\n      const selectedMonth = `${this.selectedMonth[side]} ${this.selectedYear[side]}`;\n      const date = moment(selectedMonth, \"MMM YYYY\")\n        .startOf(\"month\")\n        .format(DEFAULT_DATE_FROMAT);\n      this.dates[side] = this.generateCalendar(date, side);\n    } else {\n      if (this.selectedYear.left <= this.selectedYear.right && side === \"right\") {\n        this.config.startDate = moment(this.selectedYear.left, \"YYYY\")\n          .startOf(\"year\")\n          .format(DEFAULT_DATE_FROMAT);\n        this.config.endDate = moment(this.selectedYear.right, \"YYYY\")\n          .endOf(\"year\")\n          .format(DEFAULT_DATE_FROMAT);\n\n        this.doApply();\n      }\n      const config = {\n        startDate: moment(this.selectedYear.left, \"YYYY\")\n          .startOf(\"year\")\n          .format(DEFAULT_DATE_FROMAT),\n        type: \"yearly\"\n      };\n      const startDate = this.ngxDateTimeRangePickerService.formatStartDate(config, this.config.viewDateFormat);\n      const endDate = this.config.endDate\n        ? moment(this.config.endDate, DEFAULT_DATE_FROMAT).format(this.config.viewDateFormat)\n        : \"\";\n      this.dateTitleText.left = `${startDate}`;\n      this.dateTitleText.right = `${endDate}`;\n    }\n  }\n\n  onTimeLabelChange(timeItem, side, item) {\n    let time = null;\n    if (side === \"left\") {\n      time = this.config.startTime.split(\":\");\n      if (timeItem === \"hour\") {\n        this.config.startTime = `${item}:${time[1]}`;\n      } else {\n        this.config.startTime = `${time[0]}:${item}`;\n      }\n\n      const startDateEpoch = moment(this.config.startDate, DEFAULT_DATE_FROMAT).valueOf();\n      const endDateEpoch = moment(this.config.endDate, DEFAULT_DATE_FROMAT).valueOf();\n      if (startDateEpoch === endDateEpoch) {\n        this.times.right = this.generateTimePicker(this.config.startTime, \"right\");\n      }\n    } else {\n      time = this.config.endTime.split(\":\");\n      if (timeItem === \"hour\") {\n        this.config.endTime = `${item}:${time[1]}`;\n      } else {\n        this.config.endTime = `${time[0]}:${item}`;\n      }\n    }\n\n    if (timeItem === \"hour\") {\n      this.selectedHour[side] = this.ngxDateTimeRangePickerService.convertToViewTimeItem(item);\n    } else {\n      this.selectedMinute[side] = this.ngxDateTimeRangePickerService.convertToViewTimeItem(item);\n    }\n  }\n\n  onTimeApply() {\n    this.dateRangeSelected();\n    this.updateInputField();\n  }\n\n  // Helpers\n  init() {\n    if (this.isUserModelChange) {\n      this.isValidFilter = false;\n      this.config = Object.assign(\n        this.ngxDateTimeRangePickerService.getDefaultOptions(),\n        this.ngxDateTimeRangePickerService.getDefaultSettings()\n      );\n      this.initialize();\n      this.parseOptions();\n      this.updateInputField();\n    }\n  }\n\n  initialize() {\n    this.sides.length = 0;\n    this.dates = {};\n    this.calendarAvailable = {\n      left: false as boolean,\n      right: false as boolean\n    };\n    this.showCalendar = false;\n    this.selectedDateText = \"\";\n    this.dateTitleText = {\n      left: \"\" as string,\n      right: \"\" as string\n    };\n    this.weekDayOptions = [\"su\", \"mo\", \"tu\", \"we\", \"th\", \"fr\", \"sa\"];\n    this.selectedMonth = {\n      left: \"\" as string,\n      right: \"\" as string\n    };\n    this.selectedYear = {\n      left: \"\" as string,\n      right: \"\" as string\n    };\n    // this.activeItem = {\n    //   'left': <string> '',\n    //   'right': <string> ''\n    // };\n    this.times = {\n      left: \"\" as string,\n      right: \"\" as string\n    };\n    this.activeStartDate = null;\n    this.activeEndDate = null;\n    this.frequencyColumnHeader = null;\n    this.customRange = false;\n    this.activeRange = \"\";\n  }\n\n  parseOptions(): void {\n    if (this.options !== undefined) {\n      Object.keys(this.options).forEach((k) => {\n        this.config[k] = this.options[k];\n      });\n    }\n    if (this.settings !== undefined) {\n      Object.keys(this.settings).forEach((k) => {\n        this.config[k] = this.settings[k];\n      });\n    }\n\n    this.config.selectedModel = this.config.selectedModel ? this.config.selectedModel : this.config.type;\n\n    if (this.config.type === \"weekly\" || this.config.type === \"yearly\") {\n      this.config.showRowNumber = false;\n    }\n    if (this.config.singleDatePicker) {\n      this.config.startDate = _.cloneDeep(this.config.endDate);\n    }\n\n    this.selectTimeZone();\n    this.parseOptionsToDefaultDateFormat();\n    this.processDateRangeModel();\n    this.handleDateArray();\n    this.sanitizeDates();\n    this.processRanges();\n    this.doDateRangeModelChange();\n    // this.config.selectedModel = undefined;\n  }\n\n  selectTimeZone() {\n    if (this.config.timezoneSupport) {\n      if (!this.config.defaultTimezone) {\n        this.config.defaultTimezone = USA_TZ_CODE;\n      }\n      this.selectedTimezone = this.config.defaultTimezone;\n    }\n\n    if (this.config.useLocalTimezone) {\n      this.selectedTimezone = this.localTimezone;\n    }\n    this.onTimezoneChange(this.selectedTimezone);\n  }\n\n  parseOptionsToDefaultDateFormat() {\n    this.config.minDate = this.config.minDate\n      ? this.ngxDateTimeRangePickerService.formatDateToDefaultFormat(this.config.minDate, this.config.inputDateFormat)\n      : DEFAULT_MIN_DATE;\n    this.config.maxDate = this.config.maxDate\n      ? this.ngxDateTimeRangePickerService.formatDateToDefaultFormat(this.config.maxDate, this.config.inputDateFormat)\n      : DEFAULT_MAX_DATE;\n    this.config.startDate = this.config.startDate\n      ? this.ngxDateTimeRangePickerService.formatDateToDefaultFormat(this.config.startDate, this.config.inputDateFormat)\n      : DEFAULT_START_DATE;\n    this.config.endDate = this.config.endDate\n      ? this.ngxDateTimeRangePickerService.formatDateToDefaultFormat(this.config.endDate, this.config.inputDateFormat)\n      : DEFAULT_END_DATE;\n\n    if (this.config.timePicker) {\n      this.config.minTime = this.config.minTime\n        ? this.ngxDateTimeRangePickerService.formatTimeToDefaultFormat(this.config.minTime)\n        : DEFAULT_START_TIME;\n      this.config.maxTime = this.config.maxTime\n        ? this.ngxDateTimeRangePickerService.formatTimeToDefaultFormat(this.config.maxTime)\n        : DEFAULT_END_TIME;\n      this.config.startTime = this.config.startTime\n        ? this.ngxDateTimeRangePickerService.formatTimeToDefaultFormat(this.config.startTime)\n        : DEFAULT_START_TIME;\n      this.config.endTime = this.config.endTime\n        ? this.ngxDateTimeRangePickerService.formatTimeToDefaultFormat(this.config.endTime)\n        : DEFAULT_END_TIME;\n    }\n  }\n\n  /**\n   * @desc sets startDate, endDate\n   */\n  processDateRangeModel() {\n    if (undefined !== this.dateRangeModel && !_.isEmpty(this.dateRangeModel)) {\n      if (this.dateRangeModel[this.config.selectedModel]) {\n        const dateRangeMinDate = this.dateRangeModel[this.config.selectedModel].minDate;\n        const dateRangeMaxDate = this.dateRangeModel[this.config.selectedModel].maxDate;\n        const dateRangeStartDate = this.dateRangeModel[this.config.selectedModel].startDate;\n        const dateRangeEndDate = this.dateRangeModel[this.config.selectedModel].endDate;\n        const dateRangeDateArray = this.dateRangeModel[this.config.selectedModel].dateArray;\n\n        this.config.dateArray = dateRangeDateArray ? dateRangeDateArray : this.config.dateArray;\n        this.config.minDate = dateRangeMinDate\n          ? this.ngxDateTimeRangePickerService.formatDateToDefaultFormat(dateRangeMinDate, this.config.inputDateFormat)\n          : this.config.minDate;\n        this.config.maxDate = dateRangeMaxDate\n          ? this.ngxDateTimeRangePickerService.formatDateToDefaultFormat(dateRangeMaxDate, this.config.inputDateFormat)\n          : this.config.maxDate;\n        this.config.startDate = dateRangeStartDate\n          ? this.ngxDateTimeRangePickerService.formatDateToDefaultFormat(\n              dateRangeStartDate,\n              this.config.inputDateFormat\n            )\n          : this.config.startDate;\n        this.config.endDate = dateRangeEndDate\n          ? this.ngxDateTimeRangePickerService.formatDateToDefaultFormat(dateRangeEndDate, this.config.inputDateFormat)\n          : this.config.endDate;\n\n        if (this.config.timePicker) {\n          const dateRangeMinTime = this.dateRangeModel[this.config.selectedModel].minTime;\n          const dateRangeMaxTime = this.dateRangeModel[this.config.selectedModel].maxTime;\n          const dateRangeStartTime = this.dateRangeModel[this.config.selectedModel].startTime;\n          const dateRangeEndTime = this.dateRangeModel[this.config.selectedModel].endTime;\n          this.config.minTime = this.config.minTime\n            ? this.ngxDateTimeRangePickerService.formatTimeToDefaultFormat(dateRangeMinTime)\n            : this.config.minTime;\n          this.config.maxTime = this.config.maxTime\n            ? this.ngxDateTimeRangePickerService.formatTimeToDefaultFormat(dateRangeMaxTime)\n            : this.config.maxTime;\n          this.config.startTime = this.config.startTime\n            ? this.ngxDateTimeRangePickerService.formatTimeToDefaultFormat(dateRangeStartTime)\n            : this.config.startTime;\n          this.config.endTime = this.config.endTime\n            ? this.ngxDateTimeRangePickerService.formatTimeToDefaultFormat(dateRangeEndTime)\n            : this.config.endTime;\n        }\n      }\n    }\n  }\n\n  /**\n   * @desc sets minDate, maxDate, startDate, endDate if not passed\n   */\n  handleDateArray() {\n    if (this.config.dateArray && this.config.dateArray.length > 0) {\n      this.config.dateArray = this.ngxDateTimeRangePickerService.getSanitizedDateArray(this.config);\n\n      // sort in asc order\n      this.config.dateArray = _.sortBy(this.config.dateArray, (date) => {\n        let format = null;\n        if (isNaN(Number(date))) {\n          if (this.config.inputDateFormat) {\n            format = this.config.inputDateFormat;\n          } else {\n            format = moment(date)._f;\n          }\n        }\n        const value = moment(date, format).valueOf();\n        if (!isNaN(value)) {\n          return value;\n        } else {\n          console.warn(\n            \"ERR_NGX_DATETIME_RANGE_PICKER: dateArray values are in unknown format. Pass the format or pass the dates in known format\"\n          );\n        }\n      });\n\n      const minDate = this.config.dateArray[0];\n      const maxDate = this.config.dateArray[this.config.dateArray.length - 1];\n\n      if (\n        moment(this.config.minDate, DEFAULT_DATE_FROMAT).valueOf() ===\n        moment(DEFAULT_MIN_DATE, DEFAULT_DATE_FROMAT).valueOf()\n      ) {\n        this.config.minDate = this.ngxDateTimeRangePickerService.formatDateToDefaultFormat(\n          minDate,\n          this.config.inputDateFormat\n        );\n      }\n      if (\n        moment(this.config.maxDate, DEFAULT_DATE_FROMAT).valueOf() ===\n        moment(DEFAULT_MAX_DATE, DEFAULT_DATE_FROMAT).valueOf()\n      ) {\n        this.config.maxDate = this.ngxDateTimeRangePickerService.formatDateToDefaultFormat(\n          maxDate,\n          this.config.inputDateFormat\n        );\n      }\n      if (\n        moment(this.config.startDate, DEFAULT_DATE_FROMAT).valueOf() ===\n        moment(DEFAULT_START_DATE, DEFAULT_DATE_FROMAT).valueOf()\n      ) {\n        this.config.startDate = this.ngxDateTimeRangePickerService.formatDateToDefaultFormat(\n          minDate,\n          this.config.inputDateFormat\n        );\n      }\n      if (\n        moment(this.config.endDate, DEFAULT_DATE_FROMAT).valueOf() ===\n        moment(DEFAULT_END_DATE, DEFAULT_DATE_FROMAT).valueOf()\n      ) {\n        this.config.endDate = this.ngxDateTimeRangePickerService.formatDateToDefaultFormat(\n          maxDate,\n          this.config.inputDateFormat\n        );\n      }\n    }\n  }\n\n  sanitizeDates() {\n    const subtractWeekCount = 0;\n    if (this.config.type === \"monthly\") {\n      this.config.minDate = moment(this.config.minDate, DEFAULT_DATE_FROMAT)\n        .endOf(\"month\")\n        .format(DEFAULT_DATE_FROMAT);\n      this.config.maxDate = moment(this.config.maxDate, DEFAULT_DATE_FROMAT)\n        .subtract(subtractWeekCount, \"week\")\n        .endOf(\"month\")\n        .format(DEFAULT_DATE_FROMAT);\n      this.config.startDate = moment(this.config.startDate, DEFAULT_DATE_FROMAT)\n        .endOf(\"month\")\n        .format(DEFAULT_DATE_FROMAT);\n      this.config.endDate = moment(this.config.endDate, DEFAULT_DATE_FROMAT)\n        .subtract(subtractWeekCount, \"week\")\n        .endOf(\"month\")\n        .format(DEFAULT_DATE_FROMAT);\n    } else if (this.config.type === \"quarterly\") {\n      this.config.minDate = moment(this.config.minDate, DEFAULT_DATE_FROMAT)\n        .endOf(\"quarter\")\n        .format(DEFAULT_DATE_FROMAT);\n      this.config.maxDate = moment(this.config.maxDate, DEFAULT_DATE_FROMAT)\n        .subtract(subtractWeekCount, \"week\")\n        .endOf(\"quarter\")\n        .format(DEFAULT_DATE_FROMAT);\n      this.config.startDate = moment(this.config.startDate, DEFAULT_DATE_FROMAT)\n        .endOf(\"quarter\")\n        .format(DEFAULT_DATE_FROMAT);\n      this.config.endDate = moment(this.config.endDate, DEFAULT_DATE_FROMAT)\n        .subtract(subtractWeekCount, \"week\")\n        .endOf(\"quarter\")\n        .format(DEFAULT_DATE_FROMAT);\n    }\n\n    if (this.config.type === \"weekly\") {\n      this.config.minDate = moment(this.config.minDate, DEFAULT_DATE_FROMAT)\n        .endOf(\"week\")\n        .format(DEFAULT_DATE_FROMAT);\n      this.config.maxDate = moment(this.config.maxDate, DEFAULT_DATE_FROMAT)\n        .endOf(\"week\")\n        .format(DEFAULT_DATE_FROMAT);\n      this.config.startDate = moment(this.config.startDate, DEFAULT_DATE_FROMAT)\n        .endOf(\"week\")\n        .format(DEFAULT_DATE_FROMAT);\n      this.config.endDate = moment(this.config.endDate, DEFAULT_DATE_FROMAT)\n        .endOf(\"week\")\n        .format(DEFAULT_DATE_FROMAT);\n\n      if (this.config.type === \"yearly\") {\n        const minDate = moment(this.config.minDate, DEFAULT_DATE_FROMAT).format(DEFAULT_DATE_FROMAT);\n        const startDate = moment(this.config.startDate, DEFAULT_DATE_FROMAT).format(DEFAULT_DATE_FROMAT);\n        this.config.minDate = minDate;\n        this.config.startDate = startDate;\n      }\n    }\n\n    if (\n      moment(this.config.startDate, DEFAULT_DATE_FROMAT).valueOf() <\n      moment(this.config.minDate, DEFAULT_DATE_FROMAT).valueOf()\n    ) {\n      this.config.minDate = this.config.startDate;\n    }\n\n    if (\n      moment(this.config.endDate, DEFAULT_DATE_FROMAT).valueOf() >\n      moment(this.config.maxDate, DEFAULT_DATE_FROMAT).valueOf()\n    ) {\n      this.config.maxDate = this.config.endDate;\n    }\n  }\n\n  processRanges() {\n    if (this.config.showRanges && !this.config.singleDatePicker) {\n      if (_.isEmpty(this.config.availableRanges)) {\n        this.config.availableRanges = this.ngxDateTimeRangePickerService.createDefaultRanges(this.config);\n      }\n      this.selectActiveRange();\n    } else {\n      this.activeRange = \"Custom Range\";\n      this.onRangeClick(this.activeRange, null);\n    }\n  }\n\n  selectActiveRange() {\n    _.forOwn(this.config.availableRanges, (rangeModel, range) => {\n      if (this.config.startDate === rangeModel.startDate && this.config.endDate === rangeModel.endDate) {\n        this.activeRange = range;\n        this.updateActiveItem();\n      }\n    });\n\n    if (!this.activeRange) {\n      this.activeRange = \"Custom Range\";\n      this.onRangeClick(this.activeRange, null);\n    }\n  }\n\n  generateCalendar(date, side) {\n    this.selectedMonth[side] = moment(date, DEFAULT_DATE_FROMAT).format(\"MMM\");\n    this.selectedYear[side] = this.ngxDateTimeRangePickerService.getSelectedYear(this.config, date, side);\n    const calendarLabel = `${this.selectedMonth[side]} ${this.selectedYear[side]}`;\n\n    const dates = {\n      label: calendarLabel as string,\n      months: this.ngxDateTimeRangePickerService.getMonthsAvailable(\n        this.config.minDate,\n        this.config.maxDate,\n        this.selectedYear[side]\n      ),\n      years: this.ngxDateTimeRangePickerService.getYearsAvailable(this.config),\n      itemRows: [] as Object[]\n    };\n\n    this.weekDayOptions = [\"\"];\n\n    if (this.config.type !== \"yearly\") {\n      // moment returns wrong week number\n      const monthStartWeekNumber: number = moment(date, DEFAULT_DATE_FROMAT)\n        .year(this.selectedYear[side])\n        .startOf(\"month\")\n        .week(); // previousMonthLastWeek\n      const yearStartDate = moment(this.selectedYear[side], \"YYYY\")\n        .startOf(\"year\")\n        .format(DEFAULT_DATE_FROMAT);\n      let numberOfRows = 1;\n      let rowNumber: any = 0;\n      let columns: any = 0;\n      let currentItemDate = \"\";\n      let datecharacteristics: any = {};\n      let rowItemText = \"\";\n      let rowVariables: any = {};\n      let rowItemVariables: any = {};\n      let firstDay = \"\";\n      let lastDay = \"\";\n\n      if (this.config.type === \"daily\") {\n        numberOfRows = this.ngxDateTimeRangePickerService.getNumberOfWeeks(date);\n        this.weekDayOptions = [\"su\", \"mo\", \"tu\", \"we\", \"th\", \"fr\", \"sa\"];\n      } else if (this.config.type === \"weekly\") {\n        numberOfRows = 8;\n        this.weekDayOptions = [\"\", \"\", \"\", \"\", \"\", \"\", \"\"];\n      } else if (this.config.type === \"monthly\") {\n        numberOfRows = 4;\n        this.weekDayOptions = [\"\", \"\", \"\"];\n      } else if (this.config.type === \"quarterly\") {\n        numberOfRows = 4;\n        this.weekDayOptions = [\"\"];\n      }\n\n      for (let dateRows = 0; dateRows < numberOfRows; dateRows++) {\n        const dateRowObj = {\n          rowNumber: null as string,\n          rowNumberText: null as string,\n          items: [] as Object[]\n        };\n\n        const rowOptions: any = {};\n        rowOptions.type = this.config.type;\n        rowOptions.monthStartWeekNumber = monthStartWeekNumber;\n        rowOptions.dateRows = dateRows;\n        rowOptions.year = this.selectedYear[side];\n        rowVariables = this.ngxDateTimeRangePickerService.getCalendarRowVariables(rowOptions);\n\n        rowNumber = rowVariables.rowNumber;\n        columns = rowVariables.columns;\n\n        dateRowObj.rowNumber = rowNumber;\n        dateRowObj.rowNumberText = this.ngxDateTimeRangePickerService.getCalendarRowNumberText(\n          this.config.type,\n          rowNumber\n        );\n\n        for (let rowItem = 0; rowItem <= columns; rowItem++) {\n          const rowItemOptions: any = {};\n          rowItemOptions.type = this.config.type;\n          rowItemOptions.monthStartWeekNumber = monthStartWeekNumber;\n          rowItemOptions.dateRows = dateRows;\n          rowItemOptions.rowNumber = rowNumber;\n          rowItemOptions.yearStartDate = yearStartDate;\n          rowItemOptions.year = this.selectedYear[side];\n          rowItemOptions.rowItem = rowItem;\n          rowItemOptions.columns = columns;\n          rowItemOptions.year = this.selectedYear[side];\n          rowItemVariables = this.ngxDateTimeRangePickerService.getCalendarRowItemVariables(rowItemOptions);\n\n          currentItemDate = rowItemVariables.currentItemDate;\n          rowItemText = rowItemVariables.rowItemText;\n          firstDay = rowItemVariables.firstDay;\n          lastDay = rowItemVariables.lastDay;\n          rowOptions.itemCount = rowItemVariables.itemCount;\n          datecharacteristics = this.getDatecharacteristics(currentItemDate, calendarLabel, side);\n\n          const itemObj = {\n            date: currentItemDate,\n            rowItemText,\n            firstDay,\n            lastDay,\n            available: datecharacteristics.available,\n            inRange: datecharacteristics.inRange,\n            active: datecharacteristics.active,\n            today: datecharacteristics.today\n          };\n          if (this.ngxDateTimeRangePickerService.isRowIemValid(rowOptions)) {\n            if (datecharacteristics.active) {\n              this.activeItem[side] = itemObj;\n            }\n            dateRowObj.items.push(itemObj);\n          }\n        }\n        dates.itemRows.push(dateRowObj);\n      }\n    }\n\n    this.calendarAvailable[side] = true;\n    return dates;\n  }\n\n  generateTimePicker(time, side) {\n    const timeObject = {\n      hour: [],\n      minute: [],\n      meridian: []\n    };\n\n    let startHour = 0;\n    const endHour = 23;\n    let startMinute = 0;\n    const endMinute = 59;\n    let selectedHour = side === \"left\" ? startHour : endHour;\n    let selectedMinute = side === \"left\" ? startMinute : endMinute;\n    const startDateEpoch = moment(this.config.startDate, DEFAULT_DATE_FROMAT).valueOf();\n    const endDateEpoch = moment(this.config.endDate, DEFAULT_DATE_FROMAT).valueOf();\n\n    if (time) {\n      selectedHour = moment(time, DEFAULT_TIME_FORMAT).format(\"H\");\n      selectedMinute = moment(time, DEFAULT_TIME_FORMAT).format(\"m\");\n\n      if (side === \"right\" && startDateEpoch === endDateEpoch) {\n        startHour = selectedHour;\n        startMinute = selectedMinute;\n      }\n    }\n\n    // let dateOptions = {\n    //   timeZone: TZ_NAMES[this.selectedTimezone],\n    //   timeZoneName: 'short',\n    //   hour12: false\n    // }\n    // let startDateObj = new Date(`Jan 1 1970 ${startHour}:${startMinute}:00 GMT-0700 (Mountain Standard Time)`);\n    // let endDateObj = new Date(`Jan 1 1970 ${endHour}:${endMinute}:00 GMT-0700 (Mountain Standard Time)`);\n    // startTime = startDateObj.toLocaleTimeString('en-US', dateOptions);\n    // endTime = endDateObj.toLocaleTimeString('en-US', dateOptions);\n\n    // startHour = moment(startTime, 'HH:mm:ss').format('H');\n    // endHour = moment(endTime, 'HH:mm:ss').format('H');\n    // startMinute = moment(startTime, 'HH:mm:ss').format('m');\n    // endMinute = moment(endTime, 'HH:mm:ss').format('m');\n\n    for (let h = startHour; h <= 23; h++) {\n      const stringified_h = this.ngxDateTimeRangePickerService.convertToViewTimeItem(h);\n      timeObject.hour.push(stringified_h);\n    }\n    for (let m = startMinute; m <= 59; m++) {\n      const stringified_m = this.ngxDateTimeRangePickerService.convertToViewTimeItem(m);\n      timeObject.minute.push(stringified_m);\n    }\n\n    this.selectedHour[side] = this.ngxDateTimeRangePickerService.convertToViewTimeItem(selectedHour);\n    this.selectedMinute[side] = this.ngxDateTimeRangePickerService.convertToViewTimeItem(selectedMinute);\n\n    if (side === \"left\") {\n      this.config.startTime = `${this.selectedHour[side]}:${this.selectedMinute[side]}`;\n    } else if (side === \"right\") {\n      this.config.endTime = `${this.selectedHour[side]}:${this.selectedMinute[side]}`;\n    }\n\n    return timeObject;\n  }\n\n  capitalize(day) {\n    return _.capitalize(day);\n  }\n\n  updateInputField() {\n    const startDate = this.ngxDateTimeRangePickerService.formatStartDate(this.config, this.config.viewDateFormat);\n    const endDate = this.config.endDate\n      ? moment(this.config.endDate, DEFAULT_DATE_FROMAT).format(this.config.viewDateFormat)\n      : \"\";\n\n    if (this.config.singleDatePicker) {\n      let startDateText = startDate;\n      let endDataText = endDate;\n      let dateText = \"\";\n\n      if (this.config.timePicker) {\n        startDateText = `${startDate} ${this.config.startTime}`;\n        endDataText = `${endDate} ${this.config.endTime}`;\n      }\n      if (this.config.displayBeginDate) {\n        dateText = `${startDateText}`;\n      } else if (this.config.displayEndDate) {\n        dateText = `${endDataText}`;\n      } else {\n        dateText = `${startDateText} - ${endDataText}`;\n      }\n\n      this.selectedDateText = dateText;\n    } else {\n      let startDateText = startDate;\n      let endDataText = endDate;\n\n      if (this.config.timePicker) {\n        startDateText = `${startDate} ${this.config.startTime}`;\n        endDataText = `${endDate} ${this.config.endTime}`;\n      }\n\n      this.selectedDateText = `${startDateText} - ${endDataText}`;\n    }\n\n    if (this.canBeEmpty || this.selectedDateText.indexOf(\"nvalid\") < 0) {\n      this.isValidFilter = true;\n    }\n\n    if (this.config.type === \"yearly\") {\n      this.dateTitleText.left = `${startDate}`;\n      this.dateTitleText.right = `${endDate}`;\n    } else {\n      this.updateActiveItemInputField();\n    }\n  }\n\n  updateActiveItemInputField() {\n    let itemFirstDate = \"\";\n    let itemLastDate = \"\";\n    let itemText = \"\";\n    if (!this.config.singleDatePicker) {\n      itemFirstDate = this.activeItem.left.firstDay;\n      itemLastDate = this.activeItem.left.lastDay;\n      itemText = this.activeItem.left.rowItemText;\n      itemFirstDate = moment(itemFirstDate, DEFAULT_DATE_FROMAT).format(this.config.viewDateFormat);\n      itemLastDate = moment(itemLastDate, DEFAULT_DATE_FROMAT).format(this.config.viewDateFormat);\n      if (this.config.type !== \"daily\") {\n        this.dateTitleText.left = `${itemText} (${itemFirstDate} - ${itemLastDate})`;\n      } else {\n        this.dateTitleText.left = `${itemFirstDate}`;\n      }\n    }\n\n    itemFirstDate = this.activeItem.right.firstDay;\n    itemLastDate = this.activeItem.right.lastDay;\n    itemText = this.activeItem.right.rowItemText;\n    itemFirstDate = moment(itemFirstDate, DEFAULT_DATE_FROMAT).format(this.config.viewDateFormat);\n    itemLastDate = moment(itemLastDate, DEFAULT_DATE_FROMAT).format(this.config.viewDateFormat);\n    if (this.config.type !== \"daily\") {\n      this.dateTitleText.right = `${itemText} (${itemFirstDate} - ${itemLastDate})`;\n    } else {\n      this.dateTitleText.right = `${itemFirstDate}`;\n    }\n  }\n\n  dateRangeSelected() {\n    const dateRangeModel: NgxDatetimeRangePickerModelItem = this.getNgxDatetimeRangePickerModelItem();\n    this.showCalendar = false;\n    this.filterInputBox.nativeElement.classList.remove(\"empty-filter\");\n    this.doDateRangeModelChange();\n    this.dateRangeChanged.emit(dateRangeModel);\n  }\n\n  getDateRangeModel(format?) {\n    let dRModel = {};\n    if (undefined !== this.dateRangeModel && !_.isEmpty(this.dateRangeModel)) {\n      dRModel = _.cloneDeep(this.dateRangeModel);\n    }\n    dRModel[this.config.selectedModel] = this.getNgxDatetimeRangePickerModelItem(format);\n    return dRModel;\n  }\n\n  getNgxDatetimeRangePickerModelItem(format?): NgxDatetimeRangePickerModelItem {\n    let dateRangeModelItem: NgxDatetimeRangePickerModelItem;\n    let outputDateFormat = this.config.outputDateFormat;\n    if (undefined !== format) {\n      outputDateFormat = format;\n    }\n    let startDate = this.ngxDateTimeRangePickerService.formatStartDate(this.config, outputDateFormat);\n    let endDate = moment(this.config.endDate, DEFAULT_DATE_FROMAT).format(outputDateFormat);\n\n    if (this.config.selectedTimezone) {\n      startDate = this.ngxDateTimeRangePickerService.formatToZoneDate(\n        this.config.selectedTimezone,\n        outputDateFormat,\n        startDate\n      );\n      endDate = this.ngxDateTimeRangePickerService.formatToZoneDate(\n        this.config.selectedTimezone,\n        outputDateFormat,\n        endDate\n      );\n    }\n\n    dateRangeModelItem = { startDate, endDate };\n\n    if (this.config.timePicker) {\n      const startTime = this.config.startTime;\n      const endTime = this.config.endTime;\n\n      dateRangeModelItem = {\n        startDate,\n        endDate,\n        startTime,\n        endTime\n      };\n    }\n\n    return dateRangeModelItem;\n  }\n\n  doApply() {\n    const startDate = this.config.startDate;\n    const endDate = this.config.endDate;\n\n    this.activeStartDate = startDate as string;\n    this.activeEndDate = endDate as string;\n\n    if (this.config.startDate && this.config.endDate) {\n      if (!this.config.timePicker) {\n        this.dateRangeSelected();\n      } else {\n        if (this.config.timePicker) {\n          _.forEach(this.sides, (side) => {\n            this.times[side] = this.generateTimePicker(null, side);\n          });\n        }\n      }\n    }\n\n    let outputStartDate = startDate ? moment(startDate, DEFAULT_DATE_FROMAT).valueOf() : null;\n    let outputEndDate = endDate ? moment(endDate, DEFAULT_DATE_FROMAT).valueOf() : null;\n    if (this.config.outputDateFormat) {\n      outputStartDate = startDate ? moment(startDate, DEFAULT_DATE_FROMAT).format(this.config.outputDateFormat) : null;\n      outputEndDate = endDate ? moment(endDate, DEFAULT_DATE_FROMAT).format(this.config.outputDateFormat) : null;\n    }\n    this.selectedDate.emit({\n      startDate: outputStartDate,\n      endDate: outputEndDate\n    });\n\n    this.updateInputField();\n  }\n\n  doDateRangeModelChange() {\n    const dateRangeModel = this.getDateRangeModel(this.config.inputDateFormat);\n    this.dateRangeModelChange.emit(dateRangeModel);\n  }\n\n  onTimezoneChange(tz) {\n    this.selectedTimezone = tz;\n    this.todayTime = this.ngxDateTimeRangePickerService.getZoneToday(this.selectedTimezone, this.config.viewDateFormat);\n\n    this.parseOptionsToDefaultDateFormat();\n    _.forEach(this.sides, (side) => {\n      let date = this.config.startDate;\n      let time = this.config.startTime;\n      if (side === \"right\") {\n        date = this.config.endDate;\n        time = this.config.endTime;\n      }\n      this.dates[side] = this.generateCalendar(date, side);\n      if (this.config.timePicker) {\n        this.times[side] = this.generateTimePicker(time, side);\n      }\n    });\n  }\n\n  getSelectedTimeItemText(item, side) {\n    if (item === \"hour\") {\n      return this.selectedHour[side];\n    } else if (item === \"minute\") {\n      return this.selectedMinute[side];\n    }\n  }\n\n  setActiveItemOnRangeClick() {\n    this.updateActiveItem();\n    this.doApply();\n  }\n\n  updateActiveItem() {\n    const startDate: any = this.ngxDateTimeRangePickerService.getFirstLastDay(this.config.startDate, this.config.type);\n    const endDate: any = this.ngxDateTimeRangePickerService.getFirstLastDay(this.config.endDate, this.config.type);\n\n    if (this.config.type === \"weekly\") {\n      startDate.rowItemText = `W${this.ngxDateTimeRangePickerService.getWeekNumber(startDate.firstDay)}`;\n      endDate.rowItemText = `W${this.ngxDateTimeRangePickerService.getWeekNumber(endDate.firstDay)}`;\n    } else if (this.config.type === \"monthly\") {\n      startDate.rowItemText = `${moment(startDate.firstDay, DEFAULT_DATE_FROMAT).format(\"MMM\")}`;\n      endDate.rowItemText = `${moment(endDate.firstDay, DEFAULT_DATE_FROMAT).format(\"MMM\")}`;\n    } else if (this.config.type === \"quarterly\") {\n      startDate.rowItemText = `Quarter ${moment(startDate.firstDay, DEFAULT_DATE_FROMAT).quarter()}`;\n      endDate.rowItemText = `Quarter ${moment(endDate.firstDay, DEFAULT_DATE_FROMAT).quarter()}`;\n    }\n\n    this.activeItem.left = startDate;\n    this.activeItem.right = endDate;\n\n    // this.doApply();\n  }\n}\n","declare var require: any;\nconst moment = require(\"moment\");\nconst USA_MST_TZ_CODE = \"MST\";\nconst USA_TZ_CODE = \"PST\";\nconst EU_TZ_CODE = \"CET\";\n\nexport const NgxDatetimeRangePickerConstants = {\n  DEFAULT: {\n    TYPE: \"daily\",\n    INPUT_CLASS: \"m1drp\",\n    DATE_FROMAT: \"YYYY-MM-DD\",\n    TIME_FORMAT: \"HH:mm\",\n    START_DATE: moment().format(\"YYYY-MM-DD\"),\n    END_DATE: moment().format(\"YYYY-MM-DD\"),\n    MIN_DATE: moment()\n      .subtract(2, \"year\")\n      .startOf(\"year\")\n      .format(\"YYYY-MM-DD\"),\n    MAX_DATE: moment().format(\"YYYY-MM-DD\"),\n    START_TIME: \"00:00\",\n    END_TIME: \"23:59\",\n    MODEL_KEYS: [\"daily\", \"weekly\", \"monthly\", \"quarterly\", \"yearly\"],\n    TZ_CODE: USA_MST_TZ_CODE\n  },\n  CONSTANT: {\n    MONTHS_AVAILABLE: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"],\n    USA_MST_TZ_CODE,\n    USA_TZ_CODE,\n    EU_TZ_CODE,\n    TZ_CODES: [USA_TZ_CODE, EU_TZ_CODE],\n    OFFSETS: {\n      [USA_TZ_CODE]: {\n        SO: -7,\n        WO: -8\n      },\n      [EU_TZ_CODE]: {\n        SO: 1,\n        WO: 0\n      }\n    },\n    TZ_NAMES: {\n      [USA_MST_TZ_CODE]: \"America/Phoenix\",\n      [USA_TZ_CODE]: \"America/Los_Angeles\",\n      [EU_TZ_CODE]: \"Europe/Berlin\"\n    }\n  }\n};\n","import { Injectable } from \"@angular/core\";\nimport { NgxDatetimeRangePickerConstants } from \"./ngx-datetime-range-picker.constants\";\nimport { AriaLabelsOptions, NgxDatetimeRangePickerOptions, NgxDatetimeRangePickerSettings } from \"./interfaces/index\";\n\ndeclare var require: any;\nconst moment = require(\"moment\");\nconst _ = require(\"lodash\");\n\nconst DEFAULT_TYPE = NgxDatetimeRangePickerConstants.DEFAULT.TYPE;\nconst DEFAULT_INPUT_CLASS = NgxDatetimeRangePickerConstants.DEFAULT.INPUT_CLASS;\nconst DEFAULT_DATE_FROMAT = NgxDatetimeRangePickerConstants.DEFAULT.DATE_FROMAT;\nconst DEFAULT_TIME_FORMAT = NgxDatetimeRangePickerConstants.DEFAULT.TIME_FORMAT;\nconst DEFAULT_START_DATE = NgxDatetimeRangePickerConstants.DEFAULT.START_DATE;\nconst DEFAULT_END_DATE = NgxDatetimeRangePickerConstants.DEFAULT.END_DATE;\nconst DEFAULT_MIN_DATE = NgxDatetimeRangePickerConstants.DEFAULT.MIN_DATE;\nconst DEFAULT_MAX_DATE = NgxDatetimeRangePickerConstants.DEFAULT.MAX_DATE;\nconst DEFAULT_START_TIME = NgxDatetimeRangePickerConstants.DEFAULT.START_TIME;\nconst DEFAULT_END_TIME = NgxDatetimeRangePickerConstants.DEFAULT.END_TIME;\nconst DEFAULT_MODEL_KEYS = NgxDatetimeRangePickerConstants.DEFAULT.MODEL_KEYS;\nconst MONTHS_AVAILABLE = NgxDatetimeRangePickerConstants.CONSTANT.MONTHS_AVAILABLE;\nconst DEFAULT_TIMEZONE_CODE = NgxDatetimeRangePickerConstants.DEFAULT.TZ_CODE;\nconst EU_TZ_CODE = NgxDatetimeRangePickerConstants.CONSTANT.EU_TZ_CODE;\nconst TZ_NAMES = NgxDatetimeRangePickerConstants.CONSTANT.TZ_NAMES;\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class NgxDatetimeRangePickerService {\n  getNotAvailableText(): string {\n    return \"N/A\";\n  }\n\n  getDefaultAriaLabelOptions(): AriaLabelsOptions {\n    return {\n      inputField: \"Date Range Input Field\" as string\n    };\n  }\n\n  getDefaultOptions(): NgxDatetimeRangePickerOptions {\n    return {\n      dateArray: [] as string[],\n      startDate: DEFAULT_START_DATE as string,\n      endDate: DEFAULT_END_DATE as string,\n      minDate: DEFAULT_MIN_DATE as string,\n      maxDate: DEFAULT_MAX_DATE as string,\n      startTime: DEFAULT_START_TIME as string,\n      endTime: DEFAULT_END_TIME as string\n    };\n  }\n\n  getDefaultSettings(): NgxDatetimeRangePickerSettings {\n    return {\n      type: DEFAULT_TYPE as string,\n      modelKeys: DEFAULT_MODEL_KEYS as string[],\n      selectedModel: undefined as string,\n      showTimezoneSelect: false as boolean,\n      useLocalTimezone: false as boolean,\n      timePicker: false as boolean,\n      inputClass: DEFAULT_INPUT_CLASS as string,\n      inputDateFormat: null as string,\n      viewDateFormat: DEFAULT_DATE_FROMAT as string,\n      outputDateFormat: DEFAULT_DATE_FROMAT as string,\n      singleDatePicker: false as boolean,\n      componentDisabled: false as boolean,\n      placeholder: \"Select Date\" as string,\n      showRowNumber: true as boolean,\n      availableRanges: {} as Object,\n      showRanges: true as boolean,\n      disableWeekends: false as boolean,\n      disableWeekdays: false as boolean,\n      retailCalendar: false as boolean,\n      displayBeginDate: false as boolean,\n      displayEndDate: false as boolean,\n      ariaLabels: this.getDefaultAriaLabelOptions() as AriaLabelsOptions\n    };\n  }\n\n  formatDateToDefaultFormat(date, format = DEFAULT_DATE_FROMAT): string {\n    let fromattedDate = null;\n    if (date) {\n      if (!isNaN(Number(date))) {\n        fromattedDate = moment(date).format(DEFAULT_DATE_FROMAT);\n      } else {\n        if (!format) {\n          format = moment(date)._f;\n        } else {\n          if (format !== moment(date)._f) {\n            console.warn(\"ERR_NGX_DATETIME_RANGE_PICKER: inputDateFormat !== dateFormat\");\n          }\n        }\n        if (!format) {\n          console.warn(\n            \"ERR_NGX_DATETIME_RANGE_PICKER: The provided date is in unknown format. Pass the format or pass the date in known format\"\n          );\n        }\n        fromattedDate = moment(date, format).format(DEFAULT_DATE_FROMAT);\n      }\n    }\n\n    return fromattedDate;\n  }\n\n  formatTimeToDefaultFormat(time) {\n    let formattedTime = null;\n    if (time) {\n      if (time.indexOf(\":\") > -1) {\n        if (time.indexOf(\"AM\") > -1 || time.indexOf(\"PM\") > -1) {\n          formattedTime = moment(time, \"h:mm A\").format(DEFAULT_TIME_FORMAT);\n        } else {\n          formattedTime = time;\n        }\n      } else {\n        console.warn(\n          \"ERR_NGX_DATETIME_RANGE_PICKER: The provided time is not in correct format. Format: HH:mm or hh:mm A\"\n        );\n      }\n    }\n    return formattedTime;\n  }\n\n  getFrequencyColumnHeader(type) {\n    return (() => {\n      switch (type) {\n        case \"daily\":\n          return \"W#\";\n        case \"weekly\":\n          return \"\";\n        case \"monthly\":\n          return \"Q#\";\n        case \"quarterly\":\n          return \"Year\";\n        case \"yearly\":\n          return \"\";\n      }\n    })();\n  }\n\n  getCalendarRowNumberText(type, number) {\n    return (() => {\n      switch (type) {\n        case \"daily\":\n          return `W${number}`;\n        case \"weekly\":\n          return \"\";\n        case \"monthly\":\n          return `Q${number}`;\n        case \"quarterly\":\n          return `${number}`;\n        case \"yearly\":\n          return \"\";\n      }\n    })();\n  }\n\n  createDefaultRanges(config): Object {\n    const ranges = {};\n    const type = config.type;\n    const maxDate = _.cloneDeep(config.maxDate);\n    const formattedMaxDate = this.formatDateToDefaultFormat(maxDate, DEFAULT_DATE_FROMAT);\n\n    if (type === \"daily\") {\n      ranges[\"Last 7 Days\"] = {\n        startDate: moment(formattedMaxDate, DEFAULT_DATE_FROMAT)\n          .subtract(6, \"days\")\n          .format(DEFAULT_DATE_FROMAT),\n        endDate: formattedMaxDate\n      };\n      ranges[\"Last 30 Days\"] = {\n        startDate: moment(formattedMaxDate, DEFAULT_DATE_FROMAT)\n          .subtract(29, \"days\")\n          .format(DEFAULT_DATE_FROMAT),\n        endDate: formattedMaxDate\n      };\n      ranges[\"Last 90 Days\"] = {\n        startDate: moment(formattedMaxDate, DEFAULT_DATE_FROMAT)\n          .subtract(89, \"days\")\n          .format(DEFAULT_DATE_FROMAT),\n        endDate: formattedMaxDate\n      };\n    } else if (type === \"weekly\") {\n      ranges[\"Last 4 Weeks\"] = {\n        startDate: moment(formattedMaxDate, DEFAULT_DATE_FROMAT)\n          .subtract(3, \"weeks\")\n          .format(DEFAULT_DATE_FROMAT),\n        endDate: formattedMaxDate\n      };\n      ranges[\"Last 13 Weeks\"] = {\n        startDate: moment(formattedMaxDate, DEFAULT_DATE_FROMAT)\n          .subtract(12, \"weeks\")\n          .format(DEFAULT_DATE_FROMAT),\n        endDate: formattedMaxDate\n      };\n      ranges[\"Last 26 Weeks\"] = {\n        startDate: moment(formattedMaxDate, DEFAULT_DATE_FROMAT)\n          .subtract(25, \"weeks\")\n          .format(DEFAULT_DATE_FROMAT),\n        endDate: formattedMaxDate\n      };\n    } else if (type === \"monthly\") {\n      // if(retailCalendar) ? subtract(3, 'months')....so on for 'Last 3 Months'....so on\n      ranges[\"Last 3 Months\"] = {\n        startDate: moment(formattedMaxDate, DEFAULT_DATE_FROMAT)\n          .subtract(2, \"months\")\n          .format(DEFAULT_DATE_FROMAT),\n        endDate: formattedMaxDate\n      };\n      ranges[\"Last 6 Months\"] = {\n        startDate: moment(formattedMaxDate, DEFAULT_DATE_FROMAT)\n          .subtract(5, \"months\")\n          .format(DEFAULT_DATE_FROMAT),\n        endDate: formattedMaxDate\n      };\n      ranges[\"Last 9 Months\"] = {\n        startDate: moment(formattedMaxDate, DEFAULT_DATE_FROMAT)\n          .subtract(8, \"months\")\n          .format(DEFAULT_DATE_FROMAT),\n        endDate: formattedMaxDate\n      };\n    } else if (type === \"quarterly\") {\n      // if(retailCalendar) ? subtract(1, 'quarters')....so on for 'Last 2 Quarters'....so on\n      ranges[\"Last 2 Quarters\"] = {\n        startDate: moment(formattedMaxDate, DEFAULT_DATE_FROMAT)\n          .subtract(1, \"quarters\")\n          .format(DEFAULT_DATE_FROMAT),\n        endDate: formattedMaxDate\n      };\n      ranges[\"Last 4 Quarters\"] = {\n        startDate: moment(formattedMaxDate, DEFAULT_DATE_FROMAT)\n          .subtract(3, \"quarters\")\n          .format(DEFAULT_DATE_FROMAT),\n        endDate: formattedMaxDate\n      };\n    } else if (type === \"yearly\") {\n      ranges[\"Last Year\"] = {\n        startDate: moment(formattedMaxDate, DEFAULT_DATE_FROMAT)\n          .subtract(1, \"year\")\n          .format(DEFAULT_DATE_FROMAT),\n        endDate: formattedMaxDate\n      };\n    }\n    ranges[\"Custom Range\"] = { startDate: null, endDate: null };\n    return ranges;\n  }\n\n  getSanitizedDateArray(config) {\n    const sanitizedDateArray = [];\n    const type = config.type;\n    const dateArray = config.dateArray;\n    const inputDateFormat = config.inputDateFormat;\n\n    // dateArray can have nulls\n    _.forEach(dateArray, (date) => {\n      if (date) {\n        let format = null;\n        if (isNaN(Number(date))) {\n          if (inputDateFormat) {\n            format = inputDateFormat;\n          } else {\n            format = moment(date)._f;\n          }\n        }\n\n        if (inputDateFormat !== moment(date)._f) {\n          console.warn(\n            \"ERR_NGX_DATETIME_RANGE_PICKER: inputDateFormat !== dateFormat in dateArray. Converted dates might not be as expected\"\n          );\n        }\n\n        let value = format ? moment(date, format).format(format) : moment(date).valueOf();\n        if (type === \"weekly\") {\n          value = format\n            ? moment(date, format)\n                .endOf(\"week\")\n                .format(format)\n            : moment(date)\n                .endOf(\"week\")\n                .valueOf();\n        } else if (type === \"monthly\") {\n          value = format\n            ? moment(date, format)\n                .endOf(\"month\")\n                .format(format)\n            : moment(date)\n                .endOf(\"month\")\n                .valueOf();\n        } else if (type === \"quarterly\") {\n          value = format\n            ? moment(date, format)\n                .endOf(\"quarter\")\n                .format(format)\n            : moment(date)\n                .endOf(\"quarter\")\n                .valueOf();\n        } else if (type === \"yearly\") {\n          value = format\n            ? moment(date, format)\n                .endOf(\"year\")\n                .format(format)\n            : moment(date)\n                .endOf(\"year\")\n                .valueOf();\n        }\n        if (value) {\n          sanitizedDateArray.push(value);\n        } else {\n          console.warn(\n            `ERR_NGX_DATETIME_RANGE_PICKER: dateArray values are in unknown format. Pass the format or pass the dates in known format`\n          );\n        }\n      }\n    });\n\n    return _.uniqBy(sanitizedDateArray);\n  }\n\n  getNumberOfWeeks(date): number {\n    let numberOfWeeks = null;\n    if (date) {\n      const monthStart: number = moment(date, DEFAULT_DATE_FROMAT)\n        .startOf(\"month\")\n        .day();\n      const monthEnd: number = Number(\n        moment(date, DEFAULT_DATE_FROMAT)\n          .endOf(\"month\")\n          .format(\"D\")\n      );\n      numberOfWeeks = Math.ceil((monthStart + monthEnd) / 7);\n    }\n    return numberOfWeeks;\n  }\n\n  getYearlyWeekCount(year, retailCalendar?) {\n    let weekCount: number = null;\n    if (year) {\n      const yearStartDate = moment(year, \"YYYY\")\n        .startOf(\"year\")\n        .format(DEFAULT_DATE_FROMAT);\n      const yearEndDate = moment(year, \"YYYY\")\n        .endOf(\"year\")\n        .format(DEFAULT_DATE_FROMAT);\n      const yearEndWeekEndDate = moment(yearEndDate, DEFAULT_DATE_FROMAT)\n        .startOf(\"week\")\n        .format(DEFAULT_DATE_FROMAT);\n\n      const yearStartWeekEndDate = moment(yearStartDate, DEFAULT_DATE_FROMAT)\n        .endOf(\"week\")\n        .format(DEFAULT_DATE_FROMAT);\n\n      const yearSartWeekNumber = this.getWeekNumber(yearStartWeekEndDate);\n      const yearEndWeekNumber = this.getWeekNumber(yearEndWeekEndDate);\n      weekCount = yearEndWeekNumber - yearSartWeekNumber + 1;\n    }\n    return weekCount;\n  }\n\n  getMonthsAvailable(minDate, maxDate, selectedYear) {\n    const months = [];\n    if (minDate && maxDate && selectedYear) {\n      let minDatems = moment(minDate, DEFAULT_DATE_FROMAT).valueOf();\n      let maxDatems = moment(maxDate, DEFAULT_DATE_FROMAT).valueOf();\n      const yearStartms = moment()\n        .year(selectedYear)\n        .startOf(\"year\")\n        .valueOf();\n      const yearEndms = moment()\n        .year(selectedYear)\n        .endOf(\"year\")\n        .valueOf();\n\n      if (minDatems < yearStartms) {\n        minDatems = yearStartms;\n      }\n      if (maxDatems > yearEndms) {\n        maxDatems = yearEndms;\n      }\n\n      let minDateMonthNumber = moment(minDatems).month();\n      const diff: number = moment(maxDatems).diff(moment(minDatems), \"months\");\n      const maxMonths = diff < MONTHS_AVAILABLE.length ? diff : MONTHS_AVAILABLE.length;\n\n      for (let i = 0; i <= maxMonths; i++) {\n        if (minDateMonthNumber >= MONTHS_AVAILABLE.length) {\n          months.push(MONTHS_AVAILABLE[minDateMonthNumber - MONTHS_AVAILABLE.length]);\n        } else {\n          months.push(MONTHS_AVAILABLE[minDateMonthNumber]);\n        }\n        minDateMonthNumber++;\n      }\n    }\n    return months;\n  }\n\n  getYearsAvailable(config) {\n    const minDate = config ? config.minDate : \"\";\n    const maxDate = config ? config.maxDate : \"\";\n    const years = [];\n    if (minDate && maxDate) {\n      const minYear = Number(this.getSelectedYear(config, minDate, \"left\"));\n      const maxYear = Number(this.getSelectedYear(config, maxDate, \"right\"));\n      const diff = maxYear - minYear;\n\n      for (let i = 0; i <= diff; i++) {\n        years.push(`${minYear + i}`);\n      }\n    }\n    return years.reverse();\n  }\n\n  isDateAvailable(date, minDate, maxDate, startDate, endDate, monthStartDate, monthEndDate, config): boolean {\n    let available = false;\n    const type = config.type;\n    const dateArray = config.dateArray ? config.dateArray : [];\n    const inputDateFormat = config.inputDateFormat;\n    const disableWeekends = config.disableWeekends;\n    const disableWeekdays = config.disableWeekdays;\n    if (type === \"daily\") {\n      minDate = minDate > monthStartDate ? minDate : monthStartDate;\n      maxDate = maxDate < monthEndDate ? maxDate : monthEndDate;\n    }\n\n    // if(date === minDate\n    //     || date === maxDate) {\n    //   available = true;\n    // }\n\n    if (date >= minDate && date <= maxDate) {\n      if (dateArray.length > 0) {\n        available = _.some(dateArray, (d) => {\n          let format = null;\n          if (isNaN(Number(date))) {\n            if (inputDateFormat) {\n              format = inputDateFormat;\n            } else {\n              format = moment(date)._f;\n            }\n          }\n          return moment(d, format).valueOf() === date;\n        });\n      } else {\n        available = true;\n      }\n\n      if (available) {\n        if (disableWeekends) {\n          available = !this.isWeekend(date);\n        }\n        if (disableWeekdays) {\n          available = !this.isWeekday(date);\n        }\n      }\n    }\n    return available;\n  }\n\n  isDateInRange(date, minDate, maxDate, startDate, endDate, monthStartDate, monthEndDate, available, config): boolean {\n    let inRange = false;\n    const type = config.type;\n    const singleDatePicker = config.singleDatePicker;\n    if (!singleDatePicker) {\n      if (type === \"daily\") {\n        minDate = monthStartDate;\n        maxDate = monthEndDate;\n      }\n      if (date >= startDate && date <= endDate && date >= minDate && date <= maxDate) {\n        if (available) {\n          inRange = true;\n        }\n      }\n    }\n    return inRange;\n  }\n\n  isDateActive(date, startDate, endDate, side): boolean {\n    let active = false;\n    if ((date === startDate && side === \"left\") || (date === endDate && side === \"right\")) {\n      active = true;\n    }\n    return active;\n  }\n\n  isDateToday(date, config): boolean {\n    let today = false;\n    const todayDate = moment()\n      .startOf(\"day\")\n      .valueOf();\n    const type = config.type;\n    const firstLastDay = this.getFirstLastDay(moment(todayDate).format(DEFAULT_DATE_FROMAT), type);\n    const firstDay = moment(firstLastDay.firstDay, DEFAULT_DATE_FROMAT).valueOf();\n    const lastDay = moment(firstLastDay.lastDay, DEFAULT_DATE_FROMAT).valueOf();\n    if (date >= firstDay && date <= lastDay) {\n      today = true;\n    }\n    return today;\n  }\n\n  isWeekday(date, format?) {\n    return !this.isWeekend(date, format);\n  }\n\n  isWeekend(date, format?) {\n    if (!format) {\n      format = null;\n    }\n    const day = moment(date, format).day();\n    return day === 0 || day === 6 ? true : false;\n  }\n\n  getCalendarRowVariables(options) {\n    const variables: any = {};\n    const type = options.type;\n    const monthStartWeekNumber = options.monthStartWeekNumber;\n    const dateRows = options.dateRows;\n    const year = `${options.year}`;\n\n    if (type === \"daily\") {\n      variables.rowNumber = monthStartWeekNumber + dateRows;\n      variables.columns = 6;\n    } else if (type === \"weekly\") {\n      // variables.rowNumber = `${(dateRows*2)+1} - ${(dateRows*2)+2}`;\n      variables.rowNumber = ``;\n      variables.columns = 6;\n    } else if (type === \"monthly\") {\n      variables.rowNumber = dateRows + 1;\n      variables.columns = 2;\n    } else if (type === \"quarterly\") {\n      variables.rowNumber = year.charAt(dateRows);\n      variables.columns = 0;\n    } else if (type === \"yearly\") {\n      variables.rowNumber = \"\";\n      variables.columns = 0;\n    }\n\n    return variables;\n  }\n\n  getCalendarRowItemVariables(options) {\n    const variables: any = {\n      currentItemDate: \"\",\n      rowItemText: \"\",\n      itemCount: null\n    };\n    const type = options.type;\n    const monthStartWeekNumber = options.monthStartWeekNumber;\n    const yearStartDate = options.yearStartDate;\n    const year = options.year;\n    const rowItem = options.rowItem;\n    const dateRows = options.dateRows;\n    const columns = options.columns;\n    const itemCount = rowItem + dateRows * columns + dateRows;\n    let currentItemDate = \"\";\n    let rowItemText = \"\";\n    let firstLastDayObject: any = {};\n\n    if (type === \"daily\") {\n      if (!_.isNil(monthStartWeekNumber) && !_.isNil(dateRows) && !_.isNil(year)) {\n        const yearStartDateDaily = moment()\n          .year(year)\n          .startOf(\"year\")\n          .format(DEFAULT_DATE_FROMAT);\n        currentItemDate = moment(yearStartDateDaily, DEFAULT_DATE_FROMAT)\n          .add(monthStartWeekNumber + dateRows - 1, \"week\")\n          .startOf(\"week\")\n          .add(rowItem, \"day\")\n          .format(DEFAULT_DATE_FROMAT);\n        rowItemText = moment(currentItemDate, DEFAULT_DATE_FROMAT).format(\"D\");\n      }\n    } else if (type === \"weekly\") {\n      if (!_.isNil(yearStartDate) && !_.isNil(itemCount)) {\n        currentItemDate = moment(yearStartDate, DEFAULT_DATE_FROMAT)\n          .add(itemCount, \"week\")\n          .endOf(\"week\")\n          .format(DEFAULT_DATE_FROMAT);\n        const weekNumber: any = itemCount + 1;\n        rowItemText = `W${weekNumber}`;\n      }\n    } else if (type === \"monthly\") {\n      if (!_.isNil(itemCount) && !_.isNil(year)) {\n        currentItemDate = moment()\n          .year(year)\n          .month(itemCount)\n          .endOf(\"month\")\n          .format(DEFAULT_DATE_FROMAT);\n        rowItemText = moment(currentItemDate, DEFAULT_DATE_FROMAT).format(\"MMM\");\n      }\n    } else if (type === \"quarterly\") {\n      if (!_.isNil(itemCount) && !_.isNil(year)) {\n        currentItemDate = moment()\n          .year(year)\n          .quarter(itemCount + 1)\n          .endOf(\"quarter\")\n          .format(DEFAULT_DATE_FROMAT);\n        rowItemText = `Quarter ${itemCount + 1}`;\n      }\n    }\n\n    firstLastDayObject = this.getFirstLastDay(currentItemDate, type);\n\n    variables.itemCount = itemCount;\n    variables.currentItemDate = currentItemDate;\n    variables.rowItemText = rowItemText;\n    variables.firstDay = firstLastDayObject.firstDay;\n    variables.lastDay = firstLastDayObject.lastDay;\n    return variables;\n  }\n\n  isRowIemValid(options): boolean {\n    let valid = false;\n    const type = options.type;\n    const year = options.year;\n    const itemCount = options.itemCount;\n    const retailCalendar = options.retailCalendar;\n    const validWeekCount = this.getYearlyWeekCount(year, retailCalendar);\n\n    if (type === \"daily\") {\n      valid = true;\n    } else if (type === \"weekly\") {\n      if (itemCount < validWeekCount) {\n        valid = true;\n      }\n    } else if (type === \"monthly\") {\n      return true;\n    } else if (type === \"quarterly\") {\n      return true;\n    }\n\n    return valid;\n  }\n\n  formatStartDate(config, returnFormat) {\n    const startDate = config ? config.startDate : null;\n    const type = config ? config.type : \"\";\n    let formattedStartDate = null;\n\n    if (startDate) {\n      formattedStartDate = moment(startDate, DEFAULT_DATE_FROMAT).format(returnFormat);\n      if (type === \"weekly\") {\n        formattedStartDate = moment(startDate, DEFAULT_DATE_FROMAT)\n          .startOf(\"week\")\n          .format(returnFormat);\n      } else if (type === \"monthly\") {\n        formattedStartDate = moment(startDate, DEFAULT_DATE_FROMAT)\n          .startOf(\"month\")\n          .format(returnFormat);\n      } else if (type === \"quarterly\") {\n        formattedStartDate = moment(startDate, DEFAULT_DATE_FROMAT)\n          .startOf(\"quarter\")\n          .format(returnFormat);\n      } else if (type === \"yearly\") {\n        formattedStartDate = moment(startDate, DEFAULT_DATE_FROMAT)\n          .startOf(\"year\")\n          .format(returnFormat);\n      }\n    }\n\n    return formattedStartDate;\n  }\n\n  getSelectedYear(config, date, side): string {\n    return moment(date, DEFAULT_DATE_FROMAT).format(\"YYYY\");\n  }\n\n  getFirstLastDay(date, type) {\n    let firstDay = \"\";\n    let lastDay = \"\";\n\n    if (type === \"daily\") {\n      firstDay = lastDay = date;\n    } else if (type === \"weekly\") {\n      firstDay = moment(date, DEFAULT_DATE_FROMAT)\n        .startOf(\"week\")\n        .format(DEFAULT_DATE_FROMAT);\n      lastDay = moment(date, DEFAULT_DATE_FROMAT)\n        .endOf(\"week\")\n        .format(DEFAULT_DATE_FROMAT);\n    } else if (type === \"monthly\") {\n      firstDay = moment(date, DEFAULT_DATE_FROMAT)\n        .startOf(\"month\")\n        .format(DEFAULT_DATE_FROMAT);\n      lastDay = moment(date, DEFAULT_DATE_FROMAT)\n        .endOf(\"month\")\n        .format(DEFAULT_DATE_FROMAT);\n    } else if (type === \"quarterly\") {\n      firstDay = moment(date, DEFAULT_DATE_FROMAT)\n        .startOf(\"quarter\")\n        .format(DEFAULT_DATE_FROMAT);\n      lastDay = moment(date, DEFAULT_DATE_FROMAT)\n        .endOf(\"quarter\")\n        .format(DEFAULT_DATE_FROMAT);\n    } else if (type === \"yearly\") {\n      firstDay = moment(date, DEFAULT_DATE_FROMAT)\n        .startOf(\"year\")\n        .format(DEFAULT_DATE_FROMAT);\n      lastDay = moment(date, DEFAULT_DATE_FROMAT)\n        .endOf(\"year\")\n        .format(DEFAULT_DATE_FROMAT);\n    }\n\n    return {\n      firstDay,\n      lastDay\n    };\n  }\n\n  getLocalTimezone() {\n    let tz = /\\((.*)\\)/.exec(new Date().toString())[1];\n\n    if (tz === \"Central Europe Standard Time\") {\n      tz = EU_TZ_CODE;\n    } else {\n      tz = DEFAULT_TIMEZONE_CODE;\n    }\n\n    return tz;\n  }\n\n  getZoneDate(tz, format, date?) {\n    if (date) {\n      date = moment(date, format)\n        .startOf(\"day\")\n        .valueOf();\n    } else {\n      date = moment().valueOf();\n    }\n\n    let today = new Date(date).toLocaleString(\"en-US\", {\n      timeZone: TZ_NAMES[tz]\n    });\n    today = moment(today, \"MM/DD/YYYY, hh:mm:ss A\");\n    return today;\n  }\n\n  getZoneToday(tz, viewDateFormat) {\n    const today = this.getZoneDate(tz, viewDateFormat);\n    return moment(today).format(`${viewDateFormat}  hh:mm A`);\n  }\n\n  formatToZoneDate(tz, format, date) {\n    const formattedDate = this.getZoneDate(tz, format, date);\n    return moment(formattedDate).format(`${format}`);\n  }\n\n  convertToViewTimeItem(item) {\n    let stringified_item = item + \"\";\n    if (stringified_item.length === 1) {\n      stringified_item = `0${stringified_item}`;\n    }\n    return stringified_item;\n  }\n\n  getWeekNumber(date): any {\n    if (date) {\n      const year = moment(date, \"YYYY-MM-DD\").year();\n      const month = moment(date, \"YYYY-MM-DD\").month();\n      const day = Number(moment(date, \"YYYY-MM-DD\").format(\"D\"));\n\n      const yearStartms = new Date(year, 0, 1);\n      const datems = new Date(year, month, day);\n      return Math.ceil(((datems.getTime() - yearStartms.getTime()) / 86400000 + yearStartms.getDay() + 1) / 7);\n    } else {\n      console.warn(\"getWeekNumber: Invalid date\");\n      return this.getNotAvailableText();\n    }\n  }\n}\n","import { NgModule } from \"@angular/core\";\nimport { MatButtonModule, MatFormFieldModule, MatIconModule, MatInputModule, MatSelectModule } from \"@angular/material\";\n\nconst modules = [MatFormFieldModule, MatButtonModule, MatInputModule, MatIconModule, MatSelectModule];\n@NgModule({\n  imports: modules,\n  exports: modules\n})\nexport class MaterialModule {}\n","import { Pipe, PipeTransform } from \"@angular/core\";\n\n/**\n * Iterate over {key: value}\n * Returns the keys of the object\n * Usage:\n *    let objKey of obj | ObjNgFor\n * Example:\n *    let obj = {a: 1, b: 2};\n *    *ngFor=\"let key of obj | ObjNgFor\"\n *    {{keys}}: {{obj[key]}}\n */\n\n@Pipe({ name: \"ObjNgFor\", pure: false })\nexport class ObjNgFor implements PipeTransform {\n  public transform(value: any, args: any[] = null): any {\n    return Object.keys(value); // .map(key => value[key]);\n  }\n}\n","import { NgModule, ModuleWithProviders, Optional, SkipSelf } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { FormsModule } from \"@angular/forms\";\nimport { NoopAnimationsModule } from \"@angular/platform-browser/animations\";\nimport { MaterialModule } from \"./material/material.module\";\nimport { NgxDatetimeRangePickerComponent } from \"./ngx-datetime-range-picker.component\";\nimport { ObjNgFor } from \"./pipes/objNgFor.pipe\";\nimport { NgxDatetimeRangePickerService } from \"./ngx-datetime-range-picker.service\";\n\n@NgModule({\n  declarations: [ObjNgFor, NgxDatetimeRangePickerComponent],\n  imports: [CommonModule, NoopAnimationsModule, FormsModule, MaterialModule],\n  exports: [NgxDatetimeRangePickerComponent, MaterialModule]\n})\nexport class NgxDatetimeRangePickerModule {\n  constructor(@Optional() @SkipSelf() parentModule: NgxDatetimeRangePickerModule) {\n    if (parentModule) {\n      throw new Error(\"NgxDatetimeRangePickerModule is already loaded. Import it in the AppModule only\");\n    }\n  }\n\n  public static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: NgxDatetimeRangePickerModule,\n      providers: [NgxDatetimeRangePickerService]\n    };\n  }\n}\n"]}