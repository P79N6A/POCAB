import * as tslib_1 from "tslib";
var NgxDatetimeRangePickerModule_1;
import { NgModule, Optional, SkipSelf } from "@angular/core";
import { CommonModule } from "@angular/common";
import { FormsModule } from "@angular/forms";
import { NoopAnimationsModule } from "@angular/platform-browser/animations";
import { MaterialModule } from "./material/material.module";
import { NgxDatetimeRangePickerComponent } from "./ngx-datetime-range-picker.component";
import { ObjNgFor } from "./pipes/objNgFor.pipe";
import { NgxDatetimeRangePickerService } from "./ngx-datetime-range-picker.service";
let NgxDatetimeRangePickerModule = NgxDatetimeRangePickerModule_1 = class NgxDatetimeRangePickerModule {
    constructor(parentModule) {
        if (parentModule) {
            throw new Error("NgxDatetimeRangePickerModule is already loaded. Import it in the AppModule only");
        }
    }
    static forRoot() {
        return {
            ngModule: NgxDatetimeRangePickerModule_1,
            providers: [NgxDatetimeRangePickerService]
        };
    }
};
NgxDatetimeRangePickerModule = NgxDatetimeRangePickerModule_1 = tslib_1.__decorate([
    NgModule({
        declarations: [ObjNgFor, NgxDatetimeRangePickerComponent],
        imports: [CommonModule, NoopAnimationsModule, FormsModule, MaterialModule],
        exports: [NgxDatetimeRangePickerComponent, MaterialModule]
    }),
    tslib_1.__param(0, Optional()), tslib_1.__param(0, SkipSelf()),
    tslib_1.__metadata("design:paramtypes", [NgxDatetimeRangePickerModule])
], NgxDatetimeRangePickerModule);
export { NgxDatetimeRangePickerModule };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LWRhdGV0aW1lLXJhbmdlLXBpY2tlci5tb2R1bGUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtZGF0ZXRpbWUtcmFuZ2UtcGlja2VyLyIsInNvdXJjZXMiOlsibGliL25neC1kYXRldGltZS1yYW5nZS1waWNrZXIubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsT0FBTyxFQUFFLFFBQVEsRUFBdUIsUUFBUSxFQUFFLFFBQVEsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUNsRixPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDL0MsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBQzdDLE9BQU8sRUFBRSxvQkFBb0IsRUFBRSxNQUFNLHNDQUFzQyxDQUFDO0FBQzVFLE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSw0QkFBNEIsQ0FBQztBQUM1RCxPQUFPLEVBQUUsK0JBQStCLEVBQUUsTUFBTSx1Q0FBdUMsQ0FBQztBQUN4RixPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sdUJBQXVCLENBQUM7QUFDakQsT0FBTyxFQUFFLDZCQUE2QixFQUFFLE1BQU0scUNBQXFDLENBQUM7QUFPcEYsSUFBYSw0QkFBNEIsb0NBQXpDLE1BQWEsNEJBQTRCO0lBQ3ZDLFlBQW9DLFlBQTBDO1FBQzVFLElBQUksWUFBWSxFQUFFO1lBQ2hCLE1BQU0sSUFBSSxLQUFLLENBQUMsaUZBQWlGLENBQUMsQ0FBQztTQUNwRztJQUNILENBQUM7SUFFTSxNQUFNLENBQUMsT0FBTztRQUNuQixPQUFPO1lBQ0wsUUFBUSxFQUFFLDhCQUE0QjtZQUN0QyxTQUFTLEVBQUUsQ0FBQyw2QkFBNkIsQ0FBQztTQUMzQyxDQUFDO0lBQ0osQ0FBQztDQUNGLENBQUE7QUFiWSw0QkFBNEI7SUFMeEMsUUFBUSxDQUFDO1FBQ1IsWUFBWSxFQUFFLENBQUMsUUFBUSxFQUFFLCtCQUErQixDQUFDO1FBQ3pELE9BQU8sRUFBRSxDQUFDLFlBQVksRUFBRSxvQkFBb0IsRUFBRSxXQUFXLEVBQUUsY0FBYyxDQUFDO1FBQzFFLE9BQU8sRUFBRSxDQUFDLCtCQUErQixFQUFFLGNBQWMsQ0FBQztLQUMzRCxDQUFDO0lBRWEsbUJBQUEsUUFBUSxFQUFFLENBQUEsRUFBRSxtQkFBQSxRQUFRLEVBQUUsQ0FBQTs2Q0FBZSw0QkFBNEI7R0FEbkUsNEJBQTRCLENBYXhDO1NBYlksNEJBQTRCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmdNb2R1bGUsIE1vZHVsZVdpdGhQcm92aWRlcnMsIE9wdGlvbmFsLCBTa2lwU2VsZiB9IGZyb20gXCJAYW5ndWxhci9jb3JlXCI7XG5pbXBvcnQgeyBDb21tb25Nb2R1bGUgfSBmcm9tIFwiQGFuZ3VsYXIvY29tbW9uXCI7XG5pbXBvcnQgeyBGb3Jtc01vZHVsZSB9IGZyb20gXCJAYW5ndWxhci9mb3Jtc1wiO1xuaW1wb3J0IHsgTm9vcEFuaW1hdGlvbnNNb2R1bGUgfSBmcm9tIFwiQGFuZ3VsYXIvcGxhdGZvcm0tYnJvd3Nlci9hbmltYXRpb25zXCI7XG5pbXBvcnQgeyBNYXRlcmlhbE1vZHVsZSB9IGZyb20gXCIuL21hdGVyaWFsL21hdGVyaWFsLm1vZHVsZVwiO1xuaW1wb3J0IHsgTmd4RGF0ZXRpbWVSYW5nZVBpY2tlckNvbXBvbmVudCB9IGZyb20gXCIuL25neC1kYXRldGltZS1yYW5nZS1waWNrZXIuY29tcG9uZW50XCI7XG5pbXBvcnQgeyBPYmpOZ0ZvciB9IGZyb20gXCIuL3BpcGVzL29iak5nRm9yLnBpcGVcIjtcbmltcG9ydCB7IE5neERhdGV0aW1lUmFuZ2VQaWNrZXJTZXJ2aWNlIH0gZnJvbSBcIi4vbmd4LWRhdGV0aW1lLXJhbmdlLXBpY2tlci5zZXJ2aWNlXCI7XG5cbkBOZ01vZHVsZSh7XG4gIGRlY2xhcmF0aW9uczogW09iak5nRm9yLCBOZ3hEYXRldGltZVJhbmdlUGlja2VyQ29tcG9uZW50XSxcbiAgaW1wb3J0czogW0NvbW1vbk1vZHVsZSwgTm9vcEFuaW1hdGlvbnNNb2R1bGUsIEZvcm1zTW9kdWxlLCBNYXRlcmlhbE1vZHVsZV0sXG4gIGV4cG9ydHM6IFtOZ3hEYXRldGltZVJhbmdlUGlja2VyQ29tcG9uZW50LCBNYXRlcmlhbE1vZHVsZV1cbn0pXG5leHBvcnQgY2xhc3MgTmd4RGF0ZXRpbWVSYW5nZVBpY2tlck1vZHVsZSB7XG4gIGNvbnN0cnVjdG9yKEBPcHRpb25hbCgpIEBTa2lwU2VsZigpIHBhcmVudE1vZHVsZTogTmd4RGF0ZXRpbWVSYW5nZVBpY2tlck1vZHVsZSkge1xuICAgIGlmIChwYXJlbnRNb2R1bGUpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihcIk5neERhdGV0aW1lUmFuZ2VQaWNrZXJNb2R1bGUgaXMgYWxyZWFkeSBsb2FkZWQuIEltcG9ydCBpdCBpbiB0aGUgQXBwTW9kdWxlIG9ubHlcIik7XG4gICAgfVxuICB9XG5cbiAgcHVibGljIHN0YXRpYyBmb3JSb290KCk6IE1vZHVsZVdpdGhQcm92aWRlcnMge1xuICAgIHJldHVybiB7XG4gICAgICBuZ01vZHVsZTogTmd4RGF0ZXRpbWVSYW5nZVBpY2tlck1vZHVsZSxcbiAgICAgIHByb3ZpZGVyczogW05neERhdGV0aW1lUmFuZ2VQaWNrZXJTZXJ2aWNlXVxuICAgIH07XG4gIH1cbn1cbiJdfQ==