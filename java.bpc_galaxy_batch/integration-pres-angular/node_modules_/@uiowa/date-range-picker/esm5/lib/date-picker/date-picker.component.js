/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input, Output, EventEmitter } from '@angular/core';
import { NgbDateNativeAdapter } from '../services/NgbDateNativeAdapter';
var DatePickerComponent = /** @class */ (function () {
    function DatePickerComponent(dateAdapter) {
        this.dateAdapter = dateAdapter;
        this.disabled = false;
        this.dateChange = new EventEmitter();
    }
    /**
     * @return {?}
     */
    DatePickerComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        this.ngbDate = this.dateAdapter.fromModel(this.date);
    };
    /**
     * @param {?} changes
     * @return {?}
     */
    DatePickerComponent.prototype.ngOnChanges = /**
     * @param {?} changes
     * @return {?}
     */
    function (changes) {
        if (changes.date || changes.disabled) {
            this.ngOnInit();
        }
    };
    /**
     * @param {?} date
     * @return {?}
     */
    DatePickerComponent.prototype.onDateChange = /**
     * @param {?} date
     * @return {?}
     */
    function (date) {
        this.dateChange.emit(this.dateAdapter.toModel(date));
    };
    DatePickerComponent.decorators = [
        { type: Component, args: [{
                    selector: 'date-picker',
                    template: "<div class=\"input-group\">\r\n  <input ngbDatepicker #d=\"ngbDatepicker\" class=\"form-control\" name=\"dp\" [(ngModel)]=\"ngbDate\" (click)=\"d.toggle()\"\r\n    [disabled]=\"disabled\" readonly (dateSelect)=\"onDateChange($event)\" style=\"max-width:200px;\">\r\n  <div class=\"input-group-append\">\r\n    <button class=\"btn btn-outline-secondary d-flex align-items-center\" (click)=\"d.toggle()\" type=\"button\">\r\n      <svg aria-hidden=\"true\" role=\"icon\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 448 512\">\r\n        <path fill=\"currentColor\" d=\"M148 288h-40c-6.6 0-12-5.4-12-12v-40c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12zm108-12v-40c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12zm96 0v-40c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12zm-96 96v-40c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12zm-96 0v-40c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12zm192 0v-40c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12zm96-260v352c0 26.5-21.5 48-48 48H48c-26.5 0-48-21.5-48-48V112c0-26.5 21.5-48 48-48h48V12c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v52h128V12c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v52h48c26.5 0 48 21.5 48 48zm-48 346V160H48v298c0 3.3 2.7 6 6 6h340c3.3 0 6-2.7 6-6z\"></path>\r\n      </svg>\r\n    </button>\r\n  </div>\r\n</div>\r\n",
                    styles: ["svg{width:1rem;height:1rem}"]
                }] }
    ];
    /** @nocollapse */
    DatePickerComponent.ctorParameters = function () { return [
        { type: NgbDateNativeAdapter }
    ]; };
    DatePickerComponent.propDecorators = {
        date: [{ type: Input }],
        disabled: [{ type: Input }],
        dateChange: [{ type: Output }]
    };
    return DatePickerComponent;
}());
export { DatePickerComponent };
if (false) {
    /** @type {?} */
    DatePickerComponent.prototype.date;
    /** @type {?} */
    DatePickerComponent.prototype.disabled;
    /** @type {?} */
    DatePickerComponent.prototype.dateChange;
    /** @type {?} */
    DatePickerComponent.prototype.ngbDate;
    /**
     * @type {?}
     * @private
     */
    DatePickerComponent.prototype.dateAdapter;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGF0ZS1waWNrZXIuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHVpb3dhL2RhdGUtcmFuZ2UtcGlja2VyLyIsInNvdXJjZXMiOlsibGliL2RhdGUtcGlja2VyL2RhdGUtcGlja2VyLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUNMLFNBQVMsRUFFVCxLQUFLLEVBQ0wsTUFBTSxFQUNOLFlBQVksRUFHYixNQUFNLGVBQWUsQ0FBQztBQUN2QixPQUFPLEVBQUUsb0JBQW9CLEVBQUUsTUFBTSxrQ0FBa0MsQ0FBQztBQUd4RTtJQWdCRSw2QkFBNkIsV0FBaUM7UUFBakMsZ0JBQVcsR0FBWCxXQUFXLENBQXNCO1FBUDlELGFBQVEsR0FBSyxLQUFLLENBQUM7UUFHbkIsZUFBVSxHQUFHLElBQUksWUFBWSxFQUFRLENBQUM7SUFJMkIsQ0FBQzs7OztJQUVsRSxzQ0FBUTs7O0lBQVI7UUFDRSxJQUFJLENBQUMsT0FBTyxHQUFHLElBQUksQ0FBQyxXQUFXLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUN2RCxDQUFDOzs7OztJQUVELHlDQUFXOzs7O0lBQVgsVUFBWSxPQUFzQjtRQUNoQyxJQUFJLE9BQU8sQ0FBQyxJQUFJLElBQUksT0FBTyxDQUFDLFFBQVEsRUFBRTtZQUNwQyxJQUFJLENBQUMsUUFBUSxFQUFFLENBQUM7U0FDakI7SUFDSCxDQUFDOzs7OztJQUVELDBDQUFZOzs7O0lBQVosVUFBYSxJQUFhO1FBQ3hCLElBQUksQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUM7SUFDdkQsQ0FBQzs7Z0JBOUJGLFNBQVMsU0FBQztvQkFDVCxRQUFRLEVBQUUsYUFBYTtvQkFDdkIscytDQUEyQzs7aUJBRTVDOzs7O2dCQVBRLG9CQUFvQjs7O3VCQVMxQixLQUFLOzJCQUVMLEtBQUs7NkJBR0wsTUFBTTs7SUFvQlQsMEJBQUM7Q0FBQSxBQS9CRCxJQStCQztTQTFCWSxtQkFBbUI7OztJQUM5QixtQ0FDVzs7SUFDWCx1Q0FDbUI7O0lBRW5CLHlDQUNzQzs7SUFFdEMsc0NBQWlCOzs7OztJQUVMLDBDQUFrRCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XHJcbiAgQ29tcG9uZW50LFxyXG4gIE9uSW5pdCxcclxuICBJbnB1dCxcclxuICBPdXRwdXQsXHJcbiAgRXZlbnRFbWl0dGVyLFxyXG4gIE9uQ2hhbmdlcyxcclxuICBTaW1wbGVDaGFuZ2VzXHJcbn0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IE5nYkRhdGVOYXRpdmVBZGFwdGVyIH0gZnJvbSAnLi4vc2VydmljZXMvTmdiRGF0ZU5hdGl2ZUFkYXB0ZXInO1xyXG5pbXBvcnQgeyBOZ2JEYXRlIH0gZnJvbSAnQG5nLWJvb3RzdHJhcC9uZy1ib290c3RyYXAnO1xyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgc2VsZWN0b3I6ICdkYXRlLXBpY2tlcicsXHJcbiAgdGVtcGxhdGVVcmw6ICcuL2RhdGUtcGlja2VyLmNvbXBvbmVudC5odG1sJyxcclxuICBzdHlsZVVybHM6IFsnLi9kYXRlLXBpY2tlci5jb21wb25lbnQuY3NzJ11cclxufSlcclxuZXhwb3J0IGNsYXNzIERhdGVQaWNrZXJDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQsIE9uQ2hhbmdlcyB7XHJcbiAgQElucHV0KClcclxuICBkYXRlOiBEYXRlO1xyXG4gIEBJbnB1dCgpXHJcbiAgZGlzYWJsZWQgPyA9IGZhbHNlO1xyXG5cclxuICBAT3V0cHV0KClcclxuICBkYXRlQ2hhbmdlID0gbmV3IEV2ZW50RW1pdHRlcjxEYXRlPigpO1xyXG5cclxuICBuZ2JEYXRlOiBOZ2JEYXRlO1xyXG5cclxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIHJlYWRvbmx5IGRhdGVBZGFwdGVyOiBOZ2JEYXRlTmF0aXZlQWRhcHRlcikge31cclxuXHJcbiAgbmdPbkluaXQoKSB7XHJcbiAgICB0aGlzLm5nYkRhdGUgPSB0aGlzLmRhdGVBZGFwdGVyLmZyb21Nb2RlbCh0aGlzLmRhdGUpO1xyXG4gIH1cclxuXHJcbiAgbmdPbkNoYW5nZXMoY2hhbmdlczogU2ltcGxlQ2hhbmdlcyk6IHZvaWQge1xyXG4gICAgaWYgKGNoYW5nZXMuZGF0ZSB8fCBjaGFuZ2VzLmRpc2FibGVkKSB7XHJcbiAgICAgIHRoaXMubmdPbkluaXQoKTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIG9uRGF0ZUNoYW5nZShkYXRlOiBOZ2JEYXRlKSB7XHJcbiAgICB0aGlzLmRhdGVDaGFuZ2UuZW1pdCh0aGlzLmRhdGVBZGFwdGVyLnRvTW9kZWwoZGF0ZSkpO1xyXG4gIH1cclxufVxyXG4iXX0=