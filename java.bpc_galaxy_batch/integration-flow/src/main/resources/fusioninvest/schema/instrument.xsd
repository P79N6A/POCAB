<?xml version="1.0" encoding="us-ascii" standalone="no"?>
<xsd:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://www.sophis.net/Instrument" xmlns:common="http://sophis.net/sophis/common" xmlns:tag="http://www.sophis.net/Tag" xmlns:tns="http://www.sophis.net/Instrument"
            xmlns="http://www.sophis.net/Instrument" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	<xsd:import namespace="http://sophis.net/sophis/common" schemaLocation="common.xsd"/>
	<xsd:import namespace="http://www.sophis.net/Tag" schemaLocation="Tag.xsd"/>
	<xsd:element name="index" substitutionGroup="tns:instrument" type="tns:Index"></xsd:element>
	<xsd:element name="indexWithModel" substitutionGroup="tns:instrument" type="tns:IndexWithModel"></xsd:element>
	<xsd:element name="markets" type="tns:MarketsType"></xsd:element>
	<xsd:element name="share" substitutionGroup="tns:instrument" type="tns:Share"></xsd:element>
	<xsd:element name="issuer" substitutionGroup="tns:instrument" type="tns:Issuer"></xsd:element>
	<xsd:element name="realInstrument" type="tns:RealInstrument"></xsd:element>
	<xsd:element name="instrumentList" type="tns:InstrumentList"></xsd:element>
	<xsd:element name="pointedInstrumentList" type="tns:PointedInstrumentList"></xsd:element>
	<xsd:element name="debtInstrument" substitutionGroup="tns:instrument" type="tns:DebtInstrument"></xsd:element>
	<xsd:element name="bond" substitutionGroup="tns:instrument" type="tns:Bond"></xsd:element>
	<xsd:element name="bondFuture" substitutionGroup="tns:instrument" type="tns:BondFuture"></xsd:element>
	<xsd:element name="bondForward" substitutionGroup="tns:instrument" type="tns:Forward"></xsd:element>
	<xsd:element name="equityFuture" substitutionGroup="tns:instrument" type="tns:EquityFuture"></xsd:element>
	<xsd:element name="equityForward" substitutionGroup="tns:instrument" type="tns:EquityForward"></xsd:element>
	<xsd:element name="interestRateFuture" substitutionGroup="tns:instrument" type="tns:InterestRateFuture"></xsd:element>
	<xsd:element name="notionalFuture" substitutionGroup="tns:instrument" type="tns:NotionalFuture"></xsd:element>
	<xsd:element name="equityOption" substitutionGroup="tns:instrument" type="tns:EquityOption"></xsd:element>
	<xsd:element name="package" substitutionGroup="tns:instrument" type="tns:Package"></xsd:element>
  <xsd:element name="loanFacility" substitutionGroup="tns:instrument" type="tns:LoanFacility"></xsd:element>
  <xsd:element name="forexStrategy" substitutionGroup="tns:instrument" type="tns:ForexStrategy"></xsd:element>
	<xsd:element name="rainbowOption" substitutionGroup="tns:instrument" type="tns:RainbowOption"></xsd:element>
	<xsd:element name="bondOption" substitutionGroup="tns:instrument" type="tns:BondOption"></xsd:element>
  	<xsd:element name="futureOption" substitutionGroup="tns:instrument" type="tns:FutureOption"></xsd:element>
	<xsd:element name="instrumentIdentifier" type="tns:Identifier"></xsd:element>
  <xsd:element name="ratingsIdentifier" type="tns:Identifier"></xsd:element>
  <xsd:element name="sectorsIdentifier" type="tns:Identifier"></xsd:element>
	<xsd:element name="cashFlowsIdentifier" type="tns:Identifier"></xsd:element>
	<xsd:element name="instrument" type="tns:Instrument"></xsd:element>
	<xsd:element name="instrumentBase" type="tns:InstrumentBase"></xsd:element>
  <xsd:element name="interestRateOption" substitutionGroup="tns:instrument" type="tns:InterestRateOption"></xsd:element>
  <xsd:element name="optionSwapped" substitutionGroup="tns:instrument" type="tns:OptionSwapped"></xsd:element>
  <xsd:element name="indexedOption" substitutionGroup="tns:instrument" type="tns:IndexedOption"></xsd:element>
  <xsd:element name="cppi" substitutionGroup="tns:instrument" type="tns:Cppi"></xsd:element>
  <xsd:element name="cppiOption" substitutionGroup="tns:instrument" type="tns:CppiOption"></xsd:element>
  <xsd:element name="fxOption" substitutionGroup="tns:instrument" type="tns:FxOption"></xsd:element>
  <xsd:element name="inflationIndex" type="tns:InflationIndex" substitutionGroup="tns:instrument"></xsd:element>
    <xsd:element name="generic" type="tns:InstrumentForLookup" substitutionGroup="tns:instrumentBase">

		<xsd:annotation>
			<xsd:documentation source="http://www.sophis.net" xml:lang="en">Element used to perform a lookup of instrument without definition in FpML messages.</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="derivative_message" type="tns:LegacyDerivativeMessage" substitutionGroup="tns:instrument" />
	<xsd:element name="underlyer" type="tns:Underlyer"></xsd:element>
  <xsd:element name="floatingRate" substitutionGroup="tns:instrument" type="tns:FloatingRateInstrument"></xsd:element>
	<xsd:element name="forexOption" substitutionGroup="tns:instrument" type="tns:ForexOption"></xsd:element>
	<xsd:element name="fundOption" substitutionGroup="tns:instrument" type="tns:FundOption"></xsd:element>
	<xsd:element name="convertibleBond" substitutionGroup="tns:instrument" type="tns:ConvertibleBond" />
	<xsd:element name="interestRateForward" substitutionGroup="tns:instrument" type="tns:InterestRateForward" />
	<xsd:element name="forexFuture" substitutionGroup="tns:instrument" type="tns:ForexFuture" />
	<xsd:element name="forexForward" substitutionGroup="tns:instrument" type="tns:ForexForward" />
  <xsd:element name="commodity" type="tns:Commodity" substitutionGroup="tns:instrument"/>
  <xsd:element name="ascot" substitutionGroup="tns:instrument" type="tns:Ascot"/>
  <xsd:element name="commodityFuture" substitutionGroup="tns:instrument" type="tns:CommodityFuture" />
  <xsd:element name="commodityForward" type="tns:CommodityForward" substitutionGroup="tns:instrument"/>
  <xsd:element name="commodityOption" type="tns:CommodityOption" substitutionGroup="tns:instrument"/>
  <xsd:element name="physicalCommodity" type="tns:PhysicalCommodity" substitutionGroup="tns:instrument"/>
  <xsd:element name="swaption" type="tns:Swaption" substitutionGroup="tns:instrument"/>
  <xsd:element name="swap" substitutionGroup="tns:instrument" type="tns:Swap" />
  <xsd:element name="commodityIndex" substitutionGroup="tns:instrument" type="tns:CommodityIndex"/>
	<xsd:element name="capFloor" substitutionGroup="tns:instrument" type="tns:CapFloor" />
  <xsd:element name="commission" substitutionGroup="tns:instrument" type="tns:Commission" />
	<xsd:element name="feature" type="tns:Feature" />
	<xsd:element name="genericClause" substitutionGroup="tns:feature" type="tns:GenericClause" />
	<xsd:element name="convertibleBondClause" substitutionGroup="tns:feature" type="tns:ConvertibleBondClause" />
	<xsd:element name="indicatorPrecision" substitutionGroup="tns:feature" type="tns:IndicatorPrecision" />
	<xsd:element name="issuerCall" substitutionGroup="tns:feature" type="tns:IssuerCall" />
	<xsd:element name="cliquet" substitutionGroup="tns:feature" type="tns:Cliquet" />
	<xsd:element name="bearerPut" substitutionGroup="tns:feature" type="tns:BearerPut" />
	<xsd:element name="miscellaneous" substitutionGroup="tns:feature" type="tns:Miscellaneous" />
	<xsd:element name="liquidity" substitutionGroup="tns:feature" type="tns:Liquidity" />
	<xsd:element name="globalCap" substitutionGroup="tns:feature" type="tns:GlobalCap" />
	<xsd:element name="globalFloor" substitutionGroup="tns:feature" type="tns:GlobalFloor" />
	<xsd:element name="barrier" substitutionGroup="tns:feature" type="tns:Barrier" />
	<xsd:element name="chooser" substitutionGroup="tns:feature" type="tns:Chooser" />
	<xsd:element name="digital" substitutionGroup="tns:feature" type="tns:Digital" />
	<xsd:element name="lookBack" substitutionGroup="tns:feature" type="tns:LookBack" />
	<xsd:element name="dilution" substitutionGroup="tns:feature" type="tns:Dilution" />
	<xsd:element name="resettableParity" substitutionGroup="tns:feature" type="tns:ResettableParity" />
	<xsd:element name="withoutSmile" substitutionGroup="tns:feature" type="tns:WithoutSmile" />
  <xsd:element name="conversionWithAccrued" substitutionGroup="tns:feature" type="tns:ConversionWithAccrued" />
  <xsd:element name="mandatory" substitutionGroup="tns:feature" type="tns:Mandatory" />
	<xsd:element name="accreted" substitutionGroup="tns:feature" type="tns:Accreted" />
	<xsd:element name="contingentPayment" substitutionGroup="tns:feature" type="tns:ContingentPayment" />
	<xsd:element name="contingentConversion" substitutionGroup="tns:feature" type="tns:ContingentConversion" />
	<xsd:element name="exchangeable" substitutionGroup="tns:feature" type="tns:Exchangeable" />
	<xsd:element name="perpetual" substitutionGroup="tns:feature" type="tns:Perpetual" />
	<xsd:element name="dividendProtection" substitutionGroup="tns:feature" type="tns:DividendProtection" />
	<xsd:element name="continuousDividend" substitutionGroup="tns:feature" type="tns:ContinuousDividend" />
	<xsd:element name="isf" substitutionGroup="tns:feature" type="tns:Isf" />
	<xsd:element name="pride" substitutionGroup="tns:feature" type="tns:Pride" />
	<xsd:element name="fxRate" type="tns:FxRate" />
	<xsd:element name="treasuryAccountInstrument" substitutionGroup="tns:instrument" type="tns:TreasuryAccountInstrument"/>
	<xsd:element name="ratings" type="tns:Ratings"/>
	<xsd:element name="sectors" type="tns:Sectors"/>
  <xsd:element name="absBondCashFlow" type="tns:ABSBondCashFlow"/>
	<xsd:element name="clauseBuilderOption" substitutionGroup="tns:instrument" type="tns:ClauseBuilderOption"></xsd:element>
	<xsd:element name="forexInstrument" substitutionGroup="tns:instrument" type="tns:ForexInstrument"></xsd:element>
	<xsd:element name="cfdInstrument" substitutionGroup="tns:instrument" type="tns:CfdInstrument"></xsd:element>
	<xsd:simpleType name="ReferenceUpdateType">
		<xsd:annotation>
			<xsd:documentation xml:lang="en">Specify how to update the universal reference.</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:normalizedString">
			<xsd:enumeration value="UniquePrioritary">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">Prioritary key to find an instrument.</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="UniqueNotPrioritary">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">Secondary key to find an instrument</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="OnlyForUpdate">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">Not used to find an instrument; only updated the reference.</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="TradeUpdateModeType">
		<xsd:annotation>
			<xsd:documentation xml:lang="en">Specify how to update the universal reference from a trade.</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:normalizedString">
			<xsd:enumeration value="NoUpdate">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">The reference is not updated.</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="UpdateIfNotDefined">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">The reference is updated only if it has not been defined yet for the instrument</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="Update">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">The reference is updated regardless if already defined or not.</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="Currency">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">The code representation of a currency. By default it is a valid currency code as defined by the ISO standard 4217 - Codes for representation of currencies and funds http://www.iso.org/iso/en/prods-services/popstds/currencycodeslist.html.</xsd:documentation>
    </xsd:annotation>
		<xsd:restriction base="xsd:normalizedString">
			<xsd:length value="3"></xsd:length>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="StringBounded9">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">String of characters</xsd:documentation>
    </xsd:annotation>
		<xsd:restriction base="xsd:normalizedString">
			<xsd:maxLength value="9"></xsd:maxLength>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="StringBounded127">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">String of characters</xsd:documentation>
    </xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:maxLength value="127"></xsd:maxLength>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="Mnemonic">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">Identifier of a Contract Class for Listed Markets</xsd:documentation>
    </xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:maxLength value="4"></xsd:maxLength>
			<xsd:minLength value="2"></xsd:minLength>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="QuotationType">
		<xsd:annotation>
			<xsd:documentation xml:lang="en">List of quotation types available. The availability of quotation types depends on the type of instrument specified.</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:normalizedString">
			<xsd:enumeration value="NotDefined"></xsd:enumeration>
			<xsd:enumeration value="InPrice"></xsd:enumeration>
			<xsd:enumeration value="InYield"></xsd:enumeration>
			<xsd:enumeration value="InPercentage"></xsd:enumeration>
			<xsd:enumeration value="InPriceWithoutAccrued"></xsd:enumeration>
			<xsd:enumeration value="InPercentWithAccrued"></xsd:enumeration>
			<xsd:enumeration value="InAnotherCurrency"></xsd:enumeration>
			<xsd:enumeration value="Uncertain"></xsd:enumeration>
			<xsd:enumeration value="InDiscountMargin"></xsd:enumeration>
      <xsd:enumeration value="InPricePercentNominalClean"></xsd:enumeration>
      <xsd:enumeration value="InPricePercentNominalDirty"></xsd:enumeration>
      <xsd:enumeration value="InPricePercentRealClean"></xsd:enumeration>
      <xsd:enumeration value="InPricePercentRealDirty"></xsd:enumeration>
      <xsd:enumeration value="InPricePercentInitialClean"></xsd:enumeration>
      <xsd:enumeration value="InPricePercentInitialDirty"></xsd:enumeration>
      <xsd:enumeration value="InYieldNominal"></xsd:enumeration>
      <xsd:enumeration value="InYieldReal"></xsd:enumeration>
      <xsd:enumeration value="InPriceAmountNominalClean"></xsd:enumeration>
      <xsd:enumeration value="InPriceAmountNominalDirty"></xsd:enumeration>
    </xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="DayCountBasisValues">
		<xsd:annotation>
			<xsd:documentation xml:lang="en">List of possible values for basis using Sophis + ISDA06 names</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:normalizedString">
			<xsd:enumeration value="Undefined"></xsd:enumeration>
	        <!--Sophis values-->
			<xsd:enumeration value="Actual/360"></xsd:enumeration>
			<xsd:enumeration value="Actual/365F"></xsd:enumeration>
			<xsd:enumeration value="Actual/Actual"></xsd:enumeration>
			<xsd:enumeration value="30/360"></xsd:enumeration>
			<xsd:enumeration value="30E/360"></xsd:enumeration>
			<xsd:enumeration value="Actual/365.25"></xsd:enumeration>
			<xsd:enumeration value="Actual/365"></xsd:enumeration>
			<xsd:enumeration value="Nl/365"></xsd:enumeration>
			<xsd:enumeration value="Act/ACTAfb" />
			<xsd:enumeration value="30/360Isda06" />
			<xsd:enumeration value="30E/360Isda06" />
			<xsd:enumeration value="Act/ACT(ISMA)Isda06" />
			<xsd:enumeration value="Open/252" />
			<xsd:enumeration value="Open/Open" />
			<xsd:enumeration value="Act/365(JGB)" />
      			<xsd:enumeration value="Eurobond" />
	        <!--ISDA06 values-->
      <xsd:enumeration value="ACT/360"/>
      <xsd:enumeration value="ACT/365 FIXED"/>
      <xsd:enumeration value="ACT/ACT (ISDA)"/>
      <xsd:enumeration value="30U/360"/>
      <xsd:enumeration value="30E/360 ISDA00"/>
      <xsd:enumeration value="ACT/ACT (ISMA) ISDA00"/>
      <xsd:enumeration value="ACT/ACT (AFB)" />
      <xsd:enumeration value="30/360 ISDA06" />
      <xsd:enumeration value="30E/360 ISDA06" />
      <xsd:enumeration value="ACT/ACT (ISMA) ISDA06" />
      <xsd:enumeration value="NL/365" />
      <xsd:enumeration value="ACT/365(JGB)" />
	  <xsd:enumeration value="SIA 30/360" />
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:complexType name="DayCountBasis">
		<xsd:annotation>
      <xsd:documentation xml:lang="en">The specification for how the number of days between two dates is calculated for purposes of calculation of a fixed or floating payment amount and the basis for how many days are assumed to be in a year. Day Count Fraction is an ISDA term. The equivalent AFB (Association Francaise de Banques) term is Calculation Basis.</xsd:documentation>
		</xsd:annotation>
		<xsd:simpleContent>
			<xsd:extension base="tns:DayCountBasisValues">
          <xsd:attribute name="version" type="xsd:normalizedString" use="optional"/>
			</xsd:extension>
		</xsd:simpleContent>
	</xsd:complexType>
	<xsd:simpleType name="YieldCalculation">
		<xsd:annotation>
      <xsd:documentation xml:lang="en">The compounding calculation method</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:normalizedString">
			<xsd:enumeration value="Undefined"></xsd:enumeration>
			<xsd:enumeration value="Linear"></xsd:enumeration>
			<xsd:enumeration value="Actuarial"></xsd:enumeration>
			<xsd:enumeration value="Continuous"></xsd:enumeration>
			<xsd:enumeration value="Absolute"></xsd:enumeration>
			<xsd:enumeration value="Absolute/12"></xsd:enumeration>
			<xsd:enumeration value="YtmSemiAnnually"></xsd:enumeration>
			<xsd:enumeration value="YtmQuarterly"></xsd:enumeration>
			<xsd:enumeration value="HabitualYield"></xsd:enumeration>
			<xsd:enumeration value="YtmDaily(252)"></xsd:enumeration>
			<xsd:enumeration value="YtmDaily(365)"></xsd:enumeration>
			<xsd:enumeration value="YtmAnnually"></xsd:enumeration>
			<xsd:enumeration value="Ytm4Weeks(360)"></xsd:enumeration>
			<xsd:enumeration value="Ytm13Weeks(360)"></xsd:enumeration>
			<xsd:enumeration value="Ytm26Weeks(360)"></xsd:enumeration>
			<xsd:enumeration value="LinearDiscount"></xsd:enumeration>
		</xsd:restriction>
	</xsd:simpleType>

  <xsd:simpleType name="FeesRateType">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">List of periodicity types used in the rate type of Physical Commodities.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="tns:PeriodicityType">
      <xsd:enumeration value="Daily"></xsd:enumeration>
      <xsd:enumeration value="Annual"></xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="CommodityUnderlyingType">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">List of underlying commodity types used in Physical Commodities.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:normalizedString">
      <xsd:enumeration value="Commodity"></xsd:enumeration>
      <xsd:enumeration value="Precious Metal"></xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
	<xsd:simpleType name="BondRoundingRule">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">Specifies whether Coupon Amounts are rounded None/Up/Down/Nearest</xsd:documentation>
    </xsd:annotation>
		<xsd:restriction base="xsd:normalizedString">
			<xsd:enumeration value="None"></xsd:enumeration>
			<xsd:enumeration value="Up"></xsd:enumeration>
			<xsd:enumeration value="Down"></xsd:enumeration>
			<xsd:enumeration value="Nearest"></xsd:enumeration>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="BondRoundingType">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">Specifies whether Rounding Digits for Coupon Amounts apply to Fixed Amounts, to Percentage of Initial Notional or to Percentage of Current Notional</xsd:documentation>
    </xsd:annotation>
		<xsd:restriction base="xsd:normalizedString">
			<xsd:enumeration value="Fixed"></xsd:enumeration>
			<xsd:enumeration value="InitialNotional"></xsd:enumeration>
			<xsd:enumeration value="CurrentNotional"></xsd:enumeration>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="StringBounded199">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">String of characters</xsd:documentation>
    </xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:maxLength value="199"></xsd:maxLength>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="SpotPricing">
		<xsd:annotation>
			<xsd:documentation xml:lang="en">Specify the way to calculate the spot for options defined on that basket/index.</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:normalizedString">
			<xsd:enumeration value="UsingLast"></xsd:enumeration>
			<xsd:enumeration value="UsingBasketComposition"></xsd:enumeration>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="BasketType">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">Used for multi-currencies baskets for the settings of fixings.</xsd:documentation>
    </xsd:annotation>
		<xsd:restriction base="xsd:normalizedString">
			<xsd:enumeration value="NotDefined"></xsd:enumeration>
			<xsd:enumeration value="Composed"></xsd:enumeration>
			<xsd:enumeration value="Basket"></xsd:enumeration>
			<xsd:enumeration value="Capitalised"></xsd:enumeration>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="DateIncludedExcluded">
		<xsd:annotation>
			<xsd:documentation xml:lang="en">Specify if the date is ex or cum.</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:normalizedString">
			<xsd:enumeration value="Excluded">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">Means that the date is ex.</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="Included">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">Means that the date is cum.</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="SpreadType">
		<xsd:annotation>
			<xsd:documentation xml:lang="en">Specify the way the spread has to be understood : for exact definition and calculation implication, see financial documentation.</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:normalizedString">
			<xsd:enumeration value="Undefined"></xsd:enumeration>
			<xsd:enumeration value="CdsFixed"></xsd:enumeration>
			<xsd:enumeration value="CdsSpread"></xsd:enumeration>
			<xsd:enumeration value="YtmFixed"></xsd:enumeration>
			<xsd:enumeration value="YtmSpread"></xsd:enumeration>
			<xsd:enumeration value="ZeroCouponSpread"></xsd:enumeration>
			<xsd:enumeration value="ForwardSpread"></xsd:enumeration>
			<xsd:enumeration value="StaticSpread"></xsd:enumeration>
			<xsd:enumeration value="AswSpread"></xsd:enumeration>
      <xsd:enumeration value="Cdi+Spread"></xsd:enumeration>
      <xsd:enumeration value="Cdi%Spread"></xsd:enumeration>
		<xsd:enumeration value="OnTheRunSpread"></xsd:enumeration>
      <xsd:enumeration value="BasisSpread"></xsd:enumeration>
    </xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="CapitalizationMethod">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">Specifies the formula to compute an Average or Capitalized Floating Interest Rate. This property is linked to the Interest Rate, not to the Asset</xsd:documentation>
    </xsd:annotation>
		<xsd:restriction base="xsd:normalizedString">
			<xsd:enumeration value="CapitalizedWithoutMargin"></xsd:enumeration>
			<xsd:enumeration value="CapitalizedWithMargin"></xsd:enumeration>
			<xsd:enumeration value="Average"></xsd:enumeration>
			<xsd:enumeration value="MonthlyCapitalized"></xsd:enumeration>
			<xsd:enumeration value="CapitalizedExceptMargin"></xsd:enumeration>
      <xsd:enumeration value="CDI+Margin"></xsd:enumeration>
      <xsd:enumeration value="CDI%Margin"></xsd:enumeration>
		</xsd:restriction>
	</xsd:simpleType>
  <xsd:simpleType name="HolidayAdjustementEnum">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">The convention for adjusting any relevant date if it would otherwise fall on a day that is not a valid business day.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:normalizedString">
      <xsd:enumeration value="NONE"></xsd:enumeration>
      <xsd:enumeration value="PRECEDING"></xsd:enumeration>
      <xsd:enumeration value="FOLLOWING"></xsd:enumeration>
      <xsd:enumeration value="MODFOLLOWING"></xsd:enumeration>
      <xsd:enumeration value="MODPRECEDING"></xsd:enumeration>
      <xsd:enumeration value="SEECURRENCY"></xsd:enumeration>
      <xsd:enumeration value="NEAREST"></xsd:enumeration>
      <xsd:enumeration value="MODNEAREST"></xsd:enumeration>
      <xsd:enumeration value="ENDOFMONTH"></xsd:enumeration>
      <xsd:enumeration value="ENDOFMONTHPREVIOUS"></xsd:enumeration>
      <xsd:enumeration value="ENDOFMONTHFOLLOWING"></xsd:enumeration> 
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="PeriodicityType">
		<xsd:annotation>
			<xsd:documentation xml:lang="en">List of periodicities : for exact definition, see financial documentation.</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:normalizedString">
			<xsd:enumeration value="Undefined" />
			<xsd:enumeration value="Monthly" />
			<xsd:enumeration value="Quarterly" />
			<xsd:enumeration value="SemiAnnually" />
			<xsd:enumeration value="Annual" />
			<xsd:enumeration value="Final" />
			<xsd:enumeration value="Weekly" />
			<xsd:enumeration value="Daily" />
			<xsd:enumeration value="2Weeks" />
			<xsd:enumeration value="3Weeks" />
			<xsd:enumeration value="4Weeks" />
			<xsd:enumeration value="IMM" />
			<xsd:enumeration value="Hourly" />
			<xsd:enumeration value="2Months" />
			<xsd:enumeration value="5Months" />
			<xsd:enumeration value="7Months" />
			<xsd:enumeration value="4Months" />
			<xsd:enumeration value="8Months" />
			<xsd:enumeration value="9Months" />
			<xsd:enumeration value="10Months" />
			<xsd:enumeration value="11Months" />
			<xsd:enumeration value="13Weeks" />
			<xsd:enumeration value="26Weeks" />
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="SettlementType">
		<xsd:annotation>
			<xsd:documentation xml:lang="en">Specify the way the underlying is delivered : for exact definition and calculation implication, see financial documentation.</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:normalizedString">
			<xsd:enumeration value="Undefined"></xsd:enumeration>
			<xsd:enumeration value="PhysicalDelivery"></xsd:enumeration>
			<xsd:enumeration value="NewShare"></xsd:enumeration>
			<xsd:enumeration value="MarketDelivery"></xsd:enumeration>
			<xsd:enumeration value="Cash"></xsd:enumeration>
			<xsd:enumeration value="Cash&amp;Application"></xsd:enumeration>
			<xsd:enumeration value="Currency"></xsd:enumeration>
			<xsd:enumeration value="Future"></xsd:enumeration>
		</xsd:restriction>
	</xsd:simpleType>
  <xsd:simpleType name="DeliveryEnum">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">Specify the way the underlying is delivered for credit default swaps..</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:normalizedString">
      <xsd:enumeration value="Undefined"></xsd:enumeration>
      <xsd:enumeration value="Cash"></xsd:enumeration>
      <xsd:enumeration value="Physical"></xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="ABSCashFlowGenerationEnum">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">Specify cash flow provider of an ABS</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:normalizedString">
      <xsd:enumeration value="Sophis"></xsd:enumeration>
      <xsd:enumeration value="Bloomberg"></xsd:enumeration>
      <xsd:enumeration value="Intex"></xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="ABSCreditDefaultEnum">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">Specify the credit default type of an ABS</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:normalizedString">
      <xsd:enumeration value="NO DEFAULT"></xsd:enumeration>
      <xsd:enumeration value="MDR"></xsd:enumeration>
      <xsd:enumeration value="REPAYMDR"></xsd:enumeration>
      <xsd:enumeration value="CDR"></xsd:enumeration>
      <xsd:enumeration value="SDA"></xsd:enumeration>
      <xsd:enumeration value="SDR"></xsd:enumeration>
      <xsd:enumeration value="ORIGMDR"></xsd:enumeration>
      <xsd:enumeration value="ORIGCDR"></xsd:enumeration>
      <xsd:enumeration value="ORIGSDR"></xsd:enumeration>
      <xsd:enumeration value="SCHMDR"></xsd:enumeration>
      <xsd:enumeration value="SCHCDR"></xsd:enumeration>
      <xsd:enumeration value="AGGMDR"></xsd:enumeration>
      <xsd:enumeration value="ORIGAGGMDR"></xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="ABSSeverityMethodEnum">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">Specify the severity method of an ABS</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:normalizedString">
      <xsd:enumeration value="STANDARD"></xsd:enumeration>
      <xsd:enumeration value="LIQAMT"></xsd:enumeration>
      <xsd:enumeration value="AMOUNT"></xsd:enumeration>
      <xsd:enumeration value="RECOVER_AMOUNT"></xsd:enumeration>
      <xsd:enumeration value="ALLOW_EXCESS_LOSS"></xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="ABSDelinquencyTypeEnum">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">Specify the delinquency type of an ABS</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:normalizedString">
      <xsd:enumeration value="In Percent"></xsd:enumeration>
      <xsd:enumeration value="In Aggreg. Percent"></xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="ABSRecoveryTypeEnum">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">Specify the recovery type of an ABS</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:normalizedString">
      <xsd:enumeration value="In Percent"></xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="MaturityType">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">The maturity Type of a Future (absolute, relative...)</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:normalizedString">
      <xsd:enumeration value="Absolute"></xsd:enumeration>
      <xsd:enumeration value="RelativeBus"></xsd:enumeration>
      <xsd:enumeration value="RelativeCal"></xsd:enumeration>
      <xsd:enumeration value="RelativeMonth"></xsd:enumeration>
      <xsd:enumeration value="RelativeYear"></xsd:enumeration>
      <xsd:enumeration value="Imm"></xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
	<xsd:simpleType name="FixingType">
		<xsd:annotation>
			<xsd:documentation xml:lang="en">Since 6.2 it is just a normalized string. It avoids adding an enumeration value for a toolkit fixing type.
				Use absolutely the old enumeration values below or those specified in the new_history_column table</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:normalizedString">
      <!--
			<xsd:enumeration value="XXX"></xsd:enumeration>
			<xsd:enumeration value="Last"></xsd:enumeration>
			<xsd:enumeration value="Open"></xsd:enumeration>
			<xsd:enumeration value="High"></xsd:enumeration>
			<xsd:enumeration value="Low"></xsd:enumeration>
      <xsd:enumeration value="Volatility"></xsd:enumeration>
      <xsd:enumeration value="LastForVarSwap"></xsd:enumeration>
			-->
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="Dialog">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">Since 5.3.3 it is just a normalized string. Indeed, it avoids to add an enumeration value for a toolkit dialog.
      For classic dialogs uses absolutely the old enumeration values below</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:normalizedString">
      <!--
			<xsd:enumeration value="General"></xsd:enumeration>
			<xsd:enumeration value="Standard"></xsd:enumeration>
			<xsd:enumeration value="Barrier"></xsd:enumeration>
			<xsd:enumeration value="TwoUnderlyings"></xsd:enumeration>
			<xsd:enumeration value="Digital"></xsd:enumeration>
			<xsd:enumeration value="LookBack"></xsd:enumeration>
			<xsd:enumeration value="Moyenne"></xsd:enumeration>
			<xsd:enumeration value="CBSpecific"></xsd:enumeration>
			<xsd:enumeration value="OptionAscot"></xsd:enumeration>
			<xsd:enumeration value="PreferredShare"></xsd:enumeration>
			<xsd:enumeration value="NewMultiMCOption"></xsd:enumeration>
      <xsd:enumeration value="Old general"></xsd:enumeration>
      <xsd:enumeration value="Swaption"></xsd:enumeration>
      -->
    </xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="OptionTypeEnum">
		<xsd:annotation>
			<xsd:documentation xml:lang="en">Specifies the pay-off of the option.</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:normalizedString">
			<xsd:enumeration value="Call">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">A call option gives the holder the right to buy the underlying asset by a certain date for a certain price.</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="Put">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">A put option gives the holder the right to sell the underlying asset by a certain date for a certain price.</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="BestOfCallCall">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">A best of call-call option gives the holder the right to buy one of the two underlying assets by a certain date for a certain price.</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="BestOfCallPut">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">A best of call-put option gives the holder the right to buy the first underlying asset or to sell the second one by a certain date for a certain price.</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="BestOfPutPut">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">A best of put-put option gives the holder the right to sell one of the two underlying assets by a certain date for a certain price.</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="BestOfPutCall">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">A best of put-call option gives the holder the right to sell the first underlying asset or to buy the second one by a certain date for a certain price.</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="Spread">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">A spread call option gives the holder the right to receive in cash the difference between two assets by a certain date for a certain price.</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="Basket">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">A basket call option gives the holder the right to buy a composition of the two assets by a certain date for a certain price.</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="WorstOfCallCall">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">A worst of call-call option gives the holder to exercice the option and the issuer to choose the underlying asset to buy by the holder by a certain date for a certain price.</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="WorstOfCallPut">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">A worst of call-put option gives the holder to exercice the option and the issuer to choose the first underlying asset to buy or the second one to sell by the holder by a certain date for a certain price.</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="WorstOfPutPut">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">A worst of call-call option gives the holder to exercice the option and the issuer to choose the underlying asset to buy by the holder by a certain date for a certain price.</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="WorstOfPutCall">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">A worst of put-call option gives the holder to exercice the option and the issuer to choose the first underlying asset to sell or the second one to buy by the holder by a certain date for a certain price.</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="DuoDigital">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">A duo digital option gives the holder to receive a certain amount of cash if the two underlying assets are greater than a certain price by a certain date.</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="DerivationModel">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">Determines the algorithm to compute first and second-order Greeks by finite differences</xsd:documentation>
    </xsd:annotation>
		<xsd:restriction base="xsd:normalizedString">
			<xsd:enumeration value="leastSquare"></xsd:enumeration>
			<xsd:enumeration value="collocation"></xsd:enumeration>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="FrequencyType">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">The schedule frequency type</xsd:documentation>
    </xsd:annotation>
		<xsd:restriction base="xsd:normalizedString">
			<xsd:enumeration value="Day" />
			<xsd:enumeration value="Business" />
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="TriggerCondition">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">The binary condition that applies to a European-style trigger, determining where the spot rate must be relative to the triggerRate for the option to be exercisable. There can only be two domain values for this element: "aboveTrigger" or "belowTrigger"</xsd:documentation>
    </xsd:annotation>
		<xsd:restriction base="xsd:normalizedString">
			<xsd:enumeration value="Above"></xsd:enumeration>
			<xsd:enumeration value="Below"></xsd:enumeration>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="LookBackType">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">LookBackType is "On Strike" for a "Lookback" Clause or "On Spot" for a Maximum Clause</xsd:documentation>
    </xsd:annotation>
		<xsd:restriction base="xsd:normalizedString">
			<xsd:enumeration value="lookBackOnStrike" />
			<xsd:enumeration value="lookBackOnSpot" />
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="CurrencyUnit">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">Type defining the different units of quotation for a Currency. For example 'InHundredth' means that the quotation correspond to a quantity of 100.</xsd:documentation>
    </xsd:annotation>
		<xsd:restriction base="xsd:normalizedString">
			<xsd:enumeration value="InMonetaryUnit" />
			<xsd:enumeration value="InHundredth" />
			<xsd:enumeration value="InQuotationUnit" />
		</xsd:restriction>
	</xsd:simpleType>
  <xsd:simpleType name="SettlementLagType">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">Interpretation of a Settlement Lag Period either as Business Days or Calendar Days</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:normalizedString">
      <xsd:enumeration value="OpenDays"></xsd:enumeration>
      <xsd:enumeration value="CalendarDaysFollowing"></xsd:enumeration>
      <xsd:enumeration value="CalendarDaysPreceding"></xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
	<xsd:simpleType name="PrsFundingType">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">Funding type for the Price Return Swap</xsd:documentation>
    </xsd:annotation>
		<xsd:restriction base="xsd:normalizedString">
			<xsd:enumeration value="AdjustedEquityFixing" />
			<xsd:enumeration value="MarketToMarketFixing" />
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="TermLoanParticipation">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">"Assignment" or "Sub-Participation".</xsd:documentation>
    </xsd:annotation>
		<xsd:restriction base="xsd:normalizedString">
			<xsd:enumeration value="Assignment" />
			<xsd:enumeration value="Sub-Participation" />
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="TermLoanCollateralType">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">A type for defining the obligations of the counterparty subject to credit support requirements</xsd:documentation>
    </xsd:annotation>
		<xsd:restriction base="xsd:normalizedString">
			<xsd:enumeration value="Secured" />
			<xsd:enumeration value="Unsecured" />
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:complexType name="RealInstrument">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">Selection between all Instrument Types available in SOPHIS</xsd:documentation>
    </xsd:annotation>
    <xsd:choice>
      <xsd:annotation>
        <xsd:documentation xml:lang="en">Selection between all Instrument Types available in SOPHIS</xsd:documentation>
      </xsd:annotation>
			<xsd:element name="share" type="tns:Share"></xsd:element>
			<xsd:element name="issuer" type="tns:Issuer"></xsd:element>
			<xsd:element name="index" type="tns:Index"></xsd:element>
			<xsd:element name="indexWithModel" type="tns:IndexWithModel"></xsd:element>
			<xsd:element name="debtInstrument" type="tns:DebtInstrument"></xsd:element>
			<xsd:element name="bond" type="tns:Bond"></xsd:element>
			<xsd:element name="bondFuture" type="tns:BondFuture"></xsd:element>
			<xsd:element name="equityFuture" type="tns:EquityFuture"></xsd:element>
			<xsd:element name="equityForward" type="tns:EquityForward"></xsd:element>
			<xsd:element name="interestRateFuture" type="tns:InterestRateFuture"></xsd:element>
			<xsd:element name="notionalFuture" type="tns:NotionalFuture"></xsd:element>
			<xsd:element name="equityOption" type="tns:EquityOption"></xsd:element>
			<xsd:element name="package" type="tns:Package"></xsd:element>
			<xsd:element name="rainbowOption" type="tns:RainbowOption"></xsd:element>
			<xsd:element name="bondOption" type="tns:BondOption"></xsd:element>
			<xsd:element name="futureOption" type="tns:FutureOption"></xsd:element>
			<xsd:element name="forexOption" type="tns:ForexOption"></xsd:element>
			<xsd:element name="fundOption" type="tns:FundOption"></xsd:element>
      <xsd:element name="ascot" type="tns:Ascot"/>
      <xsd:element name="convertibleBond" type="tns:ConvertibleBond" />
			<xsd:element name="interestRateForward" type="tns:InterestRateForward" />
			<xsd:element name="forexFuture" type="tns:ForexFuture" />
      <xsd:element name="commodity" type="tns:Commodity"/>
			<xsd:element name="commodityFuture" type="tns:CommodityFuture" />
			<xsd:element name="swap" type="tns:Swap" />
			<xsd:element name="capFloor" type="tns:CapFloor" />
      <xsd:element name="commodityForward" type="tns:CommodityForward"/>
      <xsd:element name="commodityOption" type="tns:CommodityOption"/>
      <xsd:element name="swaption" type="tns:Swaption"/>
      <xsd:element name="commodityIndex" type="tns:CommodityIndex"/>
      <xsd:element name="indexedOption" type="tns:IndexedOption"/>
      <xsd:element name="floatingRate" type="tns:FloatingRateInstrument"/>
      <xsd:element name="forexInstrument" type="tns:ForexInstrument"/>
      <xsd:element name="physicalCommodity" type="tns:PhysicalCommodity"/>
            <xsd:element name="cfdInstrument" type="tns:CfdInstrument"/>
		</xsd:choice>
	</xsd:complexType>
	<xsd:complexType name="InstrumentList">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">List of Instrument Types with their descriptions</xsd:documentation>
    </xsd:annotation>
		<xsd:sequence>
			<xsd:element maxOccurs="unbounded" minOccurs="0" name="instrument" type="tns:RealInstrument"></xsd:element>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="PointedInstrumentList">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">Defines a list of instrument types. The list can be used in user-interfaces, for example.</xsd:documentation>
    </xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="tns:InstrumentList">
				<xsd:sequence>
					<xsd:element name="basePoint" type="tns:RealInstrument"></xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="InstrumentBase">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">Common Properties for all Instruments in SOPHIS</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
    	<xsd:element minOccurs="0" name="realtime" type="tns:RealTimeParameters" />
		<xsd:element minOccurs="0" name="productType" type="xsd:normalizedString"/>
		<xsd:element minOccurs="0" name="feature" type="xsd:normalizedString"/>
    </xsd:sequence>
		<xsd:attribute name="href" type="xsd:IDREF" use="optional" />
		<xsd:attributeGroup ref="common:PersistentEntity.model"></xsd:attributeGroup>
		<xsd:attribute name="id" type="xsd:ID"></xsd:attribute>
		<xsd:attribute name="updateWithCheck" type="xsd:boolean">
			<xsd:annotation>
				<xsd:documentation source="http://www.sophis.net" xml:lang="en">Since 6.2 for Integration Service only ; in mode 'UpdateOrCreate' :
				 - if true a checker tests if existing instrument is equivalent to input xml ; if yes do nothing, if false make the update
				 - if false or not present make the update</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
	</xsd:complexType>
  <xsd:complexType name="RealTimeParameters">
     <xsd:annotation>
				 <xsd:documentation xml:lang="en">Realtime parameters used by DRT</xsd:documentation>
			</xsd:annotation>
			<xsd:sequence>
     	<xsd:element minOccurs="0" name="prefix" type="xsd:normalizedString"></xsd:element>
     	<xsd:element minOccurs="0" name="fid" type="xsd:short"></xsd:element>
     </xsd:sequence>
	</xsd:complexType>

  <xsd:complexType name="Reference">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">Internal Reference of an Instrument</xsd:documentation>
    </xsd:annotation>
		<xsd:simpleContent>
			<xsd:extension base="common:StringBounded256">
				<xsd:attribute name="name" type="common:StringBounded39" use="required">
					<xsd:annotation>
						<xsd:documentation xml:lang="en">Identifier of the Univeral Reference. In upper camel.</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="modifiable" type="tns:ReferenceUpdateType">
					<xsd:annotation>
						<xsd:documentation xml:lang="en">Specify if the key can be modified; by default, unique prioritary</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="checkIfDefined" type="xsd:boolean" default="false">
					<xsd:annotation>
						<xsd:documentation>Used for the case when an instrument is searched with more than one UniquePrioritary
							references.
							Suppose that:
							- we have an instrument search with the UniquePrioritary references R1, R2 and R3
							- an instrument was found for R1
							- no instrument was found for R2 and R3
							- R2 is marked with the attribute checkIfDefined = true
							then, if the found instrument has the reference R2 defined we'll consider the search
							unsuccessful.</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="tradeUpdateMode" type="tns:TradeUpdateModeType" default="NoUpdate">
					<xsd:annotation>
						<xsd:documentation xml:lang="en">Specify how a reference would be modified by a trade. This attribute is taken into account only
						for a trade creation or update (the element 'instrument' inside 'tradeProduct'</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:simpleContent>
	</xsd:complexType>
	<xsd:complexType name="Identifier">
		<xsd:annotation>
      <xsd:documentation xml:lang="en">Identification of the underlying asset, using public and/or private identifiers.</xsd:documentation>
		</xsd:annotation>
    <xsd:group ref="tns:IdentifierGroup"/>
  </xsd:complexType>
  <xsd:complexType name="IdentifiedIdentifier">
  	<xsd:complexContent>
		<xsd:extension base="tns:Identifier">
			<xsd:attribute name="id" type="xsd:ID" use="optional" />
    		<xsd:attribute name="href" type="xsd:IDREF" use="optional" />
		</xsd:extension>
	</xsd:complexContent>
  </xsd:complexType>
  <xsd:group name="IdentifierGroup">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">Identification of the underlying asset, using public and/or private identifiers.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
			<xsd:element minOccurs="0" name="sophis">
				<xsd:complexType>
          <xsd:annotation>
            <xsd:documentation xml:lang="en">One public and/or private identifier of the underlying asset</xsd:documentation>
          </xsd:annotation>
					<xsd:simpleContent>
						<xsd:extension base="xsd:unsignedInt">
							<xsd:attribute name="selectedIdentifier" type="xsd:normalizedString" use="optional" />
							<xsd:attribute name="href" type="xsd:IDREF" use="optional"  />
						</xsd:extension>
					</xsd:simpleContent>
				</xsd:complexType>
			</xsd:element>
			<xsd:element maxOccurs="unbounded" minOccurs="0" name="reference" type="tns:Reference">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">List of universal reference available.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
      <xsd:element name="instrumentTypeHint" type="xsd:normalizedString" minOccurs="0"/>
		</xsd:sequence>
  </xsd:group>

	<xsd:complexType name="Underlyer">
		<xsd:annotation>
			<xsd:documentation xml:lang="en">A type describing the whole set of possible underlyers: it may be a reference on an existing instrument or just a reference on another instrument.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="tns:Identifier">
				<xsd:sequence></xsd:sequence>
				<xsd:attribute name="href" type="xsd:IDREF"></xsd:attribute>
				<!-- internal -->
				<xsd:attribute name="ID" type="xsd:ID" use="optional">
					<xsd:annotation>
						<xsd:documentation source="http://www.sophis.net" xml:lang="en">Internal, for gxml simplified soap.</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="Sector">
		<xsd:annotation>
			<xsd:documentation xml:lang="en">Sector for one provider.</xsd:documentation>
		</xsd:annotation>
		<xsd:all>
			<xsd:element name="code" type="tns:StringBounded9"></xsd:element>
			<xsd:element minOccurs="0" name="name" type="common:StringBounded39"></xsd:element>
			<xsd:element minOccurs="0" name="path" type="xsd:normalizedString"></xsd:element>
			<xsd:element minOccurs="0" name="comment" type="tns:StringBounded127"></xsd:element>
			<xsd:element minOccurs="0" name="index" type="tns:Underlyer"></xsd:element>
		</xsd:all>
		<xsd:attribute name="provider" type="common:StringBounded33" use="required">
			<xsd:annotation>
				<xsd:documentation xml:lang="en">In upper camel.</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
	</xsd:complexType>
	<xsd:complexType name="Sectors">
		<xsd:annotation>
			<xsd:documentation xml:lang="en">List of sectors by provider.</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element minOccurs="0" maxOccurs="1" name="identifier" type="tns:Identifier"></xsd:element>
			<xsd:element maxOccurs="unbounded" minOccurs="0" name="sector" type="tns:Sector"></xsd:element>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="Market">
		<xsd:annotation>
      <xsd:documentation xml:lang="en">Common Market Parameters that apply to an Instrument</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element minOccurs="0" name="sophis" type="tns:Mnemonic" />
			<xsd:element minOccurs="0" name="name" type="common:StringBounded39">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">Only in reading mode : not used to retrieve a market</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element minOccurs="0" name="place" type="common:StringBounded39">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">Only in reading mode : not used to retrieve a market</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element maxOccurs="unbounded" minOccurs="0" name="reference" type="tns:Reference">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">List of market references available.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element minOccurs="0" name="priceQuotationType" type="tns:MarketPriceQuotationType">
				<xsd:annotation>
				  <xsd:documentation xml:lang="en">Only in reading mode : not used to retrieve a market</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element minOccurs="0" name="settlementOffset" type="common:RelativeDateOffset">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">By default, use the one of the market.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element minOccurs="0" name="ownershipOffset" type="common:Offset">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">By default, use the one of the market.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="YieldToMaturity">
		<xsd:annotation>
			<xsd:documentation xml:lang="en">Describe a yield to maturity.</xsd:documentation>
		</xsd:annotation>
		<xsd:all>
			<xsd:element minOccurs="0" name="adjustedDate" type="xsd:boolean">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">Specify if the calculation on coupon date has to be adjusted by bank holiday; the default is false.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element minOccurs="0" name="settlementDate" type="xsd:boolean">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">Specify if the calculation has to be done on setllement or trade date; the default is false.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="dayCountBasis" type="tns:DayCountBasis" />
			<xsd:element name="yield" type="tns:YieldCalculation" />
		</xsd:all>
	</xsd:complexType>

	<xsd:complexType name="PointValue">
		<xsd:annotation>
      <xsd:documentation xml:lang="en">Constrains the forward point tick/pip factor to 1, 0.1, 0.01, 0.001, etc.</xsd:documentation>
		</xsd:annotation>
		<xsd:all>
			<xsd:element minOccurs="0" name="averagePrice" type="xsd:double">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">Divisor coefficient to calculate average price in function of gross amount.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element minOccurs="0" name="unrealized" type="xsd:double">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">Multiplied Coefficient to calculate unrealized in function of (last - average price).</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element minOccurs="0" name="realized" type="xsd:double">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">Multiplied Coefficient to calculate realized in function of gross amount.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element minOccurs="0" name="quotationType" type="tns:QuotationType">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">Default quotation type.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element minOccurs="0" name="inAmount" type="xsd:double">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">Multiplied Coefficient to calculate gross amount in function of spot when spot type is in amount and currency payement is the same.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element minOccurs="0" name="inAnotherCurrency" type="xsd:double">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">Multiplied Coefficient to calculate gross amount in function of spot when spot type is in amount and currency payement is not the same.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element minOccurs="0" name="inPercent" type="xsd:double">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">Multiplied Coefficient to calculate gross amount in function of spot when spot type is in percentage.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element minOccurs="0" name="inYield" type="tns:YieldToMaturity">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">Specify if the instrument can be negotiated in yield.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element minOccurs="0" name="inDiscountMargin" type="xsd:double">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">The value negotiated in discount margin (%), only for floating bond.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:all>
	</xsd:complexType>
	<xsd:complexType name="Money">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">A type defining a currency amount</xsd:documentation>
    </xsd:annotation>
		<xsd:all>
			<xsd:element name="currency" type="tns:Currency"></xsd:element>
			<xsd:element name="amount" type="xsd:double"></xsd:element>
		</xsd:all>
	</xsd:complexType>
	<xsd:complexType name="Pricing">
		<xsd:annotation>
      <xsd:documentation xml:lang="en">Assumptions and Models applied for the Theoretical Valuation of an Instrument</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element minOccurs="0" name="nature" type="common:Char">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">Fixed by type: Use to create the correct Sophis class.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element minOccurs="0" name="model" type="common:StringBounded39">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">Name of the derived class to create or update by default, Standard</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
      <xsd:element minOccurs="0" name="isCleared" type="xsd:boolean">
        <xsd:annotation>
          <xsd:documentation xml:lang="en">True for clearable instruments</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="Instrument">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">Abstract base class for all underlying assets</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="tns:InstrumentBase">
        <xsd:sequence>
          <xsd:element minOccurs="0" name="identifier" type="tns:Identifier" >
          <xsd:annotation>
            <xsd:documentation xml:lang="en">Identification of the underlying asset, using public and/or private identifiers.</xsd:documentation>
          </xsd:annotation>
          </xsd:element>
					<xsd:element minOccurs="0" name="name" type="common:StringBounded39" />
          <xsd:element minOccurs="0" name="instrumentTemplateIdentifier" type="tns:Identifier" >
            <xsd:annotation>
              <xsd:documentation xml:lang="en">Identification of the template used to create the instrument.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="currency" type="tns:Currency">
						<xsd:annotation>
							<xsd:documentation xml:lang="en">This is the quotation currency and is also used for the average price.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element minOccurs="0" name="sectors" type="tns:Sectors" />
					<xsd:element minOccurs="0" name="ratings" type="tns:Ratings" />
					<xsd:element minOccurs="0" name="market" type="tns:Market" />
					<xsd:element minOccurs="0" name="businessCenters" type="common:BusinessCenters">
						<xsd:annotation>
							<xsd:documentation xml:lang="en">Used for all relative date when no calendar is defined.By default, it is the market one.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element minOccurs="0" name="pointValue" type="tns:PointValue" />
					<xsd:element minOccurs="0" name="outstandingNumber" type="xsd:unsignedLong" />
					<xsd:element minOccurs="0" name="allotment" type="xsd:normalizedString">
						<xsd:annotation>
							<xsd:documentation xml:lang="en">The possible fields depend on those specified in the Allotment table and must be written in upper camel</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
		   <xsd:element minOccurs="0" name="status" type="xsd:normalizedString" />
          <xsd:element minOccurs="0" name="notional" type="tns:Money" />
          <xsd:element minOccurs="0" name="issuer" type="tns:Underlyer" >
          <xsd:annotation>
            <xsd:documentation xml:lang="en">Specifies the issuer reference of the instrument.</xsd:documentation>
          </xsd:annotation>
          </xsd:element>
					<xsd:element minOccurs="0" name="comment" type="tns:StringBounded199" />
					<!--<xsd:element minOccurs="0" name="pricing" type="tns:Pricing" />-->

		  <xsd:element minOccurs="0" name="tags" type="tag:Tags">
            <xsd:annotation>
              <xsd:documentation xml:lang="en">Since 7.1.0 : contains all tags applied to the instrument </xsd:documentation>
            </xsd:annotation>
          </xsd:element>

          <xsd:element minOccurs="0" name="extraFields" type="common:ExtraFields">
            <xsd:annotation>
              <xsd:documentation xml:lang="en">Since 5.3.3 : contains all extensible elements (toolkit datas for example)</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
  <xsd:complexType name="InterestRateOption">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">An Option whose Underlying is an Interest Rate.
This Type is deprecated, see CapFloor</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="tns:Option">
        <xsd:sequence>
          <xsd:element name="underlyer" type="tns:FloatingRate"/>
          <xsd:element minOccurs="0" name="fixedIncome" type="tns:FixedIncomeInOptions"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="OptionSwapped">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">An Option whose Premium consists in a stream of Fixed or Floating flows</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="tns:Option">
        <xsd:sequence>
          <xsd:element name="underlyer" type="tns:Underlyer"/>
          <xsd:element minOccurs="0" name="fixedIncome" type="tns:FixedIncomeInOptions"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="IndexedOption">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">An Option of type "Lock-in Bond" or "Share Redeemable Indexed Loan"</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="tns:Option">
        <xsd:sequence>
          <xsd:element name="underlyer" type="tns:Underlyer"/>
          <xsd:element minOccurs="0" name="fixedIncome" type="tns:FixedIncomeInOptions"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:simpleType name="CPPIProductType">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">Main payoff type for a CPPI Strategy (Strategy or Guaranteed) or CPPI Option (Guaranteed, Call or Put)</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:normalizedString">
      <xsd:enumeration value="Strategy"></xsd:enumeration>
      <xsd:enumeration value="Guaranteed"></xsd:enumeration>
      <xsd:enumeration value="Call"></xsd:enumeration>
      <xsd:enumeration value="Put"></xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="FXOptionType">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">Option Type of a Forex Option (Vanilla, Asian, Barrier...), it drives most other fields of the Payoff</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:normalizedString">
      <xsd:enumeration value="Vanilla"></xsd:enumeration>
      <xsd:enumeration value="Asian"></xsd:enumeration>
      <xsd:enumeration value="Barrier"></xsd:enumeration>
      <xsd:enumeration value="KnockIn"></xsd:enumeration>
      <xsd:enumeration value="KnockOut"></xsd:enumeration>
      <xsd:enumeration value="DoubleKnockIn"></xsd:enumeration>
      <xsd:enumeration value="DoubleKnockOut"></xsd:enumeration>
      <xsd:enumeration value="Digital"></xsd:enumeration>
      <xsd:enumeration value="OneTouch"></xsd:enumeration>
      <xsd:enumeration value="NoTouch"></xsd:enumeration>
      <xsd:enumeration value="DoubleOneTouch"></xsd:enumeration>
      <xsd:enumeration value="DoubleNoTouch"></xsd:enumeration>
	  <xsd:enumeration value="AverageStrike"></xsd:enumeration>
	  <xsd:enumeration value="AverageRate"></xsd:enumeration>
	  <xsd:enumeration value="DoubleAverage"></xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="CPPIRiskFreeType">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">Modelisation of the Risk-Free Asset for a CPPI Strategy as a Yield Curve, Interest Rate...</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:normalizedString">
      <xsd:enumeration value="Curve"></xsd:enumeration>
      <xsd:enumeration value="Rate"></xsd:enumeration>
      <xsd:enumeration value="Bond"></xsd:enumeration>
      <xsd:enumeration value="None"></xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:complexType name="CPPIRiskFreeData">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">Describes the generation parameters of the Risk-Free part of the CPPI strategy</xsd:documentation>
    </xsd:annotation>
    <xsd:all>
      <xsd:element name="Type" type="tns:CPPIRiskFreeType"/>
      <xsd:element minOccurs="0" name="Code" type="tns:Underlyer"/>
      <!-- Family -->
      <xsd:element minOccurs="0" name="Family" type="xsd:normalizedString"/>
      <xsd:element minOccurs="0" name="Spread" type="xsd:double"/>
      <!-- ... -->
      <xsd:element minOccurs="0" name="Basis" type="tns:DayCountBasis"/>
      <xsd:element name="Timing" type="xsd:normalizedString"/>
      <xsd:element name="FixingType" type="xsd:normalizedString"/>
      <xsd:element name="FixingOffset" type="xsd:int"/>
    </xsd:all>
  </xsd:complexType>
  <xsd:complexType name="CPPIRiskFreeDataList">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">List of Risk-Free parts of the CPPI strategy, one for Lending and one for Borrowing</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element maxOccurs="2" minOccurs="2" name="RiskFreeData" type="tns:CPPIRiskFreeData"></xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:simpleType name="CPPIIndexFeeType">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">Determines whether the Fees calculated for a CPPI are additive or multiplicative</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:normalizedString">
      <xsd:enumeration value="Multiplicative"></xsd:enumeration>
      <xsd:enumeration value="Additive"></xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
    <xsd:complexType name="CPPIFeesDate">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">List of dates on which the CPPI Holder should pay the Fees</xsd:documentation>
    </xsd:annotation>
    <xsd:all>
      <xsd:element name="FeesDate" type="xsd:date"/>
    </xsd:all>
  </xsd:complexType>
  <xsd:complexType name="CPPIFeesDatesList">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">List of Fees Dates</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" maxOccurs="unbounded" name="FeesDates" type="tns:CPPIFeesDate"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="CPPIIndexStrategy">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">Describes the Index part of the CPPI Strategy</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="Type" type="tns:CPPIIndexFeeType"/>
      <xsd:element name="Fees" type="xsd:double"/>
      <xsd:element name="DefeasanceFees" type="xsd:double"/>
      <xsd:element name="RiskyFees" type="xsd:double"/>
      <xsd:element name="AreFeesOnLastDate" type="xsd:boolean"/>
      <xsd:element minOccurs="0" name="Basis" type="tns:DayCountBasis"/>
      <xsd:element name="Mode" type="xsd:normalizedString"/>
	  <xsd:element name="FeesFrequency" type="xsd:normalizedString"/>
	  <xsd:element name="FeesDatesList" type="tns:CPPIFeesDatesList"/>
      <xsd:element name="DoubleDeckerLevel" type="xsd:double" minOccurs="0"/>
      <xsd:element name="MoreRiskyCode" type="tns:Identifier" minOccurs="0"/>
      <xsd:element name="MoreRiskyFixingType" type="xsd:normalizedString" minOccurs="0"/>
      <xsd:element name="MoreRiskyFixingForex" type="xsd:normalizedString" minOccurs="0"/>
      <xsd:element name="MoreRiskyFundFixingType" type="xsd:normalizedString" minOccurs="0"/>
      <xsd:element name="MoreRiskyOffset" type="xsd:int" minOccurs="0"/>
      <xsd:element name="MoreRiskyIsQuanto" type="xsd:boolean" minOccurs="0"/>
      <xsd:element name="MoreRiskyFundOrderIn" type="xsd:normalizedString" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>

  <xsd:complexType name="CPPILockInDate">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">A date where profit Lock-In is possible</xsd:documentation>
    </xsd:annotation>
    <xsd:all>
      <xsd:element name="LockInDate" type="xsd:date"/>
    </xsd:all>
  </xsd:complexType>
  <xsd:complexType name="CPPILockInDatesList">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">List of Lock-In Dates</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" maxOccurs="unbounded" name="LockInDates" type="tns:CPPILockInDate"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="CPPIThresholdStrategy">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">Describes the Threshold part of the CPPI Strategy</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="ExtendedSubscriptionEndDate" type="xsd:date"/>
      <xsd:choice>
        <xsd:annotation>
          <xsd:documentation xml:lang="en">Threshold Strategy is done either through a Fixed Proportion or through Profit Lock-In</xsd:documentation>
        </xsd:annotation>
        <xsd:element name="Proportion" type="xsd:double"/>
        <xsd:sequence>
          <xsd:element minOccurs="0" name="HasLockIn" type="xsd:boolean"/>
          <xsd:element minOccurs="0" name="HasArtificialThreshold" type="xsd:boolean"/>
          <xsd:element minOccurs="0" name="LockInType" type="xsd:normalizedString"/>
          <xsd:element minOccurs="0" name="LockInFrequency" type="xsd:normalizedString"/>
          <xsd:element minOccurs="0" name="LockInStartDate" type="xsd:date"/>
          <xsd:element minOccurs="0" name="LockInEndDate" type="xsd:date"/>
          <xsd:element minOccurs="0" name="LockInDatesList" type="tns:CPPILockInDatesList"/>
          <xsd:element minOccurs="0" name="ArtificialType" type="xsd:normalizedString"/>
          <xsd:element minOccurs="0" name="ArtificialRate" type="xsd:double"/>
          <xsd:element minOccurs="0" name="ArtificialBasis" type="tns:DayCountBasis"/>
          <xsd:element minOccurs="0" name="ArtificialMode" type="xsd:normalizedString"/>
        </xsd:sequence>
      </xsd:choice>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="CPPIRAWTable">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">A line in the Rebalancing Table</xsd:documentation>
    </xsd:annotation>
    <xsd:all>
      <xsd:element name="CushionBound" type="xsd:double"/>
      <xsd:element name="RAW" type="xsd:double"/>
    </xsd:all>
  </xsd:complexType>
  <xsd:complexType name="CPPIRAWTableList">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">Rebalancing Table used when the RAW Strategy is "RAW table"</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" maxOccurs="unbounded" name="RAWTable" type="tns:CPPIRAWTable"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--<xsd:complexType name="CPPIRAWStandardStrategy">

  </xsd:complexType>-->
  <xsd:complexType name="CPPIRAWStrategy">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">Describes the Risky Asset Weighting part of the CPPI Strategy</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="FirstPeriodEndDate" type="xsd:date"/>
      <xsd:element name="FirstPeriodRAW" type="xsd:double"/>
      <xsd:element name="RebalancingMinimumMultiplier" type="xsd:double"/>
      <xsd:element name="RebalancingMaximumMultiplier" type="xsd:double"/>
      <xsd:choice>
        <xsd:annotation>
          <xsd:documentation xml:lang="en">RAW strategy of a CPPI is either specified as a set of standard RAW parameters or as a RAW Rable</xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
          <xsd:element name="Multiplier" type="xsd:double"/>
          <xsd:element name="MaximumExposure" type="xsd:double"/>
          <xsd:element name="MinimumExposure" type="xsd:double"/>
          <xsd:element name="DefeasanceTrigger" type="xsd:double"/>
          <xsd:element name="RoundingMethod" type="xsd:normalizedString"/>
          <xsd:element name="DecimalUnits" type="xsd:int"/>
        </xsd:sequence>
        <!--<xsd:element name="RAWStrategyStandard" type="tns:CPPIRAWStandardStrategy"/>-->
        <xsd:element name="RAWTableList" type="tns:CPPIRAWTableList"/>
      </xsd:choice>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="CPPIClientStrategy">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">The full set of Strategies used to define a CPPI</xsd:documentation>
    </xsd:annotation>
    <xsd:all>
      <xsd:element name="IndexStrategyName" type="xsd:normalizedString"/>
      <xsd:element name="IndexStrategy" type="tns:CPPIIndexStrategy"/>
      <xsd:element name="ThresholdStrategyName" type="xsd:normalizedString"/>
      <xsd:element name="ThresholdStrategy" type="tns:CPPIThresholdStrategy"/>
      <xsd:element name="RAWStrategyName" type="xsd:normalizedString"/>
      <xsd:element name="RAWStrategy" type="tns:CPPIRAWStrategy"/>
    </xsd:all>
  </xsd:complexType>
  <xsd:complexType name="CPPIRiskyDates">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">One Valuation Date for the risky part of the CPPI</xsd:documentation>
    </xsd:annotation>
    <xsd:all>
      <xsd:element name="Code" type="xsd:int"/>
      <xsd:element name="Date" type="xsd:date"/>
    </xsd:all>
  </xsd:complexType>
  <xsd:complexType name="CPPIRiskyDatesList">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">Valuation Dates for the risky part of the CPPI</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" maxOccurs="unbounded" name="RiskyDates" type="tns:CPPIRiskyDates"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="CPPIScheduleDates">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">A line in the Valuation Schedule table of a CPPI</xsd:documentation>
    </xsd:annotation>
    <xsd:all>
      <xsd:element name="ValuationDate" type="xsd:date"/>
      <xsd:element name="RiskFreeDate" type="xsd:date"/>
      <xsd:element name="FinancingDate" type="xsd:date"/>
      <xsd:element name="RiskyDatesList" type="tns:CPPIRiskyDatesList"/>
    </xsd:all>
  </xsd:complexType>
  <xsd:complexType name="CPPIScheduleDatesList">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">Valuation Schedule table of a CPPI</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" maxOccurs="unbounded" name="ScheduleDates" type="tns:CPPIScheduleDates"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="CPPIRebalancingSchedule">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">The set of all schedule parameters and tables for a CPPI</xsd:documentation>
    </xsd:annotation>
    <xsd:all>
      <xsd:element minOccurs="0" name="ScheduleDatesList" type="tns:CPPIScheduleDatesList"/>
      <xsd:element minOccurs="0" name="FirstValuationDate" type="xsd:date"/>
      <xsd:element minOccurs="0" name="LastValuationDate" type="xsd:date"/>
      <xsd:element minOccurs="0" name="RebalancingType" type="xsd:normalizedString"/>
      <xsd:element minOccurs="0" name="Periodicity" type="xsd:normalizedString"/>
      <xsd:element minOccurs="0" name="WeekOffset" type="xsd:int"/>
      <xsd:element minOccurs="0" name="WeekDay" type="xsd:normalizedString"/>
      <xsd:element minOccurs="0" name="BankingDayOffset" type="xsd:int"/>
      <xsd:element minOccurs="0" name="BankingDayOrigin" type="xsd:normalizedString"/>
      <xsd:element minOccurs="0" name="BankHolidayRule" type="xsd:normalizedString"/>
    </xsd:all>
  </xsd:complexType>
  <xsd:complexType name="CPPIRiskyValues">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">One line in the Explanation List for one underlying in the risky part of a CPPI</xsd:documentation>
    </xsd:annotation>
    <xsd:all>
      <xsd:element name="Code" type="xsd:int"/>
      <xsd:element name="RiskyFixingDate" type="xsd:date"/>
      <xsd:element name="RiskyFixing" type="xsd:double"/>
      <xsd:element name="RiskyDividend" type="xsd:double"/>
      <xsd:element name="RiskyReturn" type="xsd:double"/>
      <xsd:element name="RiskyWeighting" type="xsd:double"/>
      <xsd:element name="RiskyAmount" type="xsd:double"/>
      <xsd:element name="RiskyQuantity" type="xsd:double"/>
    </xsd:all>
  </xsd:complexType>
  <xsd:complexType name="CPPIRiskyValuesList">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">Explanation List for one underlying in the risky part of a CPPI</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" maxOccurs="unbounded" name="RiskyValues" type="tns:CPPIRiskyValues"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="CPPIExplanationValues">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">One line in the Explanation List of a CPPI</xsd:documentation>
    </xsd:annotation>
    <xsd:all>
      <xsd:element name="ValuationDate" type="xsd:date"/>
      <xsd:element name="IndexValue" type="xsd:double"/>
      <xsd:element name="Guarantee" type="xsd:double"/>
      <xsd:element name="RiskFreeFixing" type="xsd:double"/>
      <xsd:element name="RiskFreeZeroCoupon" type="xsd:double"/>
      <xsd:element name="FinancingFixing" type="xsd:double"/>
      <xsd:element name="FinancingZeroCoupon" type="xsd:double"/>
      <xsd:element name="FinancingCosts" type="xsd:double"/>
      <xsd:element name="ThresholdValue" type="xsd:double"/>
      <xsd:element name="Coupon" type="xsd:double"/>
      <xsd:element name="RiskyValuesList" type="tns:CPPIRiskyValuesList"/>
    </xsd:all>
  </xsd:complexType>
  <xsd:complexType name="CPPIExplanationValuesList">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">The Explanation List of a CPPI</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" maxOccurs="unbounded" name="ExplanationValues" type="tns:CPPIExplanationValues"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="CPPIExplanation">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">The Explanation List of a CPPI</xsd:documentation>
    </xsd:annotation>
    <xsd:all>
      <xsd:element name="ExplanationValuesList" type="tns:CPPIExplanationValuesList"/>
    </xsd:all>
  </xsd:complexType>
  <xsd:complexType name="CPPIIncomeSchedule">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">One line in the Coupon Schedule of the Income part of a CPPI</xsd:documentation>
    </xsd:annotation>
    <xsd:all>
      <xsd:element name="StartDate" type="xsd:date"/>
      <xsd:element name="CouponDate" type="xsd:date"/>
      <xsd:element name="ExCouponDate" type="xsd:date"/>
      <xsd:element name="PaymentDate" type="xsd:date"/>
      <xsd:element name="CouponAmount" type="xsd:double"/>
      <xsd:element name="CouponType" type="xsd:normalizedString"/>
      <xsd:element name="Notional" type="xsd:double"/>
      <xsd:element name="Rate" type="xsd:double"/>
      <xsd:element name="Proportion" type="xsd:double"/>
      <xsd:element name="Cap" type="xsd:double"/>
    </xsd:all>
  </xsd:complexType>
  <xsd:complexType name="CPPIIncomeScheduleList">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">Coupon Schedule of the Income part of a CPPI</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" maxOccurs="unbounded" name="IncomeSchedule" type="tns:CPPIIncomeSchedule"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="CPPIIncomeData">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">Parameters that describe how the Income of a CPPI is generated</xsd:documentation>
    </xsd:annotation>
    <xsd:all>
      <xsd:element name="Dividend" type="xsd:normalizedString"/>
      <xsd:element name="Ratio" type="xsd:double"/>
      <xsd:element name="CouponsType" type="xsd:normalizedString"/>
      <xsd:element name="Frequency" type="xsd:normalizedString"/>
      <xsd:element name="Rate" type="xsd:double"/>
      <xsd:element name="Proportion" type="xsd:double"/>
      <xsd:element minOccurs="0" name="CouponsBasis" type="tns:DayCountBasis"/>
      <xsd:element name="CouponsMode" type="xsd:normalizedString"/>
      <xsd:element name="IncomePaymentGap" type="xsd:int"/>
      <xsd:element name="IncomeOwnershipShift" type="xsd:int"/>
      <xsd:element name="IncomeOwnershipType" type="xsd:normalizedString"/>
      <xsd:element name="IncomeScheduleList" type="tns:CPPIIncomeScheduleList"/>
    </xsd:all>
  </xsd:complexType>
  <xsd:complexType name="Cppi">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">An Instrument of type Constant Proportion Portfolio Insurance</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="tns:Option">
        <xsd:sequence>
          <xsd:element name="underlyer" type="tns:Underlyer"/>
          <xsd:element minOccurs="0" name="fixedIncome" type="tns:FixedIncomeInOptions"/>
          <xsd:element name="IncomeDataName" type="xsd:normalizedString"/>
          <xsd:element name="IncomeData" type="tns:CPPIIncomeData"/>
		  <xsd:element name="SplitBaskets" type="xsd:boolean"/>
		  <xsd:element name="SplitFunds" type="xsd:boolean"/>
          <xsd:element name="CPPIProductType" type="tns:CPPIProductType"/>
          <xsd:element name="InitialGuarantee" type="xsd:double"/>
          <xsd:element name="RiskyFundFixingType" type="xsd:normalizedString"/>
          <xsd:element name="RiskyFundOrderIn" type="xsd:normalizedString"/>
          <xsd:element name="RiskFreeDataList" type="tns:CPPIRiskFreeDataList"/>
          <xsd:element name="ClientStrategyName" type="xsd:normalizedString"/>
          <xsd:element name="ClientStrategy" type="tns:CPPIClientStrategy"/>
          <xsd:element name="RebalancingSchedule" type="tns:CPPIRebalancingSchedule"/>
          <xsd:element name="Explanation" type="tns:CPPIExplanation"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="CppiOption">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">An Option whose underlying is a CPPI</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="tns:Option">
        <xsd:sequence>
          <xsd:element name="underlyer" type="tns:Underlyer"/>
          <xsd:element minOccurs="0" name="fixedIncome" type="tns:FixedIncomeInOptions"/>
          <xsd:element minOccurs="0" name="IncomeDataName" type="xsd:normalizedString"/>
          <xsd:element minOccurs="0" name="IncomeData" type="tns:CPPIIncomeData"/>
		  <xsd:element name="SplitBaskets" type="xsd:boolean"/>
		  <xsd:element name="SplitFunds" type="xsd:boolean"/>

          <xsd:element minOccurs="0" name="CPPIProductType" type="tns:CPPIProductType"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="FxOption">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">An Option whose underlying is a Forex Pair</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="tns:ForexOption">
        <xsd:sequence>
          <xsd:element name="FXOptionType" type="tns:FXOptionType"/>
		  <xsd:element minOccurs="0" name="StrikeOffset" type="xsd:double"/>
		  <xsd:element minOccurs="0" name="FixedNotionalCurrency" type="tns:Currency"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="BasketCorrelation">
		<xsd:annotation>
			<xsd:documentation xml:lang="en">Used to specify if the index volatility used the correlation defined for the equity and the volatility or the one defined on the basket level.</xsd:documentation>
		</xsd:annotation>
		<xsd:all>
			<xsd:element name="equityEquity" nillable="true" type="xsd:double"></xsd:element>
			<xsd:element name="equityForex" nillable="true" type="xsd:double"></xsd:element>
			<xsd:element name="forexForex" nillable="true" type="xsd:double"></xsd:element>
		</xsd:all>
	</xsd:complexType>
	<xsd:complexType name="PricingForIndex">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">Assumptions and Models applied for the Theoretical Valuation of an Index</xsd:documentation>
    </xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="tns:Pricing">
				<xsd:sequence>
					<xsd:element minOccurs="0" name="spot" type="tns:SpotPricing"></xsd:element>
					<xsd:element minOccurs="0" name="basketCorrelation" type="tns:BasketCorrelation"></xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType abstract="true" name="InstrumentForIndex">
		<xsd:annotation>
      <xsd:documentation xml:lang="en">A published index whose price depends on exchange traded constituents.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="tns:Instrument">
				<xsd:sequence>
					<xsd:element minOccurs="0" name="pricing" type="tns:PricingForIndex" />
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="BasketComponent">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">A type that describes one component of an Index, Basket or Package</xsd:documentation>
    </xsd:annotation>
		<xsd:all>
			<xsd:element name="instrument" type="tns:Underlyer"></xsd:element>
			<xsd:element name="quantity" type="xsd:double"></xsd:element>
		</xsd:all>
	</xsd:complexType>
	<xsd:complexType name="Basket">
		<xsd:annotation>
			<xsd:documentation xml:lang="en">The basket composition is Numerator / (Basis * Lambda ) * (Sum (Quantity * Instrument) ); Numerator is not included in the price; default values are one.</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
      <xsd:element minOccurs="0" name="validity" type="xsd:date" />
			<xsd:element minOccurs="0" name="numerator" type="xsd:double" />
			<xsd:element minOccurs="0" name="basis" type="xsd:double">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">Basket value at the creation  of the index : it is the first factor of the denominator.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element minOccurs="0" name="lambda" type="xsd:double">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">Adjustement coefficient since the creation  of the index : it is the second factor of the denominator.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element maxOccurs="unbounded" minOccurs="0" name="basketComponent" type="tns:BasketComponent">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">Basket composition.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="Index">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">A published index whose price depends on exchange traded constituents.</xsd:documentation>
    </xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="tns:InstrumentForIndex">
				<xsd:sequence>
          <xsd:element minOccurs="0" name="resetComposition" type="xsd:boolean" />
          <xsd:element maxOccurs="unbounded" minOccurs="0" name="basket" type="tns:Basket" >
          <xsd:annotation>
            <xsd:documentation xml:lang="en">Describes each of the components of the basket.</xsd:documentation>
          </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="basketType" type="tns:BasketType" >
          <xsd:annotation>
            <xsd:documentation xml:lang="en">A type describing the underlyer features of a basket swap. Each of the basket constituents are described through an embedded component, the basketConstituentsType.</xsd:documentation>
          </xsd:annotation>
          </xsd:element>
					<xsd:element minOccurs="0" name="recordDate" type="tns:DateIncludedExcluded">
						<xsd:annotation>
							<xsd:documentation xml:lang="en">Specifies if the Dividend Record Date is in the American or European style. Only Excluded (European) is implemented.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element minOccurs="0" name="beta" type="xsd:double" />
					<xsd:element minOccurs="0" name="PMD_CONVERSION" type="xsd:short" />
					<xsd:element minOccurs="0" name="PMD_TYPEPANIER" type="xsd:short" />
					<xsd:element minOccurs="0" name="PMD_CALCULVOL" type="xsd:short" />
					<xsd:element minOccurs="0" name="PMD_VALEURPANIER" type="xsd:double" />
					<xsd:element minOccurs="0" name="FixingMultiDevs" type="tns:FixingMultiDevs" />
					<xsd:element minOccurs="0" name="Devise_Pivots" type="tns:DevisePivots" />
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
  <xsd:complexType name="IndexModelData">
    <xsd:annotation>
      <xsd:documentation xml:lang="en"></xsd:documentation>
    </xsd:annotation>
  </xsd:complexType>
  <!-- should be abstract, but not supported by Websphere -->
  <xsd:element name="indexModelData" type="tns:IndexModelData" />
  <!-- should be abstract, but not supported by Websphere -->
	<xsd:complexType name="IndexModelContainer">
		<xsd:sequence>
			<xsd:element ref="tns:indexModelData" />
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="IndexWithModel">
		<xsd:complexContent>
			<xsd:extension base="tns:Index">
				<xsd:sequence>
					<xsd:element minOccurs="0" name="indexModelContainer" type="tns:IndexModelContainer" />
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="RealExpiryType">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">A list of expiry dates. Type may be used for listed market definitions.</xsd:documentation>
    </xsd:annotation>
		<xsd:sequence>
			<xsd:element name="expiry" type="xsd:date"></xsd:element>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="OptionType">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">Quick description of some parameters of an option to be used in a Listed Market Definition. It contains for example strike/expiry but does not contain the underlying.</xsd:documentation>
    </xsd:annotation>
		<xsd:all>
			<xsd:element minOccurs="0" name="ricPut" type="xsd:string"></xsd:element>
			<xsd:element minOccurs="0" name="ricPutOtherReferences" type="tns:Identifier"/>
			<xsd:element name="strike" type="xsd:double"></xsd:element>
			<xsd:element name="expiry" type="xsd:date"></xsd:element>
			<xsd:element minOccurs="0" name="quotity" type="xsd:double"></xsd:element>
			<xsd:element minOccurs="0" name="ricCall" type="xsd:string"></xsd:element>
			<xsd:element minOccurs="0" name="ricCallOtherReferences" type="tns:Identifier"/>
		</xsd:all>
		<xsd:attribute name="type" type="xsd:string" use="required"></xsd:attribute>
	</xsd:complexType>
	<xsd:complexType name="OptionsType">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">Description of parameters of Listed Options in a Listed Market.</xsd:documentation>
    </xsd:annotation>
		<xsd:sequence>
			<xsd:element maxOccurs="unbounded" name="option" type="tns:OptionType" />
			<xsd:element minOccurs="0" name="ric" type="xsd:string" />
			<xsd:element minOccurs="0" name="underlying" type="xsd:string" />
			<xsd:element minOccurs="0" name="cycle">
				<xsd:simpleType>
					<xsd:restriction base="xsd:string">
						<xsd:maxLength value="1"></xsd:maxLength>
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:element>
			<xsd:element minOccurs="0" name="quota" type="xsd:double" />
			<xsd:element minOccurs="0" name="externalReference" type="xsd:string" />
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="UnderlyingType">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">List of underlyings of options in a Listed Market definition.</xsd:documentation>
    </xsd:annotation>
		<xsd:sequence>
			<xsd:element name="xtra" type="xsd:string"></xsd:element>
		</xsd:sequence>
		<xsd:attribute name="key" type="xsd:string" use="required"></xsd:attribute>
		<xsd:attribute name="type" type="xsd:string" use="required"></xsd:attribute>
	</xsd:complexType>
	<xsd:complexType name="SupportType">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">List of the "Support" items in a Listed Market Definition.

A support is uniquely identified by the (series, version) couple.

Each support contains the corresponding option definitions as defined in "OptionsType".</xsd:documentation>
    </xsd:annotation>
		<xsd:sequence>
			<xsd:element name="options" type="tns:OptionsType"></xsd:element>
			<xsd:element name="underlying" type="tns:UnderlyingType"></xsd:element>
		</xsd:sequence>
		<xsd:attribute name="series" type="xsd:string" use="required"></xsd:attribute>
		<xsd:attribute name="versionNumber" type="xsd:int" use="optional"></xsd:attribute>
	</xsd:complexType>
	<xsd:complexType name="MarketType">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">The definition of a Listed Market in Sophis, with the list of expiries, the list of Support and their options, etc.</xsd:documentation>
    </xsd:annotation>
		<xsd:sequence>
			<xsd:element maxOccurs="unbounded" name="realExpiry" type="tns:RealExpiryType"></xsd:element>
			<xsd:element maxOccurs="unbounded" name="support" type="tns:SupportType"></xsd:element>
		</xsd:sequence>
		<xsd:attribute name="id" type="xsd:string" use="required"></xsd:attribute>
		<xsd:attribute name="alternativeId" type="xsd:string" use="optional"></xsd:attribute>
		<xsd:attribute name="source" type="xsd:string" use="optional" default="sophis">
			<xsd:annotation>
				<xsd:documentation xml:lang="en">Used to specify the provider of the market name.  If the
					default value "sophis" is used, the market name is matched
					directly against market names in Risque.  Otherwise,
					transcodification data is used to find the appropriate
					market.</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
	</xsd:complexType>
	<xsd:complexType name="MarketsType">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">A list  of Listed Markets within Sophis.</xsd:documentation>
    </xsd:annotation>
		<xsd:sequence>
			<xsd:element maxOccurs="1" name="market" type="tns:MarketType"></xsd:element>
		</xsd:sequence>
	</xsd:complexType>

	<xsd:complexType name="Share">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">A reference to a share</xsd:documentation>
    </xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="tns:Instrument">
				<xsd:sequence>
				    <xsd:element minOccurs="0" name="pricing" type="tns:Pricing" />
					<xsd:element minOccurs="0" name="accountingRef" type="xsd:gMonthDay">
						<xsd:annotation>
							<xsd:documentation xml:lang="en">Used for dilutive warrants or convertible bonds to know if case of exercise or conversion  when the new share becomes an old share.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element minOccurs="0" name="tradingUnit" type="xsd:double">
						<xsd:annotation>
							<xsd:documentation xml:lang="en">The purchase quantity must be a mutltiple of the trading unit,the default value of which is one.This is used for baskets which contain the share in question.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element minOccurs="0" name="country" type="tns:Currency">
						<xsd:annotation>
							<xsd:documentation xml:lang="en">This is the country currency of the share : FRF is for France</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element minOccurs="0" name="recordDate" type="tns:DateIncludedExcluded">
						<xsd:annotation>
							<xsd:documentation xml:lang="en">Specifies if the Dividend Record Date is in the American or European style. Only Excluded (European) is implemented.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element minOccurs="0" name="beta" type="xsd:double" />
					<xsd:element minOccurs="0" name="PMD_CONVERSION" type="xsd:short" />
					<xsd:element minOccurs="0" name="PMD_TYPEPANIER" type="xsd:short" />
					<xsd:element minOccurs="0" name="PMD_CALCULVOL" type="xsd:short" />
					<xsd:element minOccurs="0" name="PMD_VALEURPANIER" type="xsd:double" />
					<xsd:element minOccurs="0" name="FixingMultiDevs" type="tns:FixingMultiDevs" />
					<xsd:element minOccurs="0" name="Devise_Pivots" type="tns:DevisePivots" />
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>

  <xsd:complexType name="InflationIndex">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">A reference to an inflation index</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="tns:Instrument">
        <xsd:sequence>
          <xsd:element minOccurs="0" name="pricing" type="tns:Pricing" />
          <xsd:element minOccurs="0" name="decimals" type="xsd:short" />
          <xsd:element minOccurs="0" name="seasonAdjusted" type="xsd:boolean" />
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>

	<xsd:complexType name="FixingMultiDevs">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">List of observation dates and values in the "New Multi-Underlying" Option mask</xsd:documentation>
    </xsd:annotation>
		<xsd:sequence>
			<xsd:element maxOccurs="unbounded" minOccurs="0" name="FixingMultiDev" type="tns:FixingMultiDev" />
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="DevisePivots">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">A list of pivot currencies.</xsd:documentation>
    </xsd:annotation>
		<xsd:sequence>
			<xsd:element maxOccurs="unbounded" minOccurs="0" name="Devise_Pivot" type="tns:DevisePivot" />
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="FixingMultiDev">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">A line in the list of observation dates and values in the "New Multi-Underlying" Option mask</xsd:documentation>
    </xsd:annotation>
		<xsd:sequence>
		<xsd:element minOccurs="0" name="DATEFIXING" type="xsd:date"/>
		<xsd:element minOccurs="0" name="SICOSJ" type="tns:SICOSJ"/>
		<xsd:element minOccurs="0" name="COURS" type="xsd:double"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="DevisePivot">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">A pivot currency.</xsd:documentation>
    </xsd:annotation>
		<xsd:sequence />
	</xsd:complexType>
	<xsd:complexType name="IssuerIndustry">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">The issuer industry (ex. Corporate or Sovereign). </xsd:documentation>
    </xsd:annotation>
		<xsd:simpleContent>
			<xsd:extension base="xsd:string">
				<xsd:attribute name="referenceType" type="xsd:string" />
			</xsd:extension>
		</xsd:simpleContent>
	</xsd:complexType>
	<xsd:complexType name="IssuerTransactionType">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">The type of master confirmation executed between the parties.</xsd:documentation>
    </xsd:annotation>
		<xsd:simpleContent>
			<xsd:extension base="xsd:normalizedString">
				<xsd:attribute name="transactionTypeScheme" type="xsd:anyURI" default="http://www.fpml.org/coding-scheme/credit-matrix-transaction-type-2-0"/>
			</xsd:extension>
		</xsd:simpleContent>
	</xsd:complexType>
	<xsd:complexType name="Issuer">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">The corporate or sovereign entity on which you are buying or selling protection and any successor that assumes all or substantially all of its contractual and other obligations. It is vital to use the correct legal name of the entity and to be careful not to choose a subsidiary if you really want to trade protection on a parent company. Please note, Reference Entities cannot be senior or subordinated. It is the obligations of the Reference Entities that can be senior or subordinated. ISDA 2003 Term: Reference Entity</xsd:documentation>
    </xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="tns:Instrument">
			<xsd:sequence>
				<xsd:element minOccurs="0" name="pricing" type="tns:Pricing" />
				<xsd:element minOccurs="0" maxOccurs="1" name="industry" type="tns:IssuerIndustry" />
                <xsd:element minOccurs="0" maxOccurs="1" name="transactionType" type="tns:IssuerTransactionType">
                  <xsd:annotation>
                    <xsd:documentation xml:lang="en">Deprecated</xsd:documentation>
                  </xsd:annotation>
                </xsd:element>
				<xsd:element minOccurs="0" maxOccurs="1" name="quotationType" type="xsd:boolean"/>
				<xsd:element minOccurs="0" name="referenceShare" type="tns:Underlyer" />
				<xsd:element minOccurs="0" name="parentReferenceEntity" type="tns:Underlyer" />
			</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="BondYCIdentifier">
		<xsd:annotation>
			<xsd:documentation xml:lang="en">Bond yield curve identifier : code + currency + name</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="xsd:int" minOccurs="0"/>
			<xsd:element name="currency" type="tns:Currency" minOccurs="0"/>
			<xsd:element name="name" type="common:StringBounded39" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="Spread">
		<xsd:annotation>
			<xsd:documentation xml:lang="en">Specify the spread value and type; type is mandatory if value is not null.</xsd:documentation>
		</xsd:annotation>
		<xsd:all>
			<xsd:element name="value" type="xsd:double">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">Expressed in value (0.002 for 20 basis points).</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element minOccurs="0" name="type" type="tns:SpreadType" />
			<xsd:element minOccurs="0" name="instrumentReference" type="tns:Underlyer" />
		<xsd:element minOccurs="0" name="bondYieldCurve" type="tns:BondYCIdentifier"/>
			<xsd:element minOccurs="0" name="defaultEvent" type="tns:DefaultEvent"/>
      <xsd:element minOccurs="0" name="riskFree" type="xsd:boolean"/>
		</xsd:all>
	</xsd:complexType>
	<xsd:complexType name="PricingForFixedIncome">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">Information on the instrument pricing : model / family / spread / pricing type.</xsd:documentation>
    </xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="tns:Pricing">
				<xsd:sequence>
					<xsd:element minOccurs="0" name="family" type="xsd:normalizedString">
						<xsd:annotation>
							<xsd:documentation xml:lang="en">The possible fields depend on those specified in the yield curve family table and must be written in upper camel</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element minOccurs="0" name="familyOtherCurrency" type="tns:Currency"/>
					<xsd:element minOccurs="0" name="familySpread" type="xsd:double"/>
					<xsd:element minOccurs="0" name="spread" type="tns:Spread" />
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType abstract="true" name="InstrumentForFixedIncome">
		<xsd:annotation>
      <xsd:documentation xml:lang="en">Generic Instrument Type to represent Fixed Income products (bonds, swaps, ...)</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="tns:Instrument">
			   <xsd:sequence>
				<xsd:element minOccurs="0" name="pricing" type="tns:PricingForFixedIncome"/>
              </xsd:sequence>
            </xsd:extension>
       </xsd:complexContent>
    </xsd:complexType>
	<xsd:simpleType name="CouponPaid">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">Specifies whether a Coupon is Paid at the Start Date or End Date of the Interest Period</xsd:documentation>
    </xsd:annotation>
		<xsd:restriction base="xsd:normalizedString">
			<xsd:enumeration value="Afterward"></xsd:enumeration>
			<xsd:enumeration value="Beforehand"></xsd:enumeration>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="ComputationMethod">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">Specifies whether a Coupon is Paid at the Start Date or End Date of the Interest Period</xsd:documentation>
    </xsd:annotation>
		<xsd:restriction base="xsd:normalizedString">
			<xsd:enumeration value="Afterward"></xsd:enumeration>
			<xsd:enumeration value="Beforehand"></xsd:enumeration>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:complexType name="Fixed">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">Description of the Calculation Parameters of a Fixed-Interest Coupon</xsd:documentation>
    </xsd:annotation>
		<xsd:all>
			<xsd:element name="nominalRate" type="xsd:double" />
			<xsd:element name="dayCountBasis" type="tns:DayCountBasis" />
			<xsd:element minOccurs="0" name="couponPaid" type="tns:CouponPaid">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">Specify when the coupon is paid. The default is Afterward.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element minOccurs="0" name="computationMethod" type="tns:ComputationMethod">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">Specify how the coupon is calculated; the only one implemented is Afterward.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element minOccurs="0" name="interestCalculation" type="tns:YieldCalculation" />
		</xsd:all>
	</xsd:complexType>
	<xsd:complexType name="FloatingRate">
		<xsd:annotation>
			<xsd:documentation xml:lang="en">Describe a floating rate as an instrument identifier or using fpml description. The spread and someother feature are also included.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="tns:Underlyer">
        <xsd:sequence>
          <xsd:element minOccurs="0" name="currency" type="tns:Currency">
            <xsd:annotation>
              <xsd:documentation xml:lang="en">This is the quotation currency and is also used for the average price.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="floatingRateIndex" type="xsd:normalizedString">
            <xsd:annotation>
              <xsd:documentation xml:lang="en">As the index is not part of the interest rate definition, it is supposed to be the first word of the name.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="indexTenor" type="common:DateInterval" />
          <xsd:element minOccurs="0" name="floatingRateMultiplier" type="xsd:double">
            <xsd:annotation>
              <xsd:documentation xml:lang="en">Rate multiplier to apply to the floating rate.The multiplier can be a positive or negative decimal. This element should only be included if the multiplier is not equal to 1 (one).</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="spread" type="xsd:double">
            <xsd:annotation>
              <xsd:documentation xml:lang="en">The spread is a per annum rate, expressed as a decimal.For purposes of determining a calculation period amount, if positive the spread will be added to the floating rate and if negative the spread will be subtracted from the floating rate.A positive 10 basis point (0.1%) spread would be represented as 0.001.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="capitalizationMethod" type="tns:CapitalizationMethod" />
          <xsd:element minOccurs="0" name="dayCountBasis" type="tns:DayCountBasis" />
          <xsd:element minOccurs="0" name="interestCalculation" type="tns:YieldCalculation" />
          <xsd:element minOccurs="0" name="fixingDateOffset" type="common:RelativeDateOffset" />
		  <xsd:element minOccurs="0" name="tags" type="tag:Tags">
            <xsd:annotation>
              <xsd:documentation xml:lang="en">Since 7.1.0 : contains all tags applied to the instrument </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="extraFields" type="common:ExtraFields">
            <xsd:annotation>
              <xsd:documentation xml:lang="en">Since 5.3.3 : contains all extensible elements (toolkit datas for example)</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
  <xsd:complexType name="FloatingRateInstrument">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">Describe a floating rate as an instrument.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="tns:Instrument">
        <xsd:sequence>
		  <xsd:element minOccurs="0" name="pricing" type="tns:Pricing"/>
          <xsd:element minOccurs="0" name="floatingRateIndex" type="xsd:normalizedString">
            <xsd:annotation>
              <xsd:documentation xml:lang="en">As the index is not part of the interest rate definition, it is supposed to be the first word of the name.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="indexTenor" type="common:DateInterval" />
          <xsd:element minOccurs="0" name="floatingRateMultiplier" type="xsd:double">
            <xsd:annotation>
              <xsd:documentation xml:lang="en">Rate multiplier to apply to the floating rate.The multiplier can be a positive or negative decimal. This element should only be included if the multiplier is not equal to 1 (one).</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="spread" type="xsd:double">
            <xsd:annotation>
              <xsd:documentation xml:lang="en">The spread is a per annum rate, expressed as a decimal.For purposes of determining a calculation period amount, if positive the spread will be added to the floating rate and if negative the spread will be subtracted from the floating rate.A positive 10 basis point (0.1%) spread would be represented as 0.001.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="capitalizationMethod" type="tns:CapitalizationMethod" />
          <xsd:element minOccurs="0" name="dayCountBasis" type="tns:DayCountBasis" />
          <xsd:element minOccurs="0" name="interestCalculation" type="tns:YieldCalculation" />
          <xsd:element minOccurs="0" name="fixingDateOffset" type="common:RelativeDateOffset" />
          <!-- The rest of the fields in the "Rate Definition" Tab -->
          <xsd:element minOccurs="0" name="term" type="xsd:short" />
          <xsd:element minOccurs="0" name="periodType" type="xsd:short" />
          <xsd:element minOccurs="0" name="decimalUnits" type="xsd:short" />
          <xsd:element minOccurs="0" name="frequency" type="xsd:short" />
          <xsd:element minOccurs="0" name="settlementLag" type="xsd:short" />
          <xsd:element minOccurs="0" name="curveFamily" type="xsd:int" />
		  <xsd:element minOccurs="0" name="curveFamilyName" type="xsd:normalizedString" />
          <!-- The fields of the "Advanced" Tab -->
          <xsd:element minOccurs="0" name="model" type="common:StringBounded39" />
          <xsd:element minOccurs="0" name="convexityAdjustment" type="xsd:int" />
          <xsd:element minOccurs="0" name="leverage" type="xsd:double" />
          <xsd:element minOccurs="0" name="leveragingMode" type="xsd:short" />
          <xsd:element minOccurs="0" name="index" type="xsd:int" />
          <xsd:element minOccurs="0" name="indexIdentifier" type="tns:Identifier"></xsd:element>
          <xsd:element minOccurs="0" name="fixingPlace" type="xsd:int" />
          <xsd:element minOccurs="0" name="calendarPlace" type="xsd:int" />
          <xsd:element minOccurs="0" name="advancedFrequency" type="xsd:short" />
          <xsd:element minOccurs="0" name="priceIncrement" type="xsd:double" />
          <xsd:element minOccurs="0" name="inflationIndex" type="xsd:int" />
          <xsd:element minOccurs="0" name="inflationIndexIdentifier" type="tns:Identifier"></xsd:element>
          <xsd:element minOccurs="0" name="inflationRule" type="xsd:int" />
          <xsd:element minOccurs="0" name="shortIndex" type="xsd:int" />
		  <xsd:element minOccurs="0" name="indexCouponRounding" type="tns:Rounding" />
          <!-- The calculation date -->
          <xsd:element minOccurs="0" name="calculationDate" type="xsd:int" />
          <!-- The clauses -->
          <xsd:element minOccurs="0" name="clauses" type="tns:Clauses" />
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
	<xsd:complexType name="InterestType">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">Basic type of the interest coupons paid by an Instrument: fixed / floating.</xsd:documentation>
    </xsd:annotation>
    <xsd:choice>
      <xsd:annotation>
        <xsd:documentation xml:lang="en">An Interest Amount may be of Type either Fixed or Floating</xsd:documentation>
      </xsd:annotation>
			<xsd:element name="fixed" type="tns:Fixed"></xsd:element>
			<xsd:element name="floating" type="tns:FloatingRate"></xsd:element>
		</xsd:choice>
	</xsd:complexType>
	<xsd:simpleType name="StepType">
		<xsd:annotation>
			<xsd:documentation xml:lang="en">xxx</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:normalizedString">
			<xsd:enumeration value="Undefined"></xsd:enumeration>
			<xsd:enumeration value="AdditivePercentage"></xsd:enumeration>
			<xsd:enumeration value="AdditiveAmount"></xsd:enumeration>
			<xsd:enumeration value="Multiplicative"></xsd:enumeration>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:complexType name="Step">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">Calculation parameters of a step-up/down coupon structure</xsd:documentation>
    </xsd:annotation>
		<xsd:all>
			<xsd:element minOccurs="0" name="startDate">
				<xsd:complexType>
          <xsd:annotation>
            <xsd:documentation xml:lang="en">Start Date for the generation of a step-up/down coupon structure</xsd:documentation>
          </xsd:annotation>
					<xsd:simpleContent>
						<xsd:extension base="xsd:date">
							<xsd:attribute name="id" type="xsd:ID"></xsd:attribute>
						</xsd:extension>
					</xsd:simpleContent>
				</xsd:complexType>
			</xsd:element>
			<xsd:element minOccurs="0" name="endDate">
				<xsd:complexType>
          <xsd:annotation>
            <xsd:documentation xml:lang="en">End Date for the generation of a step-up/down coupon structure</xsd:documentation>
          </xsd:annotation>
					<xsd:simpleContent>
						<xsd:extension base="xsd:date">
							<xsd:attribute name="id" type="xsd:ID"></xsd:attribute>
						</xsd:extension>
					</xsd:simpleContent>
				</xsd:complexType>
			</xsd:element>
			<xsd:element minOccurs="0" name="type" type="tns:StepType" />
			<xsd:element minOccurs="0" name="value" type="xsd:double" />
		</xsd:all>
	</xsd:complexType>
	<xsd:complexType name="CashFlowGeneration">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">Contains the way the cash of the IR instrument are generated.</xsd:documentation>
    </xsd:annotation>
		<xsd:all>
			<xsd:element name="periodicityType" type="tns:PeriodicityType">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">The default for a bond is the one defined in the market</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element minOccurs="0" name="issueDate">
				<xsd:complexType>
          <xsd:annotation>
            <xsd:documentation xml:lang="en">The date on which a bond is issued</xsd:documentation>
          </xsd:annotation>
					<xsd:simpleContent>
						<xsd:extension base="xsd:date">
							<xsd:attribute name="id" type="xsd:ID"></xsd:attribute>
						</xsd:extension>
					</xsd:simpleContent>
				</xsd:complexType>
			</xsd:element>
      <xsd:element minOccurs="0" name="firstSettlementDate" type="xsd:date" />
			<xsd:element minOccurs="0" name="redemptionDate" type="xsd:date" />
      <xsd:element minOccurs="0" name="expectedMaturityDate" type="xsd:date" />
			<xsd:element minOccurs="0" name="yield" type="tns:YieldCalculation" />
			<xsd:element minOccurs="0" name="firstCouponDate" type="xsd:date" />
			<xsd:element minOccurs="0" name="forelastCouponDate" type="xsd:date" />
			<xsd:element minOccurs="0" name="couponAdjustment" type="xsd:normalizedString" />
			<xsd:element minOccurs="0" name="adjustmentType" type="tns:HolidayAdjustementEnum" />
			<xsd:element minOccurs="0" name="step" type="tns:Step" />
			<xsd:element minOccurs="0" name="ABSCashFlowGeneration" type="tns:ABSCashFlowGeneration" />
		</xsd:all>
	</xsd:complexType>
	<xsd:complexType name="Seniority">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">The repayment precedence of a debt instrument</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="tns:Identifier">
        <xsd:sequence>
			<xsd:element minOccurs="0" name="name" type="xsd:normalizedString">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">The possible fields depend on those specified in the Seniority table and must be written in upper camel</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="SeniorityString">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">SOPHIS name of a Seniority</xsd:documentation>
    </xsd:annotation>
		<xsd:simpleContent>
			<xsd:extension base="xsd:string">
				<xsd:attribute name="referenceType" type="xsd:string" />
			</xsd:extension>
		</xsd:simpleContent>
	</xsd:complexType>
  <xsd:complexType name="SRO">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">SRO ISIN</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="applicable" type="xsd:boolean"/>
      <xsd:element name="ISIN" type="xsd:token"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="FixedIncome">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">Generic Instrument Type to represent Fixed Income products (bonds, swaps, ...)</xsd:documentation>
    </xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="tns:InstrumentForFixedIncome">
				<xsd:sequence>
          <xsd:element name="interestType" type="tns:InterestType">
          <xsd:annotation>
            <xsd:documentation xml:lang="en">Type of the insterest : fixed / floating. </xsd:documentation>
          </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="cashFlowGeneration" type="tns:CashFlowGeneration">
          <xsd:annotation>
            <xsd:documentation xml:lang="en">Contains the way the cash of the IR instrument are generated. </xsd:documentation>
          </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="seniority" type="tns:Seniority">
          <xsd:annotation>
            <xsd:documentation xml:lang="en">Contains the seniority of the IR instrument (ex. : Snrfor). </xsd:documentation>
          </xsd:annotation>
          </xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="DebtInstrument">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">Bullet Debt where the interest is paid either at begin of period (discount debt) or end of period (compound debt). Also called NCD (Negotiable Credit Debt)</xsd:documentation>
    </xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="tns:FixedIncome">
				<xsd:sequence>
          <xsd:element minOccurs="0" name="convention" type="xsd:int" >
          <xsd:annotation>
            <xsd:documentation xml:lang="en">Convention associated to the instrument (Collateral Management), default value = 0. </xsd:documentation>
          </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="couponPaid" type="tns:CouponPaid">
            <xsd:annotation>
              <xsd:documentation xml:lang="en">Specify when the coupon is paid. The default is Afterward.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
					<xsd:element minOccurs="0" name="RedemptionDate" type="tns:DateIncludedExcluded">
						<xsd:annotation>
							<xsd:documentation xml:lang="en">Specify if the coupon is paid at the end of date or not. It is essentially used when the instrument is an element of a package to price the package.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>

    <xsd:simpleType name="CashFlowsPaid">
        <xsd:restriction base="xsd:token">
            <xsd:enumeration value="Unknown"/>
            <xsd:enumeration value="To The Cashpool"/>
            <xsd:enumeration value="Directly To The Counterparty"/>
        </xsd:restriction>
    </xsd:simpleType>

    <xsd:simpleType name="FrequencyIs">
        <xsd:restriction base="xsd:token">
            <xsd:enumeration value="Unknown"/>
            <xsd:enumeration value="Payment Frequency"/>
            <xsd:enumeration value="Reset Fixing Frequency"/>
        </xsd:restriction>
    </xsd:simpleType>

    <xsd:simpleType name="Unrealized">
        <xsd:restriction base="xsd:token">
            <xsd:enumeration value="Unknown"/>
            <xsd:enumeration value="Paid at Payment Freq"/>
            <xsd:enumeration value="Never Paid"/>
            <xsd:enumeration value="Daily Reset Paid At Payment Freq"/>
            <xsd:enumeration value="Daily"/>
        </xsd:restriction>
    </xsd:simpleType>

    <xsd:simpleType name="Realized">
        <xsd:restriction base="xsd:token">
            <xsd:enumeration value="Unknown"/>
            <xsd:enumeration value="Immediately"/>
            <xsd:enumeration value="At Reset (CFD Rate)"/>
            <xsd:enumeration value="At Reset (Cashpool Rate)"/>
            <xsd:enumeration value="At Reset (No Renumeration)"/>
        </xsd:restriction>
    </xsd:simpleType>

    <xsd:simpleType name="Dividend">
        <xsd:restriction base="xsd:token">
            <xsd:enumeration value="Unknown"/>
            <xsd:enumeration value="Immediately"/>
            <xsd:enumeration value="At Reset (CFD Rate)"/>
            <xsd:enumeration value="At Reset (Cashpool Rate)"/>
            <xsd:enumeration value="At Reset (No Renumeration)"/>
        </xsd:restriction>
    </xsd:simpleType>

    <xsd:simpleType name="TransactionFees">
        <xsd:restriction base="xsd:token">
            <xsd:enumeration value="Unknown"/>
            <xsd:enumeration value="Upfront Payment"/>
            <xsd:enumeration value="In the average price and notional"/>
            <xsd:enumeration value="In the average price only"/>
        </xsd:restriction>
    </xsd:simpleType>

 		<xsd:simpleType name="RealizedPaymentType">
        <xsd:restriction base="xsd:token">
            <xsd:enumeration value="Unknown"/>
            <xsd:enumeration value="Custom Lag"/>
						<xsd:enumeration value="Underlying Market Lag"/>
        </xsd:restriction>
    </xsd:simpleType>

    <xsd:complexType name="RealizedPaymentOffset">
        <xsd:sequence>
            <xsd:element name="paymentType" type="tns:RealizedPaymentType"/>
            <xsd:element minOccurs="0" name="paymentOffset" type="xsd:int"/>
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name="CfdInstrument">
        <xsd:annotation>
            <xsd:documentation xml:lang="en">"Contract for Difference instrument definition"</xsd:documentation>
        </xsd:annotation>
        <xsd:complexContent>
			<xsd:extension base="tns:Instrument">
            <xsd:sequence>
			    <xsd:element minOccurs="0" name="pricing" type="tns:Pricing" />
                <xsd:element minOccurs="0" name="cashFlowsPaid" type="tns:CashFlowsPaid"/>
                <xsd:element minOccurs="0" name="irIndex" type="tns:Underlyer"/>
                <xsd:element minOccurs="0" name="frequency" type="xsd:normalizedString"/>
                <xsd:element minOccurs="0" name="frequencyIs" type="tns:FrequencyIs"/>
                <xsd:element minOccurs="0" name="unrealized" type="tns:Unrealized"/>
                <xsd:element minOccurs="0" name="realized" type="tns:Realized"/>
                <xsd:element minOccurs="0" name="dividend" type="tns:Dividend"/>
                <xsd:element minOccurs="0" name="transactionFees" type="tns:TransactionFees"/>
                <xsd:element minOccurs="0" name="realizedPaymentOffset" type="tns:RealizedPaymentOffset"/>
                <xsd:element minOccurs="0" name="dividendPaymentOffset" type="xsd:int"/>
                <!--<xsd:element minOccurs="0" name="comment" type="xsd:normalizedString"/>-->
            </xsd:sequence>
			</xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>

	<xsd:complexType name="PricingForBond">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">Assumptions and Models applied for the Theoretical Valuation of a Bond</xsd:documentation>
    </xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="tns:Pricing">
				<xsd:sequence>
					<xsd:element minOccurs="0" name="family" type="xsd:normalizedString">
						<xsd:annotation>
							<xsd:documentation xml:lang="en">The possible fields depend on those specified in the yield curve family table and must be written in upper camel</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element minOccurs="0" name="familyOtherCurrency" type="tns:Currency"/>
					<xsd:element minOccurs="0" name="familySpread" type="xsd:double"/>
					<xsd:element minOccurs="0" name="spread" type="tns:Spread" />
		          <xsd:element minOccurs="0" name="pricingType" type="tns:PricingTypeEnum"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType abstract="true" name="InstrumentForBond">
		<xsd:annotation>
      <xsd:documentation xml:lang="en">An exchange traded bond</xsd:documentation>
			<xsd:documentation xml:lang="en">market is now a MarketForBond.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="tns:Instrument">
				<xsd:sequence>
					<xsd:element minOccurs="0" name="pricing" type="tns:PricingForBond" />
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:simpleType name="TrancheType">
		<xsd:annotation>
			<xsd:documentation xml:lang="en">Explain how to calculate the number of bonds by tranche.</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:normalizedString">
			<xsd:enumeration value="EqualSeries"></xsd:enumeration>
			<xsd:enumeration value="EqualAnnuities"></xsd:enumeration>
			<xsd:enumeration value="Notional"></xsd:enumeration>
			<xsd:enumeration value="FloatingNotional"></xsd:enumeration>
      <xsd:enumeration value="NominalRevaluation"></xsd:enumeration>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="CancellationMode">
		<xsd:annotation>
			<xsd:documentation xml:lang="en">Explain on which tranche to cancel redeemed or converted bond.</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:normalizedString">
			<xsd:enumeration value="Equal" />
			<xsd:enumeration value="Last" />
			<xsd:enumeration value="First" />
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:complexType name="Tranche">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">The mortgage obligation tranche that is subject to the derivative transaction.</xsd:documentation>
    </xsd:annotation>
		<xsd:all>
			<xsd:element minOccurs="0" name="count" type="xsd:int" />
			<xsd:element minOccurs="0" name="percentage" type="xsd:double" />
			<xsd:element minOccurs="0" name="type" type="tns:TrancheType" />
			<xsd:element minOccurs="0" name="cancellationMode" type="tns:CancellationMode" />
		</xsd:all>
	</xsd:complexType>
	<xsd:complexType name="Redemption">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">The redemptions of a Fixed Income instrument counted as number of securities redeemed or canceled</xsd:documentation>
    </xsd:annotation>
		<xsd:all>
			<xsd:element minOccurs="0" name="value" type="xsd:double"></xsd:element>
			<xsd:element minOccurs="0" name="redeemedCount" type="xsd:unsignedLong"></xsd:element>
			<xsd:element minOccurs="0" name="cancelledCount" type="xsd:unsignedLong"></xsd:element>
		</xsd:all>
	</xsd:complexType>
  <xsd:simpleType name="FlowType">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">Explain the type of the flow used in the cash flow redemption of Bonds.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:normalizedString">
      <xsd:enumeration value="Fixed" />
      <xsd:enumeration value="Floating" />
      <xsd:enumeration value="Redemption" />
      <xsd:enumeration value="Floating Swap" />
      <xsd:enumeration value="Capital" />
      <xsd:enumeration value="Principal Revaluation" />
      <xsd:enumeration value="Unknown" />
    </xsd:restriction>
  </xsd:simpleType>
	<xsd:complexType name="CashFlow">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">A type defining a single cashflow of an Instrument.</xsd:documentation>
    </xsd:annotation>
		<xsd:all>
			<xsd:element minOccurs="0" name="date" type="xsd:date"></xsd:element>
			<xsd:element minOccurs="0" name="paymentDate" type="xsd:date"></xsd:element>
			<xsd:element minOccurs="0" name="exCouponDate" type="xsd:date"></xsd:element>
			<xsd:element minOccurs="0" name="coupon" type="xsd:double"></xsd:element>
			<xsd:element minOccurs="0" name="couponAmount" type="xsd:double"></xsd:element>
			<xsd:element minOccurs="0" name="notional" type="xsd:double"></xsd:element>
			<xsd:element minOccurs="0" name="redemption" type="tns:Redemption"></xsd:element>
			<xsd:element minOccurs="0" name="poolFactor" type="xsd:double"></xsd:element>
			<xsd:element minOccurs="0" name="ABSNotionalRepayment" type="xsd:double"></xsd:element>
      <xsd:element minOccurs="0" name="currentBalance" type="xsd:double"></xsd:element>
      <xsd:element minOccurs="0" name="interestShortfall" type="xsd:double"></xsd:element>
			<xsd:element minOccurs="0" name="forexNotional" type="xsd:double"></xsd:element>
      <xsd:element minOccurs="0" name="flowType" type="tns:FlowType"></xsd:element>
		</xsd:all>
	</xsd:complexType>
	<xsd:complexType name="CashFlows">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">A type defining the cashflow representation of an Instrument.</xsd:documentation>
    </xsd:annotation>
		<xsd:sequence>
			<xsd:element maxOccurs="unbounded" minOccurs="0" name="cashFlow" type="tns:CashFlow"></xsd:element>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="ABSCashFlow">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">Projected Pool Factor or Repayment of an ABS. This is used for specific CPR models per maturity</xsd:documentation>
    </xsd:annotation>
	   <xsd:all>
	     <xsd:element minOccurs="1" name="date" type="xsd:date"></xsd:element>
	     <xsd:element minOccurs="0" name="poolFactor" type="xsd:double"></xsd:element>
	     <xsd:element minOccurs="0" name="ABSNotionalRepayment" type="xsd:double"></xsd:element>
	  </xsd:all>
	</xsd:complexType>
	<xsd:complexType name="ABSCashFlowGeneration">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">List of Projected Pool Factors or Repayments of an ABS. This is used for specific CPR models per maturity</xsd:documentation>
    </xsd:annotation>
		<xsd:sequence>
	    	<xsd:element minOccurs="1" maxOccurs="unbounded" name="ABSCashFlow" type="tns:ABSCashFlow"></xsd:element>
		</xsd:sequence>
	  </xsd:complexType>
	  <xsd:simpleType name="PricingMethodType">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">Model to estimate the CPR (Constant Prepayment Rate) from the WAM (Weighted Asset Maturity) or inversely for an ABS</xsd:documentation>
    </xsd:annotation>
	    <xsd:restriction base="xsd:normalizedString">
      <xsd:enumeration value="XXX"/>
			<xsd:enumeration value="Prepayment"/>
			<xsd:enumeration value="WAM"/>
			<xsd:enumeration value="WAM implied CPR"/>
	      <xsd:enumeration value="WAM greeks CPR"/>
	    </xsd:restriction>
	  </xsd:simpleType>
	<xsd:simpleType name="PrepaymentTypeNames">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">Model to estimate future Prepayments of an ABS</xsd:documentation>
    </xsd:annotation>
	    <xsd:restriction base="xsd:normalizedString">
	      <xsd:enumeration value="ABS"/>
	      <xsd:enumeration value="CPR"/>
	      <xsd:enumeration value="Custom"/>
	      <xsd:enumeration value="HEP"/>
	      <xsd:enumeration value="MHP"/>
	      <xsd:enumeration value="PSA"/>
	      <xsd:enumeration value="SMM"/>
	      <xsd:enumeration value="Cash Flow" />
        <xsd:enumeration value="CPR Interp."/>
        <xsd:enumeration value="CPB"/>
        <xsd:enumeration value="HDC"/>
        <xsd:enumeration value="HPC"/>
        <xsd:enumeration value="Intex Custom"/>
        <xsd:enumeration value="Japanese PSA"/>
        <xsd:enumeration value="ORIGAGGSMM"/>
        <xsd:enumeration value="ORIGCPR"/>
        <xsd:enumeration value="ORIGSMM"/>
        <xsd:enumeration value="ORIGSPR"/>
        <xsd:enumeration value="PPC"/>
        <xsd:enumeration value="SPR"/>
        <xsd:enumeration value="CPY"/>
	    </xsd:restriction>
	  </xsd:simpleType>
	<xsd:complexType name="CPRInterpolation">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">A Projected Pool Factor or Repayment of an ABS. This is used for the CPR Type "CPR Interpolated"</xsd:documentation>
    </xsd:annotation>
		<xsd:all>
			<xsd:element name="baseCPR" type="xsd:double"></xsd:element>
			<xsd:element name="date" type="xsd:date"></xsd:element>
			<xsd:element name="poolFactor" type="xsd:double"></xsd:element>
		</xsd:all>
	</xsd:complexType>
	<xsd:complexType name="CPRInterpolations">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">List of Projected Pool Factors or Repayments of an ABS. This is used for the CPR Type "CPR Interpolated"</xsd:documentation>
    </xsd:annotation>
		<xsd:sequence>
			<xsd:element maxOccurs="unbounded" minOccurs="0" name="CPRInterpolation" type="tns:CPRInterpolation"></xsd:element>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="ABSPricingType">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">List of parameters governing ABS-specific Calculations and Indicators</xsd:documentation>
    </xsd:annotation>
		<xsd:all>
			<xsd:element minOccurs="0" name="pricingMethod" type="tns:PricingMethodType"></xsd:element>
			<xsd:element minOccurs="0" name="prepaymentType" type="tns:PrepaymentTypeNames"></xsd:element>
			<xsd:element minOccurs="0" name="prepaymentSpeed" type="xsd:double"></xsd:element>
			<xsd:element minOccurs="0" name="WAM" type="xsd:date"></xsd:element>
			<xsd:element minOccurs="0" name="projectedCashFlows" type="tns:CashFlows"></xsd:element>
			<xsd:element minOccurs="0" name="CPRInterpolations" type="tns:CPRInterpolations"></xsd:element>
		</xsd:all>
	</xsd:complexType>
	<xsd:complexType name="TermLoanPrepayment">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">A prepayment of the Notional that occured in a Term Loan</xsd:documentation>
    </xsd:annotation>
		<xsd:all>
			<xsd:element name="date" type="xsd:date"></xsd:element>
			<xsd:element name="prepayment" type="xsd:double"></xsd:element>
		</xsd:all>
	</xsd:complexType>
	<xsd:complexType name="TermLoanPrepayments">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">List of the Notional Prepayments of a Loan</xsd:documentation>
    </xsd:annotation>
		<xsd:sequence>
			<xsd:element maxOccurs="unbounded" minOccurs="0" name="TermLoanPrepayment" type="tns:TermLoanPrepayment"></xsd:element>
		</xsd:sequence>
	</xsd:complexType>
  <xsd:complexType name="InflationParameters">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">The list of parameters that link an Instrument to one or more Inflation Indices</xsd:documentation>
    </xsd:annotation>
    <xsd:all>
      <xsd:element minOccurs="0" name="inflationIndex" type="xsd:int"></xsd:element>
      <xsd:element minOccurs="0" name="inflationIndexIdentifier" type="tns:Identifier"></xsd:element>
      <xsd:element minOccurs="0" name="inflationRule" type="xsd:int"></xsd:element>
      <xsd:element minOccurs="0" name="inflationRefDate" type="xsd:date"></xsd:element>
    </xsd:all>
  </xsd:complexType>
  <xsd:simpleType name="AccruedCoupon">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">Specifies whether the Accrued Coupon is calculated until Trade Date or Settlement Date of a Transaction</xsd:documentation>
    </xsd:annotation>
		<xsd:restriction base="xsd:normalizedString">
			<xsd:enumeration value="OnSettlementDate"></xsd:enumeration>
			<xsd:enumeration value="OnTradeDate"></xsd:enumeration>
		</xsd:restriction>
	</xsd:simpleType>
  <xsd:simpleType name="UseCalendarChoice">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">Specifies the choice of calendar which is used</xsd:documentation>
    </xsd:annotation>
		<xsd:restriction base="xsd:normalizedString">
			<xsd:enumeration value="Currency + Market place"></xsd:enumeration>
			<xsd:enumeration value="Same as Currency"></xsd:enumeration>
			<xsd:enumeration value="Custom Calendar"></xsd:enumeration>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:complexType name="Bond">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">An exchange traded bond</xsd:documentation>
    </xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="tns:InstrumentForBond">
				<xsd:sequence>
					<xsd:element minOccurs="0" name="useCalendarChoice" type="tns:UseCalendarChoice" />
					<xsd:element minOccurs="0" name="calendarsList" type="tns:CalendarsList" />
					<xsd:element minOccurs="0" name="notionalCurrency" type="tns:Currency" />
					<xsd:element minOccurs="0" name="settlementCurrency" type="tns:Currency" />
					<xsd:element minOccurs="0" name="forexFixingType" type="tns:FixingType" />
					<xsd:element minOccurs="0" name="couponSettlementLag" type="xsd:int"/>
					<xsd:element minOccurs="0" name="couponSettlementLagType" type="tns:SettlementLagType" />
					<xsd:element minOccurs="0" name="floatingComponent" type="tns:SwapStream" />
					<xsd:element minOccurs="0" name="ABSPricing" type="tns:ABSPricingType" />
					<xsd:element minOccurs="0" name="inflationParameters" type="tns:InflationParameters" />
					<xsd:element minOccurs="0" name="TermLoanParticipation" type="tns:TermLoanParticipation" />
					<xsd:element minOccurs="0" name="TermLoanCollateralType" type="tns:TermLoanCollateralType" />
					<xsd:element minOccurs="0" name="TermLoanCollateralInstrument" type="tns:Identifier"/>
					<xsd:element minOccurs="0" name="TermLoanTermsheet" type="xsd:string" />
					<xsd:element minOccurs="0" name="TermLoanCovenant" type="xsd:string" />
					<xsd:element minOccurs="0" name="TermLoanPrepayments" type="tns:TermLoanPrepayments" />
					<xsd:element minOccurs="0" name="interestType" type="tns:InterestType" />
					<xsd:element minOccurs="0" name="cashFlowGeneration" type="tns:CashFlowGeneration" />
					<xsd:element minOccurs="0" name="seniority" type="tns:Seniority" />
				    <xsd:element minOccurs="0" name="accruedCoupon" type="tns:AccruedCoupon" />
				    <xsd:element minOccurs="0" name="tranche" type="tns:Tranche" />
				    <xsd:element minOccurs="0" name="cashFlows" type="tns:CashFlows" />
				    <xsd:element minOccurs="0" name="CancelledCount" type="xsd:unsignedLong" />
					<xsd:element minOccurs="0" name="IsRangeAccrual" type="xsd:boolean" />
					<xsd:element minOccurs="0" name="rangeAccrual" type="tns:RangeAccrual" />
          <xsd:element minOccurs="0" name="exoticType" type="tns:ExoticType" />
          <xsd:element minOccurs="0" name="exoticSpread" type="tns:ExoticSpread" />
          <xsd:element minOccurs="0" name="ABSData" type="tns:ABSDataType"/>
          <xsd:element minOccurs="0" name="ABSParameters" type="tns:ABSParametersList"/>
          <xsd:element minOccurs="0" name="ABSCashFlowScenarioList" type="tns:ABSCashFlowScenarioList"/>
          <xsd:element minOccurs="0" name="ABSTrancheList" type="tns:ABSTrancheList"/>
					<xsd:element minOccurs="0" name="minimumPiece" type="xsd:double" />
					<xsd:element minOccurs="0" name="lowestIncrement" type="xsd:double" />
		  <xsd:choice minOccurs="0" maxOccurs="1" >
		      <xsd:element name="calledDate" type="xsd:int" />
		      <xsd:element name="calledAbsoluteDate" type="xsd:date" />
		  </xsd:choice>
		  <xsd:element minOccurs="0" name="calledPrice" type="xsd:double" />
		  <xsd:element minOccurs="0" name="calledPriceInPercent" type="xsd:boolean" />
					<xsd:element minOccurs="0" name="guarantor" type="tns:Underlyer" />
					<xsd:element minOccurs="0" name="referenceTreasury" type="tns:Underlyer" />
					<xsd:element minOccurs="0" name="roundRule" type="tns:BondRoundingRule" />
					<xsd:element minOccurs="0" name="roundType" type="tns:BondRoundingType" />
					<xsd:element minOccurs="0" name="roundAmount" type="xsd:double" />
					<xsd:element minOccurs="0" name="fixedLastCustomIndex" type="xsd:int"/>
					<xsd:element minOccurs="0" name="floatingLastCustomIndex" type="xsd:int"/>
					<xsd:element minOccurs="0" name="clauses" type="tns:Clauses" />
        </xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
  <xsd:complexType name="ABSTrancheList">
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="ABSTranche" type="tns:ABSTranche">
        <xsd:annotation>
          <xsd:documentation xml:lang="en">List of tranches of an ABS Deal.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="ABSTranche">
    <xsd:all>
      <xsd:element minOccurs="0" name="trancheId" type="tns:Underlyer" />
    </xsd:all>
  </xsd:complexType>
  <xsd:complexType name="ABSCashFlowScenario">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="scenario" type="xsd:normalizedString" />
      <xsd:element minOccurs="0" name="cashFlows" type="tns:CashFlows">
        <xsd:annotation>
          <xsd:documentation xml:lang="en">Cash flows of an ABS sceanario.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="ABSCashFlowScenarioList">
    <xsd:annotation>
      <xsd:documentation xml:lang="en"> List of cashflow scenarii of an ABS.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="scenarioCashFlows" type="tns:ABSCashFlowScenario"></xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="ABSBondCashFlow">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">A party's ABS Bond cash flows.</xsd:documentation>
      <xsd:documentation xml:lang="en">List of cash flows by scenario.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" maxOccurs="1" name="identifier" type="tns:Identifier">
        <xsd:annotation>
          <xsd:documentation xml:lang="en">Identification of the ABS bond, using public and/or private identifiers.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="ABSCashFlowScenarioList" type="tns:ABSCashFlowScenarioList">
        <xsd:annotation>
          <xsd:documentation xml:lang="en">Cash Flow scenario list for one ABS Bond.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="ABSParameter">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="name"  type="xsd:normalizedString" />
      <xsd:element minOccurs="0" name="type"  type="xsd:normalizedString" />
      <xsd:choice minOccurs="0">
        <xsd:annotation>
          <xsd:documentation xml:lang="en">Maturity Date may be an absolute or relative date</xsd:documentation>
        </xsd:annotation>
        <xsd:element name="maturity" type="xsd:date"/>
        <xsd:element name="relativeMaturity" type="common:DateInterval"/>
      </xsd:choice>
      <xsd:element minOccurs="0" name="value" type="xsd:double" />
      <xsd:element minOccurs="0" name="fixedValue" type="xsd:double" />
      <xsd:element minOccurs="0" name="overValue"  type="xsd:double" />
      <xsd:element minOccurs="0" name="overValueInPercent" type="xsd:boolean" />
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="ABSParametersList">
    <xsd:annotation>
      <xsd:documentation xml:lang="en"> List of parameters of an ABS.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="absParameter" type="tns:ABSParameter"></xsd:element>
    </xsd:sequence>
  </xsd:complexType>
	<xsd:simpleType name="FutureType">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">Selection among either Forward Contract (OTC) or Future Contract (listed)</xsd:documentation>
    </xsd:annotation>
		<xsd:restriction base="xsd:normalizedString">
			<xsd:enumeration value="Forward"></xsd:enumeration>
			<xsd:enumeration value="Future"></xsd:enumeration>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:complexType name="PricingForFutureForward">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">Assumptions and Models applied for the Theoretical Valuation of a Future or Forward Contract</xsd:documentation>
    </xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="tns:Pricing">
				<xsd:sequence>
					<xsd:element minOccurs="0" name="futureType" type="tns:FutureType">
						<xsd:annotation>
							<xsd:documentation xml:lang="en">Specify if the instrument should be calculated as a forward or a future;by default according if it is a forward or a future.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element minOccurs="0" name="family" type="xsd:normalizedString">
						<xsd:annotation>
							<xsd:documentation xml:lang="en">The possible fields depend on those specified in the yield curve family table and must be written in upper camel</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
          <xsd:element minOccurs="0" name="dialog" type="xsd:normalizedString"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType abstract="true" name="InstrumentForFutureForward">
		<xsd:annotation>
      <xsd:documentation xml:lang="en">Generic Instrument that may represent either a Future or a Forward Contract</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="tns:Instrument">
				<xsd:sequence>
					<xsd:element minOccurs="0" name="pricing" type="tns:PricingForFutureForward" />
                </xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="FutureForward">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">Generic Instrument that may represent either a Future or a Forward Contract</xsd:documentation>
    </xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="tns:InstrumentForFutureForward">
				<xsd:sequence>
					<xsd:element name="expirationDate" type="xsd:date">
						<xsd:annotation>
							<xsd:documentation xml:lang="en">Expiration date of the contract.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
          <xsd:element minOccurs="0" name="expirationDateType" type="tns:dateType">
            <xsd:annotation>
              <xsd:documentation xml:lang="en">Expiration date type of the contract.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
					<xsd:element minOccurs="0" name="paymentDate" type="common:AdjustableOrRelativeDate">
						<xsd:annotation>
							<xsd:documentation xml:lang="en">Payment date to receive the underlyer in case of expiry.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element minOccurs="0" name="calculationDate" type="xsd:date">
						<xsd:annotation>
							<xsd:documentation xml:lang="en">Calculation date of the amount to pay to receive the underlying. By default the expiry date</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
          <xsd:element minOccurs="0" name="contractSize" type="xsd:double">
            <xsd:annotation>
              <xsd:documentation xml:lang="en">Value of 1 point. This is equal to the ratio of the tick value dividend by tick point. By default, 1.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="conversionRatio" type="xsd:double">
            <xsd:annotation>
              <xsd:documentation xml:lang="en">Conversion ratio to apply to the underlying. By default, 1.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="deliveryDate" type="common:AdjustableOrRelativeDate">
						<xsd:annotation>
							<xsd:documentation xml:lang="en">Delivery of the underlying; by default, immediately.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
          <xsd:element minOccurs="0" name="deferredFixingDate" type="common:AdjustableOrRelativeDate" />
					<xsd:element name="settlementType" type="tns:SettlementType" />
          <xsd:element minOccurs="0" name="tenor" type="common:DateInterval">
            <xsd:annotation>
              <xsd:documentation xml:lang="en">Tenor of the Future/Forward</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
		      <xsd:element minOccurs="0" name="maturityType" type="tns:MaturityType">
            <xsd:annotation>
              <xsd:documentation xml:lang="en">Maturity Type of future</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="maturityOffset" type="xsd:int">
            <xsd:annotation>
              <xsd:documentation xml:lang="en">Nb of days of future</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="ListedMarket">
		<xsd:annotation>
			<xsd:documentation xml:lang="en">Describe a listed market using external references defined on the market of the option template.</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element minOccurs="0" name="sophis" type="xsd:int" />
			<xsd:element minOccurs="0" name="name" type="common:StringBounded39" />
			<xsd:element maxOccurs="unbounded" minOccurs="0" name="reference" type="tns:Reference">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">List of market references available.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
      <xsd:element minOccurs="0" name="seriesName" type="xsd:normalizedString" />
      <xsd:element minOccurs="0" name="isMarginCall" type="xsd:boolean" />
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="Future">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">An exchange traded future contract.</xsd:documentation>
    </xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="tns:FutureForward">
				<xsd:sequence>
					<xsd:element name="expiryConventionName" type="xsd:gYearMonth" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation xml:lang="en">May be used as a key to retrieve the future.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element minOccurs="0" name="listedMarket" type="tns:ListedMarket">
						<xsd:annotation>
							<xsd:documentation xml:lang="en">Define the market where the future is listed.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element minOccurs="0" name="clearingFees" type="xsd:double" />
          <xsd:element minOccurs="0" name="contractClass" type="xsd:string" />
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="BondFuture">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">An exchange traded Future Contract whose underlying is a Bond</xsd:documentation>
    </xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="tns:Future">
				<xsd:sequence>
					<xsd:element name="underlyer" type="tns:Underlyer"></xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="EquityFuture">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">An exchange traded Future Contract whose underlying is an Equity Index or a Share</xsd:documentation>
    </xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="tns:Future">
				<xsd:sequence>
					<xsd:element name="underlyer" type="tns:Underlyer"></xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="NotionalFuture">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">A type that represents notional Future</xsd:documentation>
    </xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="tns:Future">
				<xsd:sequence>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
  <xsd:simpleType name="NamingConvention">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">Defines when a Future, typically a Commodity Future, should be named according to its expiry/delivery or payment date. For example an Energy future which matures 14/3/2010 and delivers the commodity in April may be named "March 2010" or "April 2010" if the convention is expiry or delivery.
The naming convention should correspond to the existing convention on the market.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:normalizedString">
      <xsd:enumeration value="NotDefined"/>
      <xsd:enumeration value="Expiry"/>
      <xsd:enumeration value="Delivery"/>
      <xsd:enumeration value="Payment"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="ExoticType">
    <xsd:annotation>
			<xsd:documentation xml:lang="en">Defines, for an IR swap or a bond, whether or not there have an exotic spread.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:normalizedString">
      <xsd:enumeration value="NotDefined"/>
      <xsd:enumeration value="Spread"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="ExoticPayoff">
    <xsd:annotation>
			<xsd:documentation xml:lang="en">Defines, for an IR swap or a bond, the payoff type.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:normalizedString">
      <xsd:enumeration value="Standard"/>
      <xsd:enumeration value="Range Accrual"/>
      <xsd:enumeration value="Dual Range Accrual"/>
      <xsd:enumeration value="Snowball"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="Granularity">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">Defines, for an Electricity or Gas Commodity, if the Fixed prices for intraday delivery will corresponds to hours or smaller granularity (e.g. half-hour, quarter hour or 10 minutes).
This granularity is used to calculate the coupon of some financial swaps.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:normalizedString">
	  <xsd:enumeration value="Undefined"/>
      <xsd:enumeration value="Hour"/>
      <xsd:enumeration value="HalfHour"/>
      <xsd:enumeration value="QuarterHour"/>
      <xsd:enumeration value="TenMinutes"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="DaylightSaving">
    <xsd:restriction base="xsd:normalizedString">
	  <xsd:enumeration value="European"/>
      <xsd:enumeration value="USA"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="PriceQuotationType">
    <xsd:restriction base="xsd:normalizedString">
	  <xsd:enumeration value="Currency"/>
      <xsd:enumeration value="Hundredth"/>
	  <xsd:enumeration value="Hundredth of Hundredth"/>
    </xsd:restriction>
  </xsd:simpleType>
	<xsd:simpleType name="MarketPriceQuotationType">
		<xsd:restriction base="xsd:normalizedString">
			<xsd:enumeration value="Currency"/>
			<xsd:enumeration value="Hundredth"/>
			<xsd:enumeration value="Thousandth"/>
			<xsd:enumeration value="Tenth"/>
			<xsd:enumeration value="Ten-Thousandth"/>
		</xsd:restriction>
	</xsd:simpleType>
  <xsd:simpleType name="InstrumentListType">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">Defines if the commodity forward curve, which is represented by instruments of type 'Future' in Sophis, is actually representing real Futures (from a listed market) or Monthly Swap Rates for the physical delivery of the commodity.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:normalizedString">
      <xsd:enumeration value="Future Delivery"/>
      <xsd:enumeration value="Physical Delivery"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:complexType name="Fixing">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">The Fixing Date and Value of an Underlying, used for example to represent Asian Payoffs</xsd:documentation>
    </xsd:annotation>
		<xsd:sequence>
			<xsd:element name="date" type="xsd:date">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">The fixing date.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element minOccurs="0" name="spot" type="xsd:double">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">The fixing value in underlying currency.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element minOccurs="0" name="forex" type="xsd:double">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">The forex fixing in case of composite.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element minOccurs="0" name="spotInStrikeCurrency" type="xsd:double">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">The fixing value in strike currency in case of composite.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="Asian">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">A Clause that specifies that the payoff of an Option depends on the average fixing of the underlying over a time period</xsd:documentation>
    </xsd:annotation>
		<xsd:sequence>
			<xsd:element maxOccurs="unbounded" minOccurs="0" name="fixing" type="tns:Fixing"></xsd:element>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="CommodityFuture">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">An exchange traded future contract on an underlying of type Commodity.</xsd:documentation>
    </xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="tns:Future">
				<xsd:sequence>
					<xsd:element name="underlyer" type="tns:Underlyer" />
					<xsd:element name="unit" type="xsd:string" minOccurs="0"/>
					<xsd:element name="delivery" type="tns:Delivery" minOccurs="0" maxOccurs="1" />
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
  <xsd:complexType name="CommodityForward">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">A forward delivery contract on an underlying of type Commodity.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="tns:Forward">
        <xsd:sequence>
          <xsd:element name="underlyer" type="tns:Underlyer"/>
					<xsd:element name="unit" type="xsd:string" minOccurs="0"/>
          <xsd:element name="delivery" type="tns:Delivery" minOccurs="0"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="Delivery">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">Represents delivery profiles for electricity and gas. The delivery profile is made of a delivery period (e.g. Jan 2007, Q1 2009) and a delivery load (such as Peak of Base).</xsd:documentation>
    </xsd:annotation>
		<xsd:sequence>
			<xsd:element name="deliveryPeriod" type="xsd:string" />
			<xsd:element name="deliveryLoad" type="xsd:string" minOccurs="0" maxOccurs="1" />
		</xsd:sequence>
	</xsd:complexType>
  <xsd:complexType name="Commodity">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">A type describing a commodity underlying asset.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="tns:Instrument">
        <xsd:sequence>
		  <xsd:element minOccurs="0" name="pricing" type="tns:Pricing" />
          <xsd:element name="unitOfTrading" type="xsd:double" minOccurs="0"/>
          <xsd:element name="quotationTick" type="xsd:float" minOccurs="0"/>
          <xsd:element name="contractSize" type="xsd:double" minOccurs="0"/>
          <xsd:element name="defaultUnit" type="xsd:string" minOccurs="0"/>
          <xsd:element name="resultTheoValue" type="tns:TheoValueEnum" minOccurs="0"/>
          <xsd:element name="worksheetId" type="xsd:string" minOccurs="0"/>
          <xsd:element name="deliveryLag" type="xsd:int" minOccurs="0"/>
          <xsd:element name="paymentLag" type="xsd:int" minOccurs="0"/>
		      <xsd:element name="fixingLag" type="xsd:int" minOccurs="0"/>
          <xsd:element name="futureTemplate" type="xsd:normalizedString" minOccurs="0"/>
          <xsd:element name="deltaUnit" type="xsd:string" minOccurs="0"/>
          <xsd:element name="deltaQuotity" type="xsd:double" minOccurs="0"/>
          <xsd:element name="gammaTick" type="xsd:double" minOccurs="0"/>
          <xsd:element name="roundingAverage" type="xsd:int" minOccurs="0"/>
          <xsd:element name="tapoFixingCode" type="xsd:string" minOccurs="0"/>
          <xsd:element name="priceQuotationType" type="tns:PriceQuotationType" minOccurs="0"/>
          <xsd:element name="timeZone" type="xsd:double" minOccurs="0"/>
          <xsd:element name="granularity" type="tns:Granularity" minOccurs="0"/>
          <xsd:element name="daylightSaving" type="tns:DaylightSaving" minOccurs="0"/>
          <xsd:element name="spreadVolParent" type="tns:Underlyer" minOccurs="0"/>
          <xsd:element name="dayAheadDefinition" type="xsd:string" minOccurs="0"/>
          <xsd:element name="namingConvention" type="tns:NamingConvention" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation xml:lang="en">Future Expiry Convention</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="instrumentListType" type="tns:InstrumentListType" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation xml:lang="en">Instrument List Type</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="rollOver" type="xsd:int" minOccurs="0"/>
		  <xsd:element name="useSpreadCurve" type="xsd:boolean" minOccurs="0"/>
		  <xsd:element name="spreadCurveRef3M" type="tns:Underlyer" minOccurs="0"/>
		  <xsd:element name="maxMaturityInMonths" type="xsd:int" minOccurs="0"/>
		  <xsd:element name="priceFixingType" type="xsd:string" minOccurs="0"/>
		  <xsd:element name="automaticFuturesGeneration" type="xsd:boolean" minOccurs="0"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="NegotiatedRateList">
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="NegotiatedRate" type="tns:NegotiatedRate">
        <xsd:annotation>
          <xsd:documentation xml:lang="en">List of Physical Commodity Negotiated Rate.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="NegotiatedRate">
    <xsd:all>
      <xsd:element minOccurs="0" name="startDate" type="xsd:date" />
      <xsd:element minOccurs="0" name="endDate" type="xsd:date" />
      <xsd:element minOccurs="0" name="storageRate" type="xsd:double" />
    </xsd:all>
  </xsd:complexType>
  <xsd:complexType name="PhysicalCommodity">
    <xsd:complexContent>
      <xsd:extension base="tns:Commodity">
        <xsd:sequence>
          <xsd:element name="commodityUnderlyingType" type="tns:CommodityUnderlyingType" minOccurs="0"/>
          <xsd:element name="commodityUnderlying" type="xsd:int" minOccurs="0"/>
          <xsd:element name="measureUnit" type="xsd:string" minOccurs="0"/>
          <xsd:element name="multiplicativeQualityFactor" type="xsd:double" minOccurs="0"/>
          <xsd:element name="additiveQualityFactor" type="xsd:double" minOccurs="0"/>
          <xsd:element name="underlyingSpot" type="xsd:double" minOccurs="0"/>
          <xsd:element name="rentStartDate" type="xsd:date" minOccurs="0"/>
          <xsd:element name="discountStartDate" type="xsd:date" minOccurs="0"/>
          <xsd:element name="discountEndDate" type="xsd:date" minOccurs="0"/>
          <xsd:element name="discountRate" type="xsd:double" minOccurs="0"/>
          <xsd:element name="NegotiatedRateList" type="tns:NegotiatedRateList" minOccurs="0"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:simpleType name="TheoValueEnum">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">Defines when the prices of the Commodity Futures (or Monthly Swap Rates) will be obtained from the Worksheet, from the Quotation (Last prices) or both, depending on the user preference "Result in Theo. / without the Future"</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:normalizedString">
      <xsd:enumeration value="Defined by preference"/>
      <xsd:enumeration value="Worksheet values"/>
      <xsd:enumeration value="Last values"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:complexType name="StrikePercentage">
		<xsd:annotation>
			<xsd:documentation xml:lang="en">The price or level expressed as a percentage of the forward starting spot price.</xsd:documentation>
		</xsd:annotation>
		<xsd:all>
			<xsd:element name="strikePercentage" type="xsd:double">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">The percentage (1.1 for 110%) to apply to the the forward starting spot price to get the strike in points.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element minOccurs="0" name="forwardStartDate" type="xsd:date">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">Option forward start date.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element minOccurs="0" name="basis" type="xsd:double">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">Underlying value on forward start date if it is already known.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element minOccurs="0" name="averagingIn" type="tns:Asian">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">list of fixing date for the strike.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:all>
	</xsd:complexType>
	<xsd:complexType name="StrikeValue">
		<xsd:annotation>
      <xsd:documentation xml:lang="en">Choose type to define if the option is in percentage and the strike value.</xsd:documentation>
		</xsd:annotation>
		<xsd:choice>
      <xsd:annotation>
        <xsd:documentation xml:lang="en">Selection among possible interpretations of the Strike parameter</xsd:documentation>
      </xsd:annotation>
			<xsd:element name="strikePrice" type="tns:Money">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">The price or level at which the option has been struck for one underlyer.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="numberOfOptionsFixed" type="tns:StrikePercentage">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">The strike is in percentage and the number of option is fixed and the notional is equal to the forward starting spot price.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="notionalFixed" type="tns:StrikePercentage">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">The strike is in percentage and the number of option is ajusted so that the notional is fixed.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:choice>
	</xsd:complexType>
	<xsd:complexType name="Ratio">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">The mathematical ratio of two floating numbers</xsd:documentation>
    </xsd:annotation>
		<xsd:all>
			<xsd:element name="numerator" type="xsd:double"></xsd:element>
			<xsd:element name="denominator" type="xsd:double"></xsd:element>
		</xsd:all>
	</xsd:complexType>
	<xsd:simpleType name="FxFeature">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">This type defines the different possibilities for FX conversion. It can be Quanto (a predefine value is used) or Compo (a forward fixing will determine the conversion rate).</xsd:documentation>
    </xsd:annotation>
		<xsd:restriction base="xsd:normalizedString">
			<xsd:enumeration value="Quanto"></xsd:enumeration>
			<xsd:enumeration value="Composite"></xsd:enumeration>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:complexType name="Strike">
		<xsd:annotation>
			<xsd:documentation xml:lang="en">Describe the strike and  the features linked as Asian, Fixing, Forex , entitlement.</xsd:documentation>
		</xsd:annotation>
		<xsd:all>
			<xsd:element minOccurs="0" name="strikeValue" type="tns:StrikeValue">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">Specifies the strike type and value.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element minOccurs="0" name="fxFeature" type="tns:FxFeature" />
			<xsd:element minOccurs="0" name="fxGuaranted" type="xsd:double">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">Specifies the guaranteed forex for quanto product.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element minOccurs="0" name="entitlement" type="tns:Ratio">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">numerator underlyers entitled for the exercice of denominator options.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element minOccurs="0" name="averagingOut" type="tns:Asian">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">list of fixing date for the pay-off.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element minOccurs="0" name="fixingType" type="tns:FixingType">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">Fixing used by the calculation agent. The possible fields are the sophis one and those specified in the new_history_column table and must be written in upper camel.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element minOccurs="0" name="fixingTypePivotVsCurrency1" type="tns:FixingType">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">Fixing used by the calculation agent for NDF cross fixing. The possible fields are the sophis one and those specified in the new_history_column table and must be written in upper camel.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element minOccurs="0" name="fixingTypePivotVsCurrency2" type="tns:FixingType">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">Fixing used by the calculation agent for NDF cross fixing. The possible fields are the sophis one and those specified in the new_history_column table and must be written in upper camel.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:all>
	</xsd:complexType>
	<xsd:complexType name="Forward">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">A type for defining Forwards Contracts.</xsd:documentation>
    </xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="tns:FutureForward">
				<xsd:sequence>
					<xsd:element name="strike" type="tns:Strike">
						<xsd:annotation>
							<xsd:documentation xml:lang="en">Basis.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
			<xsd:element minOccurs="0" name="effectiveDate" type="xsd:date">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">Effective date is fixing date plus IR gap.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element  minOccurs="0" name="endDate" type="xsd:date">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">End date is Effective Date plus Tenor.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="EquityForward">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">An OTC Forward Contract whose underlying is an equity Index or a Share</xsd:documentation>
    </xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="tns:Forward">
				<xsd:sequence>
					<xsd:element name="underlyer" type="tns:Underlyer"></xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="InterestRateFuture">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">An exchange traded Future Contract whose underlying is an Interest Rate index (such as Libor 1M)</xsd:documentation>
    </xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="tns:Future">
				<xsd:sequence>
					<xsd:element minOccurs="0" name="underlyer" type="tns:FloatingRate"></xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="Pool">
		<xsd:annotation>
      <xsd:documentation xml:lang="en">The set of underlying Bonds of a Future Contract.</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element minOccurs="0" maxOccurs="unbounded" name="bond" type="tns:Underlyer"></xsd:element>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:element name="pool" type="tns:Pool"/>
	<!--<xsd:complexType name="NotionalFuture">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">A type that represents Bond Futures</xsd:documentation>
    </xsd:annotation>-->
  <!-- This type is not used anymore ! Previously, it was used to describe a notional future but now the elements of a notional future
  that make it different from a simple future ("pool", "ytmCalculation" and "notionalRate") are described in the toolkit part "extraFields"
  of a future -> there is no need to use a specific type to describe a notional future because its specific part is toolkit-described
  in "extraFields" (type : "Future") -->
		<!--<xsd:complexContent>
			<xsd:extension base="tns:Future">
				<xsd:sequence>
					<xsd:element name="pool" type="tns:Pool" />
					<xsd:element minOccurs="0" name="ytmCalculation" type="tns:YieldToMaturity">
						<xsd:annotation>
							<xsd:documentation xml:lang="en">Describe the ytm convention in view of calculation of the concordance factor.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="notionalRate" type="xsd:double" />
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>-->
	<xsd:simpleType name="Optimisation">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">Optimisation algorithms available for binomial, trinomial and grid calculation models</xsd:documentation>
    </xsd:annotation>
		<xsd:restriction base="xsd:normalizedString">
			<xsd:enumeration value="None"></xsd:enumeration>
			<xsd:enumeration value="Simple"></xsd:enumeration>
			<xsd:enumeration value="Top"></xsd:enumeration>
			<xsd:enumeration value="Bottom"></xsd:enumeration>
			<xsd:enumeration value="TopTop"></xsd:enumeration>
			<xsd:enumeration value="TopBottom"></xsd:enumeration>
			<xsd:enumeration value="BottomTop"></xsd:enumeration>
			<xsd:enumeration value="BottomBottom"></xsd:enumeration>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="UnderlyingModel">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">Defines the diffusion model for the underlying in derivatives pricing.
For example NMU corresponds to only using the volatility value at maturity, which wouldn't be the best match for Trinomial pricing of American options.
Please refer to Financial Documentation for more informations.</xsd:documentation>
    </xsd:annotation>
		<xsd:restriction base="xsd:normalizedString">
			<xsd:enumeration value="Standard"></xsd:enumeration>
			<xsd:enumeration value="Nmu"></xsd:enumeration>
			<xsd:enumeration value="Tdv"></xsd:enumeration>
			<xsd:enumeration value="Dupire"></xsd:enumeration>
			<xsd:enumeration value="Implied"></xsd:enumeration>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:complexType name="PricingForOption">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">Assumptions and Models applied for the Theoretical Valuation of an Option</xsd:documentation>
    </xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="tns:Pricing">
				<xsd:sequence>
					<xsd:element minOccurs="0" name="optimisation" type="tns:Optimisation">
						<xsd:annotation>
							<xsd:documentation xml:lang="en">Optimisation available for this option; it depends of the model.See Financial documentation for more information.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element minOccurs="0" name="underlyingModel" type="tns:UnderlyingModel">
						<xsd:annotation>
							<xsd:documentation xml:lang="en">Describe how to interpret the underlying in the model.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element minOccurs="0" name="numberOfPoints" type="xsd:int">
						<xsd:annotation>
							<xsd:documentation xml:lang="en">Number of points used during the pricing.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element minOccurs="0" name="dialog" type="tns:Dialog">
						<xsd:annotation>
							<xsd:documentation xml:lang="en">Dialog name in upper camel to use to display the option.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
          <xsd:element minOccurs="0" name="pricingModel" type="common:StringBounded39">
            <xsd:annotation>
              <xsd:documentation xml:lang="en">Name of the pricing model.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
					<xsd:element minOccurs="0" name="family" type="xsd:normalizedString">
						<xsd:annotation>
							<xsd:documentation xml:lang="en">The possible fields depend on those specified in the yield curve family table and must be written in upper camel</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element minOccurs="0" name="familyOtherCurrency" type="tns:Currency"/>
					<xsd:element minOccurs="0" name="familySpread" type="xsd:double"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType abstract="true" name="InstrumentForOption">
		<xsd:annotation>
      <xsd:documentation xml:lang="en">Generic Type for most options and derivatives in SOPHIS</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="tns:Instrument">
				<xsd:sequence>
					<xsd:element minOccurs="0" name="pricing" type="tns:PricingForOption" />
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="EuropeanExercise">
		<xsd:annotation>
			<xsd:documentation xml:lang="en">A type for defining exercise procedures associated with a European style exercise of an option.</xsd:documentation>
		</xsd:annotation>
		<xsd:all>
			<xsd:element minOccurs="0" name="expirationDate" type="common:AdjustableOrRelativeDate">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">The last day for exercise.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
      <xsd:element minOccurs="0" name="expirationDateType" type="tns:dateType"/>
		</xsd:all>
	</xsd:complexType>
	<xsd:complexType name="AmericanExercise">
		<xsd:annotation>
			<xsd:documentation xml:lang="en">A type for defining exercise procedures associated with an American style exercise of an option.</xsd:documentation>
		</xsd:annotation>
		<xsd:all>
			<xsd:element minOccurs="0" name="commencementDate" type="common:AdjustableOrRelativeDate">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">The first day of the exercise period for an American style option. May be undefined.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
      <xsd:element minOccurs="0" name="commencementDateType" type="tns:dateType"/>
			<xsd:element name="expirationDate" type="common:AdjustableOrRelativeDate">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">The last day within an exercise period for an American style option.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
      <xsd:element minOccurs="0" name="expirationDateType" type="tns:dateType"/>
		</xsd:all>
	</xsd:complexType>
	<xsd:complexType name="BermudanExerciseDates">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">The start date, end date and specific parameters of an Exercise Period for a Bermudan-style Option</xsd:documentation>
    </xsd:annotation>
		<xsd:all>
			<xsd:element minOccurs="0" name="beginDate" type="common:AdjustableOrRelativeDate">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">The first day of a period for a Bermuda style option. May be not defined if equals to end Date</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
      <xsd:element name="endDate" type="common:AdjustableOrRelativeDate">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">The last day of a period for a Bermuda style option.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element minOccurs="0" name="exerciseConditions" type="tns:Strike">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">Change of exercise conditions</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:all>
	</xsd:complexType>
	<xsd:complexType name="BermudaExercise">
		<xsd:annotation>
			<xsd:documentation xml:lang="en">A type for defining exercise procedures associated with a Bermudan style exercise of an option.</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element minOccurs="0" name="commencementDate" type="common:AdjustableOrRelativeDate">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">The first day of the exercise period for a Bermuda style option. May be undefined.It may overlap the bermuda exercie date meaning that the strike condition change.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
      <xsd:element minOccurs="0" name="commencementDateType" type="tns:dateType"/>
			<xsd:element minOccurs="0" name="expirationDate" type="common:AdjustableOrRelativeDate">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">The last day within an exercise period for an American style option.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
      <xsd:element minOccurs="0" name="expirationDateType" type="tns:dateType"/>
			<xsd:element minOccurs="0" maxOccurs="unbounded" name="bermudanExerciseDates" type="tns:BermudanExerciseDates">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">List of Exercise Dates for a Bermudan option</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="Exercise">
		<xsd:annotation>
			<xsd:documentation xml:lang="en">A type for defining exercise procedures for options.</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:choice>
        <xsd:annotation>
          <xsd:documentation xml:lang="en">Selection among Option Exercise Types</xsd:documentation>
        </xsd:annotation>
				<xsd:element name="europeanExercise" type="tns:EuropeanExercise">
					<xsd:annotation>
						<xsd:documentation xml:lang="en">The parameters for defining the expiration date for a European style option.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="americanExercise" type="tns:AmericanExercise">
					<xsd:annotation>
						<xsd:documentation xml:lang="en">The parameters for defining the exercise period for an American style equity option.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="bermudaExercise" type="tns:BermudaExercise">
					<xsd:annotation>
						<xsd:documentation xml:lang="en">The parameters for defining the exercise period for an Bermudan style option.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
			</xsd:choice>
			<xsd:element minOccurs="0" name="settlementDate" type="common:AdjustableOrRelativeDate">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">Date on which settlement of option premiums will occur.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
      <xsd:element minOccurs="0" name="notionalCurrency" type="tns:Currency">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">The currency of the notional</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="settlementCurrency" type="tns:Currency">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">The currency in which a cash settlement for non-deliverable forward and non-deliverable options.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="OptionFeatures">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">List of Clauses that may apply to the Payoff or Pricing of Options</xsd:documentation>
    </xsd:annotation>
	<xsd:complexContent>
		<xsd:extension base="Clauses">
			<xsd:sequence>
				<xsd:element minOccurs="0" name="dummy" type="xsd:string"/>
			</xsd:sequence>
		</xsd:extension>
	</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="Option">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">Generic Type for most options and derivatives in SOPHIS</xsd:documentation>
    </xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="tns:InstrumentForOption">
				<xsd:sequence>
					<xsd:element minOccurs="0" name="conversionCost" type="tns:Money"/>
          <xsd:choice>
            <xsd:annotation>
              <xsd:documentation xml:lang="en">Selection among either Strike (for standard Options) or Gearing (for indexed Options)</xsd:documentation>
            </xsd:annotation>
					  <xsd:element name="strike" type="tns:Strike" />
						<xsd:sequence>
							<xsd:element name="gearing" type="xsd:double" />
							<xsd:element minOccurs="0" name="fixingType" type="tns:FixingType">
								<xsd:annotation>
									<xsd:documentation xml:lang="en">Fixing Type used by the calculation agent. The possible fields are the sophis ones and those specified in the new_history_column table</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
						</xsd:sequence>
          </xsd:choice>
          <xsd:choice>
            <xsd:annotation>
              <xsd:documentation xml:lang="en">Option Type is either "optionType" for flexible general payoffs or "typeOfOption" for vanilla one and two-underlying payoffs</xsd:documentation>
            </xsd:annotation>
					  <xsd:element name="optionType" type="tns:OptionTypeEnum">
						  <xsd:annotation>
							  <xsd:documentation xml:lang="en">The type of option.</xsd:documentation>
						  </xsd:annotation>
					  </xsd:element>
            <xsd:element name="typeOfOption" type="tns:ComputationType">
              <xsd:annotation>
                <xsd:documentation xml:lang="en">The type of option.</xsd:documentation>
              </xsd:annotation>
            </xsd:element>
          </xsd:choice>
          <xsd:element name="exercise" type="tns:Exercise">
						<xsd:annotation>
							<xsd:documentation xml:lang="en">The parameters for defining how the option can be exercised.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element minOccurs="0" name="settlementType" type="tns:SettlementType" />
					<xsd:element minOccurs="0" name="issuePrice" type="xsd:double" />
					<xsd:element minOccurs="0" name="issueDate" type="xsd:date" />
          <xsd:element minOccurs="0" name="issueDateType" type="tns:dateType"/>
					<xsd:element minOccurs="0" ref="tns:abstractCalculationAgent">
						<xsd:annotation>
							<xsd:documentation source="http://www.sophis.net" xml:lang="en">The concrete type is defined in sophis.xsd</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element minOccurs="0" name="contractSize" type="xsd:double" />
          <xsd:element minOccurs="0" name="listedMarket" type="tns:ListedMarket">
            <xsd:annotation>
              <xsd:documentation xml:lang="en">Define the market where the option is listed (if applicable).</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
					<xsd:element minOccurs="0" name="optionFeatures" type="tns:OptionFeatures" />
          <xsd:element minOccurs="0" name="calendarsList" type="tns:CalendarsList" />
          <xsd:element minOccurs="0" name="rateLeg" type="tns:LegContainerType">
            <xsd:annotation>
              <xsd:documentation xml:lang="en">Rate Leg</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="upfrontPremium" type="xsd:double" minOccurs="0"/>
          <xsd:element name="isUpfrontPremiumInPercent" type="xsd:boolean" minOccurs="0"/>
          <xsd:element name="isInAmount" type="xsd:boolean" minOccurs="0"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="EquityOption">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">A type for defining the equity options.</xsd:documentation>
    </xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="tns:Option">
				<xsd:sequence>
					<xsd:element name="underlyer" type="tns:Underlyer"/>
					<xsd:element minOccurs="0" name="fixedIncome" type="tns:FixedIncomeInOptions"/>
					<xsd:element minOccurs="0" name="Panier_MonteCarlos" type="tns:PanierMonteCarlos"/>
					<xsd:element minOccurs="0" name="FixingMultiDevs" type="tns:FixingMultiDevs"/>
					<xsd:element minOccurs="0" name="COMM" type="xsd:normalizedString"/>
					<xsd:element minOccurs="0" name="NB_WEEKLY_PERIODS_1" type="xsd:int"/>
          <xsd:element minOccurs="0" name="USE_ANTITHETIC" type="xsd:boolean"/>
					<xsd:element minOccurs="0" name="credit_spread_volat" type="xsd:double"/>
					<xsd:element minOccurs="0" name="credit_spread_correlation" type="xsd:double"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
  <xsd:complexType name="FixedIncomeInOptions">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">Parameters related to the Fixed Income features of an Option (this generally applies to Convertible Bonds or Swapped Options)</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" name="creditSpread" type="xsd:double"/>
      <xsd:element minOccurs="0" name="spreadType" type="tns:SpreadType"/>
      <xsd:element minOccurs="0" name="dayCountBasis" type="tns:DayCountBasis"/>
      <xsd:element minOccurs="0" name="yieldCalculation" type="tns:YieldCalculation"/>
      <xsd:element minOccurs="0" name="couponFrequency" type="tns:CouponFrequency"/>
      <xsd:element minOccurs="0" name="impliedType" type="tns:SpreadType"/>
      <xsd:element minOccurs="0" name="YTMInstrument" type="tns:Identifier"/>
      <xsd:element minOccurs="0" name="issuer" type="tns:SwapThirdParty"/>
    </xsd:sequence>
  </xsd:complexType>
	<xsd:complexType name="CouponFrequency">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">The schedule frequency type</xsd:documentation>
    </xsd:annotation>
		<xsd:all>
			<xsd:element minOccurs="0" name="periodMultiplier" type="xsd:int" />
			<xsd:element minOccurs="0" name="periodEnum" type="common:PeriodEnum" />
		</xsd:all>
	</xsd:complexType>
  <xsd:complexType name="PanierMonteCarlos">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">List of underlyings in the "New Multi-Underlying" Option mask</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="Panier_MonteCarlo" type="tns:Panier_MonteCarlo"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="Panier_MonteCarlo">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">An underlying in the "New Multi-Underlying" Option mask</xsd:documentation>
    </xsd:annotation>
    <xsd:all>
      <xsd:element minOccurs="0" name="CodeAction" type="tns:CodeAction"/>
      <xsd:element minOccurs="0" name="CoursInitial" type="xsd:double"/>
      <xsd:element minOccurs="0" name="Valeur" type="xsd:int"/>
    </xsd:all>
  </xsd:complexType>
  <xsd:complexType name="CodeAction">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">The identifier of an underlying instrument in the "New Multi-Underlying" Option mask</xsd:documentation>
    </xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="tns:Identifier">
				<xsd:sequence></xsd:sequence>
				<xsd:attribute name="href" type="xsd:IDREF"></xsd:attribute>
				<!-- internal -->
				<xsd:attribute name="ID" type="xsd:ID" use="optional">
					<xsd:annotation>
						<xsd:documentation source="http://www.sophis.net" xml:lang="en">Internal, for gxml simplified soap.</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
   <xsd:complexType name="SICOSJ">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">The identifier of an observation instrument in the "New Multi-Underlying" Option mask</xsd:documentation>
    </xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="tns:Identifier">
				<xsd:sequence></xsd:sequence>
				<xsd:attribute name="href" type="xsd:IDREF"></xsd:attribute>
				<!-- internal -->
				<xsd:attribute name="ID" type="xsd:ID" use="optional">
					<xsd:annotation>
						<xsd:documentation source="http://www.sophis.net" xml:lang="en">Internal, for gxml simplified soap.</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
 <xsd:complexType name="CommodityOption">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">An Option whose underlying is a Commodity or Commodity Future</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="tns:Option">
        <xsd:sequence>
          <xsd:element name="underlyer" type="tns:Underlyer"/>
          <xsd:element name="commoditiesFixingCode" type="xsd:string"/>
          <xsd:element name="forexFixingCode" type="xsd:string" minOccurs="0"/>
          <xsd:element name="optionUnit" type="xsd:string"/>
          <xsd:element name="strikeUnit" type="xsd:string"/>
          <xsd:element minOccurs="0" name="fixedIncome" type="tns:FixedIncomeInOptions"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="Swaption">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">A type to define an option on a swap</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="tns:Option">
        <xsd:sequence>
          <xsd:element name="underlyer" type="tns:Underlyer" minOccurs="0"/>
          <xsd:element name="swapInSwaption" type="tns:SwapInSwaption" minOccurs="0"/>
          <xsd:element name="commoditiesFixingCode" type="xsd:string" minOccurs="0"/>
          <xsd:element name="forexFixingCode" type="xsd:string" minOccurs="0"/>
          <xsd:element name="optionUnit" type="xsd:string" minOccurs="0"/>
          <xsd:element name="strikeUnit" type="xsd:string" minOccurs="0"/>
          <xsd:element minOccurs="0" name="fixedIncome" type="tns:FixedIncomeInOptions"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="FutureOption">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">An Option whose underlying is a Future contract</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="tns:Option">
        <xsd:sequence>
          <xsd:element name="underlyer" type="tns:Underlyer"/>
          <xsd:element name="commoditiesFixingCode" type="xsd:string" minOccurs="0"/>
          <xsd:element name="forexFixingCode" type="xsd:string" minOccurs="0"/>
          <xsd:element name="optionUnit" type="xsd:string" minOccurs="0"/>
          <xsd:element name="strikeUnit" type="xsd:string" minOccurs="0"/>
          <xsd:element minOccurs="0" name="fixedIncome" type="tns:FixedIncomeInOptions"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
	<xsd:complexType name="PricingForPackage">
		<xsd:annotation>
			<xsd:documentation xml:lang="en">Assumptions and Models applied for the Theoretical Valuation of a Package</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="tns:Pricing">
				<xsd:sequence>
					<xsd:element minOccurs="0" name="family" type="xsd:normalizedString">
						<xsd:annotation>
							<xsd:documentation xml:lang="en">The possible fields depend on those specified in the yield curve family table and must be written in upper camel</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element minOccurs="0" name="familyOtherCurrency" type="tns:Currency"/>
					<xsd:element minOccurs="0" name="familySpread" type="xsd:double"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="InstrumentForPackage">
		<xsd:annotation>
			<xsd:documentation xml:lang="en">Abstract base class for all underlying assets</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="tns:Instrument">
				<xsd:sequence>
					<xsd:element minOccurs="0" name="pricing" type="tns:PricingForPackage"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
  <xsd:complexType name="Package">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">Cross-Asset Instrument structured as the sum of other instruments</xsd:documentation>
    </xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="tns:InstrumentForPackage">
				<xsd:sequence>
					<xsd:element minOccurs="0" name="basket" type="tns:Basket" />
					<xsd:element minOccurs="0" name="expirationDate" type="xsd:date">
						<xsd:annotation>
							<xsd:documentation xml:lang="en">Expiration date of the contract.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element minOccurs="0" name="issuePrice" type="xsd:double">
						<xsd:annotation>
							<xsd:documentation xml:lang="en">Issue price of the contract.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element minOccurs="0" name="issueDate" type="xsd:date">
						<xsd:annotation>
							<xsd:documentation xml:lang="en">Issue date of the contract.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element minOccurs="0" name="strike" type="tns:Strike">
						<xsd:annotation>
							<xsd:documentation xml:lang="en">Only for information purposes.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
  <xsd:complexType name="LoanFacilityComponent">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">Contains the Sophis Ref of the facility, the label, the drawnNotioanl, the forexFixing, the trade and value date (ex : 70324332, AXA Term Loan, 20000000, 1,0, 2011-04-05, 2001-04-05).</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="loan" type="tns:Underlyer"></xsd:element>
      <xsd:element name="drawnNotional" type="xsd:double"></xsd:element>
      <xsd:element name="forexFixing" type="xsd:double"></xsd:element>
      <xsd:element name="tradeDate" type="xsd:date"></xsd:element>
      <xsd:element name="valueDate" type="xsd:date"></xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="LoanFacilityComponents">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">Composed of several LoanFacilityComponent.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="loanFacilityComponent" type="tns:LoanFacilityComponent"></xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="LoanFacility">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">Description of the loan facility.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="tns:Package">
        <xsd:sequence>
          <xsd:element minOccurs="0" name="rateLeg" type="tns:LegContainerType"/>
          <xsd:element minOccurs="0" name="loanFacilityComponents" type="tns:LoanFacilityComponents"></xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="ForexStrategyBooking">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">Booking data for forex strategy.</xsd:documentation>
    </xsd:annotation>
	<xsd:sequence>
	  <xsd:element minOccurs="0" name="premium" type="common:DoubleInPercent"/>
	  <xsd:element minOccurs="0" name="premiumCurrency" type="tns:Currency"/>
	  <xsd:element minOccurs="0" name="premiumDate" type="xsd:date"/>
	  <xsd:element name="portfolioId" type="xsd:int"/>
	  <xsd:element minOccurs="0" name="broker" type="xsd:int"/>
	  <xsd:element minOccurs="0" name="counterparty" type="xsd:int"/>
	  <xsd:element minOccurs="0" name="entity" type="xsd:int"/>
	  <xsd:element minOccurs="0" name="depositary" type="xsd:int"/>
	  <xsd:element minOccurs="0" name="depositaryOfCounterparty" type="xsd:int"/>
	  <xsd:element minOccurs="0" name="counterpartyFees" type="xsd:double"/>
	  <xsd:element minOccurs="0" name="counterpartyFeesCurrency" type="tns:Currency"/>
	  <xsd:element minOccurs="0" name="marketFees" type="xsd:double"/>
	  <xsd:element minOccurs="0" name="marketFeesCurrency" type="tns:Currency"/>
	  <xsd:element minOccurs="0" name="brokerFees" type="xsd:double"/>
	  <xsd:element minOccurs="0" name="brokerFeesCurrency" type="tns:Currency"/>
	</xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="ForexStrategySummary">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">Summary of the forex strategy.</xsd:documentation>
    </xsd:annotation>
	<xsd:sequence>
	  <xsd:element name="tradeDate" type="xsd:date"/>
	  <xsd:element name="isSell" type="xsd:boolean"/>
	  <xsd:element name="underlyer" type="tns:Underlyer"/>
	  <xsd:element name="strategyType" type="xsd:normalizedString"/>
	  <xsd:element minOccurs="0" name="expiryDate" type="xsd:date"/>
	  <xsd:element minOccurs="0" name="deliveryDate" type="xsd:date"/>
	  <xsd:element minOccurs="0" name="delta" type="xsd:double"/>
	  <xsd:element minOccurs="0" name="notional" type="xsd:double"/>
	  <xsd:element minOccurs="0" name="deliveryType" type="tns:SettlementType" />
	  <xsd:element minOccurs="0" name="fixingType" type="tns:FixingType" />
	  <xsd:element minOccurs="0" name="bookAsStrategy" type="xsd:boolean"/>
	  <xsd:element minOccurs="0" name="booking" type="tns:ForexStrategyBooking"/>
	</xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="ForexStrategyOption">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">Forex Strategy data for one option</xsd:documentation>
    </xsd:annotation>
	<xsd:sequence>
	  <xsd:element name="isSell" type="xsd:boolean"/>
	  <xsd:element name="exercise" type="tns:Exercise"/>
	  <xsd:element name="optionType" type="tns:OptionTypeEnum"/>
	  <xsd:element name="expiryDate" type="xsd:date"/>
	  <xsd:element name="deliveryDate" type="xsd:date"/>
	  <xsd:element name="strike" type="xsd:double"/>
	  <xsd:element name="notional" type="xsd:double"/>
	  <xsd:element name="deliveryType" type="tns:SettlementType" />
	  <xsd:element minOccurs="0" name="fixingType" type="tns:FixingType" />
	  <xsd:element name="name" type="xsd:normalizedString"/>
	  <xsd:element minOccurs="0" name="booking" type="tns:ForexStrategyBooking"/>
	</xsd:sequence>
  </xsd:complexType>
  <xsd:simpleType name="BuySellEnum">
		<xsd:restriction base="xsd:normalizedString">
			<xsd:enumeration value="Buy" />
			<xsd:enumeration value="Sell" />
		</xsd:restriction>
	</xsd:simpleType>
  <xsd:complexType name="FxHedgeAmount">
		  <xsd:simpleContent>
		    <xsd:extension base="xsd:double">
			  <xsd:attribute name="buyOrSell" type="tns:BuySellEnum"></xsd:attribute>
			  <xsd:attribute name="currency" type="tns:Currency"></xsd:attribute>
			  <xsd:attribute name="isLeadingAmount" type="xsd:boolean"></xsd:attribute>
			</xsd:extension>
		  </xsd:simpleContent>
		</xsd:complexType>
  <xsd:complexType name="ForexStrategyHedge">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">Hedge part of the Forex Strategy</xsd:documentation>
    </xsd:annotation>
	<xsd:sequence>
	  <xsd:element name="isSell" type="xsd:boolean"/>
	  <xsd:element name="underlyer" type="tns:Underlyer"/>
	  <xsd:element minOccurs="0" name="fixingDate" type="xsd:date"/>
	  <xsd:element name="valueDate" type="xsd:date"/>
	  <xsd:element name="fxRate" type="xsd:double"/>
	  <xsd:element name="amountCurrency1" type="tns:FxHedgeAmount"/>
	  <xsd:element name="amountCurrency2" type="tns:FxHedgeAmount"/>
	  <xsd:element minOccurs="0" name="fixingType" type="tns:FixingType" />
	  <xsd:element minOccurs="0" name="booking" type="tns:ForexStrategyBooking"/>
	</xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="ForexStrategy">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">Description of the forex strategy.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="tns:Package">
        <xsd:sequence>
          <xsd:element name="summary" type="tns:ForexStrategySummary"/>
		  <xsd:element maxOccurs="unbounded" name="option" type="tns:ForexStrategyOption"/>
		  <xsd:element minOccurs="0" name="hedge" type="tns:ForexStrategyHedge"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
	<xsd:complexType name="RainbowOption">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">A type of Option that explicitely refers to two underlyings, for example a Spread Option. Not be be mixed with multi-underlying options, such as basket options, where there are more underlying risk sources than specified in the termsheet</xsd:documentation>
    </xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="tns:Option">
				<xsd:sequence>
					<xsd:element name="underlyer" type="tns:Underlyer" />
					<xsd:element name="underlyer2" type="tns:Underlyer" />
					<xsd:element name="strike2" type="tns:Strike">
						<xsd:annotation>
							<xsd:documentation xml:lang="en">Strike to apply to the second underlyer; may be 0 for spread or basket option.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
          <xsd:element minOccurs="0" name="fixedIncome" type="tns:FixedIncomeInOptions"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="BondOption">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">A Bond Option</xsd:documentation>
    </xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="tns:Option">
				<xsd:sequence>
					<xsd:element name="underlyer" type="tns:Underlyer"></xsd:element>
          <xsd:element minOccurs="0" name="fixedIncome" type="tns:FixedIncomeInOptions"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="ForexOption">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">Option whose underlying is a Forex Pair</xsd:documentation>
    </xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="tns:Option">
				<xsd:sequence>
					<xsd:element name="underlyer" type="tns:Underlyer"></xsd:element>
					<xsd:element minOccurs="0" name="fixedIncome" type="tns:FixedIncomeInOptions"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
		<xsd:complexType name="FundOption">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">Option whose underlying is an External Fund or Exchange Traded Fund</xsd:documentation>
    </xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="tns:Option">
				<xsd:sequence>
					<xsd:element name="underlyer" type="tns:Underlyer"></xsd:element>
          <xsd:element minOccurs="0" name="fixedIncome" type="tns:FixedIncomeInOptions"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
  <!-- CB Ascot specific fields -->
  <xsd:complexType name="Ascot">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">Option whose underlying is a Convertible Bond</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="tns:Option">
        <xsd:sequence>
          <xsd:element name="underlyer" type="tns:Underlyer"/>
          <xsd:element minOccurs="0" name="fixedIncome" type="tns:FixedIncomeInOptions"/>
          <xsd:element minOccurs="0" name="FLOATING_RATE" type="tns:Underlyer"/>
          <xsd:element minOccurs="0" name="ASCOT_REDEMPTION" type="xsd:double"/>
          <xsd:element minOccurs="0" name="ASCOT_MARK_TO_MARKET" type="xsd:boolean"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="InterestRateForward">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">An OTC Forward Contract whose underlying is an Interest Rate index (such as Libor 1M)</xsd:documentation>
    </xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="tns:Forward">
				<xsd:sequence>
					<xsd:element name="underlyer" type="tns:FloatingRate" />
					<xsd:element minOccurs="0" name="adjustedEndDate" type="xsd:date" />
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="ForexFuture">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">An exchange traded future contract whose underlying is a currency</xsd:documentation>
    </xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="tns:Future">
				<xsd:sequence>
          <xsd:element minOccurs="0" name="underlyer" type="tns:Underlyer">
            <xsd:annotation>
              <xsd:documentation xml:lang="en">Old way to describe forex future underlying currency by its sophis code</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="underlyingCurrency" type="tns:Currency">
            <xsd:annotation>
              <xsd:documentation xml:lang="en">New way to describe forex future underlying currency by its ISO code</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="ForexForward">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">A Forward Contract whose underlying is a currency</xsd:documentation>
    </xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="tns:Forward">
				<xsd:sequence>
          <xsd:element minOccurs="0" name="underlyer" type="tns:Underlyer">
            <xsd:annotation>
              <xsd:documentation xml:lang="en">Old way to describe forex future underlying currency by its sophis code</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="underlyingCurrency" type="tns:Currency">
            <xsd:annotation>
              <xsd:documentation xml:lang="en">New way to describe forex future underlying currency by its ISO code</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:simpleType name="QuoteBasisEnum">
		<xsd:annotation>
			<xsd:documentation source="http://www.FpML.org" xml:lang="en">How an exchange rate is quoted.</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:token">
			<xsd:enumeration value="Currency1PerCurrency2">
				<xsd:annotation>
					<xsd:documentation source="http://www.FpML.org" xml:lang="en">The amount of currency1 for one unit of currency2</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="Currency2PerCurrency1">
				<xsd:annotation>
					<xsd:documentation source="http://www.FpML.org" xml:lang="en">The amount of currency2 for one unit of currency1</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:complexType name="PricingForConvertibleBond">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">Assumptions and Models applied for the Theoretical Valuation of a Convertible Bond</xsd:documentation>
    </xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="tns:Pricing">
				<xsd:sequence>
					<xsd:element minOccurs="0" name="optimisation" type="tns:Optimisation">
						<xsd:annotation>
							<xsd:documentation xml:lang="en">Optimisation available for this option; it depends of the model.See Financial documentation for more information.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element minOccurs="0" name="underlyingModel" type="tns:UnderlyingModel">
						<xsd:annotation>
							<xsd:documentation xml:lang="en">Describe how to interpret the underlying in the model.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element minOccurs="0" name="dialog" type="tns:Dialog">
						<xsd:annotation>
							<xsd:documentation xml:lang="en">Dialog name in upper camel to use to display the option.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType abstract="true" name="InstrumentForConvertibleBond">
		<xsd:annotation>
      <xsd:documentation xml:lang="en">A Bond that the holder may convert into shares under certain conditions</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="tns:Instrument">
				<xsd:sequence>
					<xsd:element minOccurs="0" name="pricing" type="tns:PricingForConvertibleBond" />
                </xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="ConvertibleBond">
		<xsd:annotation>
		  <xsd:documentation xml:lang="en">A Bond that the holder may convert into shares under certain conditions</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="tns:Option">
				<xsd:sequence>
					<xsd:element name="underlyer" type="tns:Underlyer" />
					<xsd:element minOccurs="0" name="fixedIncome" type="tns:FixedIncomeInConvertibleBond"/>
					<xsd:choice minOccurs="0">
						<xsd:element name="floatingRate" type="tns:FloatingRateInConvertibleBond"/>
						<xsd:element name="floatingRateForCB" type="tns:FloatingRateForCBInConvertibleBond"/>
					</xsd:choice>
					<xsd:element minOccurs="0" name="cashFlows" type="tns:CashFlows" />
					<xsd:element minOccurs="0" name="initialConversionRatio" type="xsd:double" />
					<xsd:element name="issueNumber" type="xsd:double" />
					<xsd:element minOccurs="0" name="discountSpread" type="xsd:double" />
					<xsd:element minOccurs="0" name="minimumPiece" type="xsd:double" />
					<xsd:element minOccurs="0" name="lowestIncrement" type="xsd:double" />
                    <xsd:element minOccurs="0" name="calledDate" type="xsd:date" />
					<xsd:element minOccurs="0" name="calledPrice" type="xsd:double" />
					<xsd:element minOccurs="0" name="calledPriceInPercent" type="xsd:boolean" />
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="FixedIncomeInConvertibleBond">
		<xsd:annotation>
			<xsd:documentation xml:lang="en">Parameters for the fixed income part specific to the Convertible Bond model </xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="tns:FixedIncomeInOptions">
				<xsd:sequence>
					<xsd:element minOccurs="0" name="couponRate" type="xsd:double"/>
					<xsd:element minOccurs="0" name="creditRiskModel" type="xsd:short"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	 <xsd:complexType name="FloatingRateForCBInConvertibleBond">
		<xsd:annotation>
		  <xsd:documentation xml:lang="en">Parameters for the floating rate part specific to the Convertible Bond model in case leg type is "Floating" </xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
		  <xsd:element minOccurs="0" name="referenceRate" type="tns:Identifier"/>
		  <xsd:element minOccurs="0" name="frequency" type="xsd:short" />
		  <xsd:element minOccurs="0" name="spread" type="xsd:double" />
		  <xsd:element minOccurs="0" name="offsetRefDate" type="xsd:short" />
		  <xsd:element minOccurs="0" name="fixingOffset" type="xsd:short" />
		</xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="FloatingRateInConvertibleBond">
		<xsd:annotation>
			<xsd:documentation xml:lang="en">Parameters for the floating rate part specific to the Convertible Bond model in case leg type is "Floating for CB"</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="tns:FloatingRateForCBInConvertibleBond">
				<xsd:sequence>
					<xsd:element minOccurs="0" name="longEnd" type="xsd:short" />
					<xsd:element minOccurs="0" name="stub" type="xsd:short" />
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="QuotedCurrencyPair">
		<xsd:annotation>
			<xsd:documentation source="http://www.FpML.org" xml:lang="en">A type that describes the composition of a rate that has been quoted or is to be quoted. This includes the two currencies and the quotation relationship between the two currencies and is used as a building block throughout the FX specification.</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="currency1" type="tns:Currency">
				<xsd:annotation>
					<xsd:documentation source="http://www.FpML.org" xml:lang="en">The first currency specified when a pair of currencies is to be evaluated.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="currency2" type="tns:Currency">
				<xsd:annotation>
					<xsd:documentation source="http://www.FpML.org" xml:lang="en">The second currency specified when a pair of currencies is to be evaluated.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="quoteBasis" type="tns:QuoteBasisEnum">
				<xsd:annotation>
					<xsd:documentation source="http://www.FpML.org" xml:lang="en">The method by which the exchange rate is quoted.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="FxRate">
		<xsd:annotation>
			<xsd:documentation source="http://www.FpML.org" xml:lang="en">A type describing the rate of a currency conversion: pair of currency, quotation mode and exchange rate.</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="quotedCurrencyPair" type="tns:QuotedCurrencyPair">
				<xsd:annotation>
					<xsd:documentation source="http://www.FpML.org" xml:lang="en">Defines the two currencies for an FX trade and the quotation relationship between the two currencies.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="rate" type="xsd:decimal">
				<xsd:annotation>
					<xsd:documentation source="http://www.FpML.org" xml:lang="en">The rate of exchange between the two currencies of the leg of a deal. Must be specified with a quote basis.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="Feature">
		<xsd:annotation>
      <xsd:documentation xml:lang="en">A type for defining Instrument specific features.</xsd:documentation>
		</xsd:annotation>
		<xsd:all />
	</xsd:complexType>
	<xsd:complexType name="GenericClause">
		<xsd:annotation>
      <xsd:documentation xml:lang="en">A type for defining generic clauses</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="tns:Feature">
				<xsd:sequence>
          <xsd:choice minOccurs="0">
            <xsd:annotation>
              <xsd:documentation xml:lang="en">Clause Start Date may be an absolute or relative date</xsd:documentation>
            </xsd:annotation>
            <xsd:element name="startDate" type="xsd:date" />
            <xsd:element name="relativeStartDate" type="common:DateInterval" />
          </xsd:choice>
          <xsd:choice minOccurs="0">
            <xsd:annotation>
              <xsd:documentation xml:lang="en">Clause End Date may be an absolute or relative date</xsd:documentation>
            </xsd:annotation>
					  <xsd:element name="endDate" type="xsd:date" />
            <xsd:element name="relativeEndDate" type="common:DateInterval" />
          </xsd:choice>
					<xsd:element name="minimum">
						<xsd:complexType>
              <xsd:annotation>
                <xsd:documentation xml:lang="en">Minimum field of an Instrument Clause, its interpretation depends on the Clause Type</xsd:documentation>
              </xsd:annotation>
							<xsd:simpleContent>
								<xsd:extension base="xsd:double">
									<xsd:attribute name="inPercent" type="xsd:boolean"></xsd:attribute>
								</xsd:extension>
							</xsd:simpleContent>
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="maximum">
						<xsd:complexType>
              <xsd:annotation>
                <xsd:documentation xml:lang="en">Maximum field of an Instrument Clause, its interpretation depends on the Clause Type</xsd:documentation>
              </xsd:annotation>
							<xsd:simpleContent>
								<xsd:extension base="xsd:double">
									<xsd:attribute name="inPercent" type="xsd:boolean"></xsd:attribute>
								</xsd:extension>
							</xsd:simpleContent>
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="value">
						<xsd:complexType>
              <xsd:annotation>
                <xsd:documentation xml:lang="en">Value field of an Instrument Clause, its interpretation depends on the Clause Type</xsd:documentation>
              </xsd:annotation>
							<xsd:simpleContent>
								<xsd:extension base="xsd:double">
									<xsd:attribute name="inPercent" type="xsd:boolean"></xsd:attribute>
								</xsd:extension>
							</xsd:simpleContent>
						</xsd:complexType>
					</xsd:element>
					<xsd:element minOccurs="0" name="payDate" type="xsd:int" />
					<xsd:element minOccurs="0" name="comment" type="xsd:normalizedString" />
				</xsd:sequence>
				<xsd:attribute name="type" type="xsd:short" />
				<xsd:attribute name="name" type="xsd:normalizedString" />
				<xsd:attribute name="id" type="xsd:ID" />
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="ConvertibleBondClause">
		<xsd:annotation>
			<xsd:documentation xml:lang="en">Type for defining clauses specific to Convertible Bond model</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="tns:GenericClause">
				<xsd:sequence>
					<xsd:element minOccurs="0" name="histoFixing" type="xsd:boolean" />
				</xsd:sequence>
				<xsd:attribute name="orderId" type="xsd:short" />
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="ParametersOfDerivation">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">Specifies the parameters to compute Derivatives by Finite Differences. It is generally used for first and second Greeks</xsd:documentation>
    </xsd:annotation>
		<xsd:all />
		<xsd:attribute name="variation" type="xsd:double" />
		<xsd:attribute name="accuracy" type="xsd:int" />
		<xsd:attribute name="model" type="tns:DerivationModel" />
	</xsd:complexType>
	<xsd:complexType name="IndicatorPrecision">
		<xsd:annotation>
			<xsd:documentation xml:lang="en">A type for defining Indicator Precision clauses, allowing to adjust the variation and precision of the following hedging indicators: Delta/Gamma, Rho, Vega</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="tns:Feature">
				<xsd:sequence>
					<xsd:element minOccurs="0" name="gammaOverVega" type="xsd:short" />
					<xsd:element minOccurs="0" name="delta" type="tns:ParametersOfDerivation" />
					<xsd:element minOccurs="0" name="rho" type="tns:ParametersOfDerivation" />
					<xsd:element minOccurs="0" name="vega" type="tns:ParametersOfDerivation" />
				</xsd:sequence>
				<xsd:attribute name="id" type="xsd:ID" />
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="Schedule">
		<xsd:annotation>
			<xsd:documentation xml:lang="en">Method of generating a series of dates.</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element minOccurs="0" name="startDate" type="xsd:date">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">The period start date.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element minOccurs="0" name="endDate" type="xsd:date">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">The period end date.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element minOccurs="0" name="frequency" type="xsd:int">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">The schedule frequency.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element minOccurs="0" name="frequencyType" type="tns:FrequencyType">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">The schedule frequency type.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element minOccurs="0" name="initialValue" type="xsd:double">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">The cap or floor strike in percentage, as the case may be. An initial rate of 5% would be represented as 0.05.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="Trigger">
		<xsd:annotation>
			<xsd:documentation xml:lang="en">Trigger point at which feature is effective.</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element minOccurs="0" name="levelPercentage" type="xsd:double">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">The trigger level percentage.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element minOccurs="0" name="level" type="xsd:double">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">The trigger level.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element minOccurs="0" name="triggerCondition" type="tns:TriggerCondition">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">The binary condition that applies to a European-style trigger, determining where the spot rate must be relative to the triggerRate for the option to be exercisable. There can only be two domain values for this element: "aboveTrigger" or "belowTrigger".</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="FeaturePayment">
		<xsd:annotation>
			<xsd:documentation xml:lang="en">Payment made following trigger occurence.</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element minOccurs="0" name="levelPercentage" type="xsd:double">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">The trigger level percentage.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element minOccurs="0" name="amount" type="xsd:double">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">The monetary quantity in currency units.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element minOccurs="0" name="featurePaymentDate" type="common:AdjustableOrRelativeDate">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">The feature payment date.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
    </xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="TriggerEvent">
		<xsd:annotation>
			<xsd:documentation xml:lang="en">Observation point for trigger.</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element maxOccurs="unbounded" minOccurs="0" name="schedule" type="tns:Schedule">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">A schedule</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element minOccurs="0" name="trigger" type="tns:Trigger">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">The trigger level.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element minOccurs="0" name="cap" type="tns:Trigger">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">The cap trigger level.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element minOccurs="0" name="floor" type="tns:Trigger">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">The floor trigger level.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element minOccurs="0" name="featurePayment" type="tns:FeaturePayment">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">The feature payment.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element minOccurs="0" name="comment" type="xsd:normalizedString" />
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="BarrierTriggerEvent">
		<xsd:annotation>
			<xsd:documentation xml:lang="en">For Barrier Clause, reference_id is used for shifted barriers to link to the original barrier order_id</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="tns:TriggerEvent">
				<xsd:sequence>
					<xsd:element minOccurs="0" name="order_id" type="xsd:short"/>
					<xsd:element minOccurs="0" name="reference_id" type="xsd:short"/>
					<xsd:element minOccurs="0" name="crossDate" type="xsd:date">
						<xsd:annotation>
							<xsd:documentation xml:lang="en">The date on which the barrier has been crossed.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
  <xsd:complexType name="CallEvent">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">A Clause where the issuer may redeem the bond early under no market condition (Hard Call) or under the conditions of the underlying lying above a Trigger (Soft Call)</xsd:documentation>
    </xsd:annotation>
    <xsd:all>
      <xsd:element minOccurs="0" name="event" type="tns:TriggerEvent" />
      <xsd:element minOccurs="0" name="payDate" type="xsd:int" />
      <xsd:element name="maximum">
        <xsd:complexType>
          <xsd:annotation>
            <xsd:documentation xml:lang="en">Exercise Price of an Issuer Call clause, it appears in the Maximum field of the clause</xsd:documentation>
          </xsd:annotation>
          <xsd:simpleContent>
            <xsd:extension base="xsd:double">
              <xsd:attribute name="inPercent" type="xsd:boolean"></xsd:attribute>
            </xsd:extension>
          </xsd:simpleContent>
        </xsd:complexType>
      </xsd:element>
    </xsd:all>
  </xsd:complexType>
	<xsd:complexType name="CallMakeWholeEvent">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">An Issuer Call Clause where the issuer pays the sum of all remaining coupons in case of Call</xsd:documentation>
    </xsd:annotation>
		<xsd:all>
			<xsd:element minOccurs="0" name="event" type="tns:TriggerEvent" />
			<xsd:element name="zeroCouponSpread">
				<xsd:complexType>
          <xsd:annotation>
            <xsd:documentation xml:lang="en">Spread applied on top of the Yield Curve to discount future Cash Flows when computing the Make Whole Coupon, it appears in the Maximum field of the clause</xsd:documentation>
          </xsd:annotation>
					<xsd:simpleContent>
						<xsd:extension base="xsd:double">
							<xsd:attribute name="inPercent" type="xsd:boolean"></xsd:attribute>
						</xsd:extension>
					</xsd:simpleContent>
				</xsd:complexType>
			</xsd:element>
		</xsd:all>
	</xsd:complexType>
	<xsd:complexType name="CallCushionEvent">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">Clause to modify the Trigger of a soft Issuer Call Clause</xsd:documentation>
    </xsd:annotation>
		<xsd:all>
			<xsd:element minOccurs="0" name="schedule" type="tns:Schedule" />
			<xsd:element name="cushion">
				<xsd:complexType>
          <xsd:annotation>
            <xsd:documentation xml:lang="en">Modifier of the Call Trigger, it appears in the Value field of the clause</xsd:documentation>
          </xsd:annotation>
					<xsd:simpleContent>
						<xsd:extension base="xsd:double">
							<xsd:attribute name="inPercent" type="xsd:boolean"></xsd:attribute>
						</xsd:extension>
					</xsd:simpleContent>
				</xsd:complexType>
			</xsd:element>
		</xsd:all>
	</xsd:complexType>
	<xsd:complexType name="DelayedCallEvent">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">An Issuer Call Clause where there is a time delay between activation of the clause and redemption date</xsd:documentation>
    </xsd:annotation>
		<xsd:all>
			<xsd:element minOccurs="0" name="event" type="tns:TriggerEvent" />
			<xsd:element minOccurs="0" name="delay" type="xsd:int">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">number of days between notice and execution</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:all>
	</xsd:complexType>
	<xsd:complexType name="CallWithoutAccruedEvent">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">An Issuer Call Clause where the issuer redeems the Notional but no Coupon</xsd:documentation>
    </xsd:annotation>
		<xsd:all />
	</xsd:complexType>
	<xsd:complexType name="IssuerCall">
		<xsd:annotation>
			<xsd:documentation xml:lang="en">A type for defining Issuer Call clauses,which allows the issuer company to repurchase the bonds at a fixed price</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="tns:Feature">
				<xsd:sequence>
					<xsd:element maxOccurs="unbounded" minOccurs="0" name="callEvent" type="tns:TriggerEvent" />
					<xsd:element minOccurs="0" name="callWithoutAccruedEvent" type="tns:CallWithoutAccruedEvent" />
					<xsd:element maxOccurs="unbounded" minOccurs="0" name="delayedCallEvent" type="tns:DelayedCallEvent" />
					<xsd:element maxOccurs="unbounded" minOccurs="0" name="accretedCallEvent" type="tns:TriggerEvent" />
					<xsd:element maxOccurs="unbounded" minOccurs="0" name="callMakeWholeEvent" type="tns:CallMakeWholeEvent" />
					<xsd:element maxOccurs="unbounded" minOccurs="0" name="callMakeWholeNoDiscountEvent" type="tns:TriggerEvent" />
					<xsd:element maxOccurs="unbounded" minOccurs="0" name="callCushionEvent" type="tns:CallCushionEvent" />
				</xsd:sequence>
				<xsd:attribute name="id" type="xsd:ID" />
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="CliquetEvent">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">A Cliquet clause of an Option. A Cliquet option pays a fixed percentage of performance at expiry, possibly with a Cap (an upper bound) or a Floor (lower bound).</xsd:documentation>
    </xsd:annotation>
		<xsd:all>
			<xsd:element minOccurs="0" name="schedule" type="tns:Schedule" />
			<xsd:element minOccurs="0" name="cap" type="tns:Trigger" />
			<xsd:element minOccurs="0" name="floor" type="tns:Trigger" />
			<xsd:element minOccurs="0" name="featurePayment" type="tns:FeaturePayment" />
			<xsd:element minOccurs="0" name="comment" type="xsd:normalizedString" />
		</xsd:all>
	</xsd:complexType>
	<xsd:complexType name="Cliquet">
		<xsd:annotation>
			<xsd:documentation xml:lang="en">A type for defining Cliquet clauses,A Cliquet option pays a fixed percentage of performance at expiry, possibly with a Cap (an upper bound) or a Floor (lower bound). If percentage &lt; 0 we deal with a Reverse Cliquet, or Put Cliquet.It is possible to specify several cliquet clauses in the same product; then there is an array of time intervals [tb1, te1], . . . , [tbn, ten]. The final pay-off is the sum of the n cliquet clauses.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="tns:Feature">
				<xsd:sequence>
					<xsd:element maxOccurs="unbounded" minOccurs="0" name="cliquetEvent" type="tns:CliquetEvent" />
				</xsd:sequence>
				<xsd:attribute name="id" type="xsd:ID" />
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="BearerPut">
		<xsd:annotation>
			<xsd:documentation xml:lang="en">A type for defining Bearer Put clauses,which allows the holder to exchange the convertible for a cash value, if the quoted price falls below a fixed level.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="tns:Feature">
				<xsd:sequence>
					<xsd:element maxOccurs="unbounded" minOccurs="0" name="putEvent" type="tns:TriggerEvent" />
					<xsd:element maxOccurs="unbounded" minOccurs="0" name="accretedPutEvent" type="tns:TriggerEvent" />
				</xsd:sequence>
				<xsd:attribute name="id" type="xsd:ID" />
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="Miscellaneous">
		<xsd:annotation>
			<xsd:documentation xml:lang="en">A type for defining clauses called "Miscellaneous", giving information on the type of contract. It is not taken into account in the pricing.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="tns:Feature">
				<xsd:sequence>
					<xsd:element minOccurs="0" name="informations" type="xsd:normalizedString" />
				</xsd:sequence>
				<xsd:attribute name="id" type="xsd:ID" />
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="Liquidity">
		<xsd:annotation>
			<xsd:documentation xml:lang="en">A type for defining Liquidity clauses,The issuer can redeem the remaining bonds at a predetermined amount, if the number of derivatives outstanding is less than a given number. This clause is not taken into account in the pricing.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="tns:Feature">
				<xsd:sequence>
					<xsd:element minOccurs="0" name="triggerEvent" type="tns:TriggerEvent" />
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="GlobalCap">
		<xsd:annotation>
			<xsd:documentation xml:lang="en">A type for defining GlobalCap clauses,where the amount paid by the issuer is limited to the sum indicated in the clause.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="tns:Feature">
				<xsd:sequence>
					<xsd:element minOccurs="0" name="triggerEvent" type="tns:TriggerEvent" />
				</xsd:sequence>
				<xsd:attribute name="id" type="xsd:ID" />
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="GlobalFloor">
		<xsd:annotation>
			<xsd:documentation xml:lang="en">A type for defining GlobalFloor clauses,where the amount the issuer can be redeemed is limited to the sum indicated in the clause.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="tns:Feature">
				<xsd:sequence>
					<xsd:element minOccurs="0" name="triggerEvent" type="tns:TriggerEvent" />
				</xsd:sequence>
				<xsd:attribute name="id" type="xsd:ID" />
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="Barrier">
		<xsd:annotation>
			<xsd:documentation xml:lang="en">A type for defining Barrier clauses,We say that the barrier is hit if the value of the spot crosses the limit H during the time interval [tb; te], either upward (if S(0) &lt; H) or downward.Adding a ?Barrier? clause to a product guarantees that if the barrier is hit, the optionwill pay at least the amount R.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="tns:Feature">
				<xsd:sequence>
          <xsd:choice maxOccurs="unbounded" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation xml:lang="en">Selection among Barrier Clause Types</xsd:documentation>
            </xsd:annotation>
            <xsd:element name="barrier" type="tns:BarrierTriggerEvent" />
            <xsd:element name="knockIn" type="tns:BarrierTriggerEvent" />
            <xsd:element name="knockOut" type="tns:BarrierTriggerEvent" />
            <xsd:element name="doubleKnockOut" type="tns:BarrierTriggerEvent" />
            <xsd:element name="protectionKnockIn" type="tns:BarrierTriggerEvent" />
            <xsd:element name="protectionKnockOut" type="tns:BarrierTriggerEvent" />
						<xsd:element name="shifted" type="tns:BarrierTriggerEvent" />
          </xsd:choice>
        </xsd:sequence>
				<xsd:attribute name="id" type="xsd:ID" />
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="Chooser">
		<xsd:annotation>
			<xsd:documentation xml:lang="en">A type for defining Chooser clauses,allowing, at a fixed date, to choose to transform the option either into a plain vanilla Call or into a plain vanilla Put.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="tns:Feature">
				<xsd:sequence>
					<xsd:element minOccurs="0" name="chooserDate" type="common:AdjustableOrRelativeDate" />
					<xsd:element minOccurs="0" name="comment" type="xsd:normalizedString" />
				</xsd:sequence>
				<xsd:attribute name="id" type="xsd:ID" />
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="DigitalFixing">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">An Option Clause of type "Digital"</xsd:documentation>
    </xsd:annotation>
		<xsd:all>
			<xsd:element minOccurs="0" name="schedule" type="tns:Schedule" />
      <xsd:element minOccurs="0" name="startDate" type="xsd:date" />
      <xsd:element minOccurs="0" name="endDate" type="xsd:date" />
		</xsd:all>
	</xsd:complexType>
	<xsd:complexType name="Digital">
		<xsd:annotation>
			<xsd:documentation xml:lang="en">A type for defining Digital features of the digital or multi-digital (corridor) options</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="tns:Feature">
				<xsd:sequence>
					<xsd:element minOccurs="0" name="withVolatilitySmile" type="xsd:boolean" />
          <xsd:element minOccurs="0" name="nbAlreadyDown" type="xsd:short" />
          <xsd:element minOccurs="0" name="lastFixingDate" type="xsd:date" />
					<xsd:element maxOccurs="unbounded" minOccurs="0" name="digitalFixing" type="tns:DigitalFixing" />
				</xsd:sequence>
				<xsd:attribute name="id" type="xsd:ID" />
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="LookBackPeriod">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">An Option Clause of type "Lookback" or "Maximum"</xsd:documentation>
    </xsd:annotation>
		<xsd:all>
			<xsd:element minOccurs="0" name="endPeriod" type="xsd:date" />
			<xsd:element minOccurs="0" name="observedExtremum" type="xsd:double" />
		</xsd:all>
		<xsd:attribute name="lookBackType" type="tns:LookBackType" />
	</xsd:complexType>
	<xsd:complexType name="LookBack">
		<xsd:annotation>
			<xsd:documentation xml:lang="en">A type for defining LookBack clauses, used in look-back options where the payoff depends on the extremum reached by the spot during the look-back period. The payoff comes in two varieties: the look-back on strike and the look-back on spot.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="tns:Feature">
				<xsd:sequence>
					<xsd:element maxOccurs="unbounded" minOccurs="0" name="lookBackPeriod" type="tns:LookBackPeriod" />
				</xsd:sequence>
				<xsd:attribute name="id" type="xsd:ID" />
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="Dilution">
		<xsd:annotation>
			<xsd:documentation xml:lang="en">A type for defining Dilution clause.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="tns:Feature">
				<xsd:sequence>
					<xsd:element name="value">
						<xsd:complexType>
              <xsd:annotation>
                <xsd:documentation xml:lang="en">The value of a Dilution clause between 0 and 100%, it appears in the Value field of the clause</xsd:documentation>
              </xsd:annotation>
							<xsd:simpleContent>
								<xsd:extension base="xsd:double">
									<xsd:attribute name="inPercent" type="xsd:boolean"></xsd:attribute>
								</xsd:extension>
							</xsd:simpleContent>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
				<xsd:attribute name="id" type="xsd:ID" />
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="ResetEvent">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">A type for defining Reset Clauses. Resettable parity clause can augment the conversion ratio depending on the spot value.</xsd:documentation>
    </xsd:annotation>
		<xsd:all>
			<xsd:element minOccurs="0" name="date" type="xsd:date" />
			<xsd:element minOccurs="0" name="payDate" type="xsd:int" />
			<xsd:element name="maximum">
				<xsd:complexType>
          <xsd:annotation>
            <xsd:documentation xml:lang="en">Determines the minimal parity after conversion, it appears in the Maximum field of the clause</xsd:documentation>
          </xsd:annotation>
					<xsd:simpleContent>
						<xsd:extension base="xsd:double">
							<xsd:attribute name="inPercent" type="xsd:boolean"></xsd:attribute>
						</xsd:extension>
					</xsd:simpleContent>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="minimum">
				<xsd:complexType>
          <xsd:annotation>
            <xsd:documentation xml:lang="en">Determines the maximal parity after conversion, it appears in the Minimum field of the clause</xsd:documentation>
          </xsd:annotation>
					<xsd:simpleContent>
						<xsd:extension base="xsd:double">
							<xsd:attribute name="inPercent" type="xsd:boolean"></xsd:attribute>
						</xsd:extension>
					</xsd:simpleContent>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="value">
				<xsd:complexType>
          <xsd:annotation>
            <xsd:documentation xml:lang="en">Determines the target parity after conversion, it appears in the Value field of the clause</xsd:documentation>
          </xsd:annotation>
					<xsd:simpleContent>
						<xsd:extension base="xsd:double">
							<xsd:attribute name="inPercent" type="xsd:boolean"></xsd:attribute>
						</xsd:extension>
					</xsd:simpleContent>
				</xsd:complexType>
			</xsd:element>
		</xsd:all>
	</xsd:complexType>
	<xsd:complexType name="ResettableParity">
		<xsd:annotation>
      <xsd:documentation xml:lang="en">A type for defining "Reset" clauses, depending on the parameters, a resettable parity clause can either augment the conversion ratio, or diminish the conversion ratio, or both.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="tns:Feature">
				<xsd:sequence>
					<xsd:element maxOccurs="unbounded" minOccurs="0" name="resetEvent" type="tns:ResetEvent" />
				</xsd:sequence>
				<xsd:attribute name="id" type="xsd:ID" />
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="WithoutSmile">
		<xsd:annotation>
      <xsd:documentation xml:lang="en">A type for defining "Without Smile" clause.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="tns:Feature">
				<xsd:sequence />
				<xsd:attribute name="id" type="xsd:ID" />
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
  <xsd:complexType name="ConversionWithAccrued">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">A type for defining "Conversion with Accrued" clause, used for convertible bonds where the accrued or full coupon is due even if the convertible bond is converted.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="tns:Feature">
        <xsd:sequence />
        <xsd:attribute name="id" type="xsd:ID" />
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
	<xsd:complexType name="Mandatory">
		<xsd:annotation>
			<xsd:documentation xml:lang="en">A type for defining Mandatory clauses, for convertible bonds that are not redeemed in cash, but that are converted into a certain number of shares which depend on the value of the underlying</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="tns:Feature">
				<xsd:sequence>
					<xsd:element minOccurs="0" name="schedule" type="tns:Schedule" />
					<xsd:element name="conversionMinimum">
						<xsd:complexType>
              <xsd:annotation>
                <xsd:documentation xml:lang="en">Minimal Conversion Value of the CB, it appears in the Minimum field of the clause</xsd:documentation>
              </xsd:annotation>
							<xsd:simpleContent>
								<xsd:extension base="xsd:double">
									<xsd:attribute name="inPercent" type="xsd:boolean"></xsd:attribute>
								</xsd:extension>
							</xsd:simpleContent>
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="conversionMaximum">
						<xsd:complexType>
              <xsd:annotation>
                <xsd:documentation xml:lang="en">Maximal Conversion Value of the CB, it appears in the Maximum field of the clause</xsd:documentation>
              </xsd:annotation>
							<xsd:simpleContent>
								<xsd:extension base="xsd:double">
									<xsd:attribute name="inPercent" type="xsd:boolean"></xsd:attribute>
								</xsd:extension>
							</xsd:simpleContent>
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="step">
						<xsd:complexType>
              <xsd:annotation>
                <xsd:documentation xml:lang="en">Ratio between minimal and maximal Conversion Value of the CB, it appears in the Value field of the clause</xsd:documentation>
              </xsd:annotation>
							<xsd:simpleContent>
								<xsd:extension base="xsd:double">
									<xsd:attribute name="inPercent" type="xsd:boolean"></xsd:attribute>
								</xsd:extension>
							</xsd:simpleContent>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
				<xsd:attribute name="id" type="xsd:ID" />
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="AccretedRate">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">Parameters that describe the computation of the Accreted Value of a Convertible Bond</xsd:documentation>
    </xsd:annotation>
		<xsd:all>
			<xsd:element minOccurs="0" name="schedule" type="tns:Schedule" />
			<xsd:element name="rate">
				<xsd:complexType>
          <xsd:annotation>
            <xsd:documentation xml:lang="en">The interest rate used to discount coupons when computing the Accreted Value of a CB, it appears in the Value field of the clause</xsd:documentation>
          </xsd:annotation>
					<xsd:simpleContent>
						<xsd:extension base="xsd:double">
							<xsd:attribute name="inPercent" type="xsd:boolean"></xsd:attribute>
						</xsd:extension>
					</xsd:simpleContent>
				</xsd:complexType>
			</xsd:element>
		</xsd:all>
	</xsd:complexType>
	<xsd:complexType name="Accreted">
		<xsd:annotation>
			<xsd:documentation xml:lang="en">A type for defining Accreted clauses, which enables to define triggers and values of early redemptions as a percentage of the convertible bond accreted value.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="tns:Feature">
				<xsd:sequence>
					<xsd:element maxOccurs="unbounded" minOccurs="0" name="accretedRate" type="tns:AccretedRate" />
				</xsd:sequence>
				<xsd:attribute name="id" type="xsd:ID" />
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="ContingentPayment">
		<xsd:annotation>
			<xsd:documentation xml:lang="en">A type for defining CoPay clauses,which enables the holder to receive an added coupon amount according to contingent events.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="tns:Feature">
				<xsd:sequence>
					<xsd:element maxOccurs="unbounded" minOccurs="0" name="contingentEventOnStock" type="tns:TriggerEvent" />
					<xsd:element maxOccurs="unbounded" minOccurs="0" name="contingentEventOnMarketPrice" type="tns:TriggerEvent" />
				</xsd:sequence>
				<xsd:attribute name="id" type="xsd:ID" />
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="ContingentConversion">
		<xsd:annotation>
			<xsd:documentation xml:lang="en">A type for defining CoCo clauses,which restrict the conversion right of holders to contingent events.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="tns:Feature">
				<xsd:sequence>
					<xsd:element maxOccurs="unbounded" minOccurs="0" name="contingentEventOnStock" type="tns:TriggerEvent" />
					<xsd:element maxOccurs="unbounded" minOccurs="0" name="contingentEventOnMarketPrice" type="tns:TriggerEvent" />
				</xsd:sequence>
				<xsd:attribute name="id" type="xsd:ID" />
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="ExchangeableEvent">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">A type for defining Exchangeable clauses for Convertible Bonds</xsd:documentation>
    </xsd:annotation>
		<xsd:all>
			<xsd:element minOccurs="0" name="schedule" type="tns:Schedule" />
			<xsd:element name="recoveryRate">
				<xsd:complexType>
          <xsd:annotation>
            <xsd:documentation xml:lang="en">The recovery rate to consider for the optional part of the CB, it appears in the Value field of the clause</xsd:documentation>
          </xsd:annotation>
					<xsd:simpleContent>
						<xsd:extension base="xsd:double">
							<xsd:attribute name="inPercent" type="xsd:boolean"></xsd:attribute>
						</xsd:extension>
					</xsd:simpleContent>
				</xsd:complexType>
			</xsd:element>
		</xsd:all>
	</xsd:complexType>
	<xsd:complexType name="Exchangeable">
		<xsd:annotation>
			<xsd:documentation xml:lang="en">A type for defining Exchangeable clauses,allowing to add credit risk with a given recovery rate to the optional part of the convertible bond.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="tns:Feature">
				<xsd:sequence>
					<xsd:element maxOccurs="unbounded" minOccurs="0" name="exchangeableEvent" type="tns:ExchangeableEvent" />
				</xsd:sequence>
				<xsd:attribute name="id" type="xsd:ID" />
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="Perpetual">
		<xsd:annotation>
			<xsd:documentation xml:lang="en">A type for defining Perpetual clauses, allowing to stop the CB at the maturity date of the last market plot defined in the yield curve.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="tns:Feature">
				<xsd:sequence>
					<xsd:element name="couponFrequency" type="xsd:double">
						<xsd:annotation>
							<xsd:documentation xml:lang="en">For example F = 4 means quarterly coupon.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
				<xsd:attribute name="id" type="xsd:ID" />
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="DividendProtectionEvent">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">A clause that forces the value of the underlying's dividends to a given amount during the pricing of a CB</xsd:documentation>
    </xsd:annotation>
		<xsd:sequence>
			<xsd:element minOccurs="0" name="schedule" type="tns:Schedule" />
			<xsd:element name="dividend">
				<xsd:complexType>
          <xsd:annotation>
            <xsd:documentation xml:lang="en">The amount of substitution dividend, it appears in the Value field of the clause</xsd:documentation>
          </xsd:annotation>
					<xsd:simpleContent>
						<xsd:extension base="xsd:double">
							<xsd:attribute name="inPercent" type="xsd:boolean"></xsd:attribute>
						</xsd:extension>
					</xsd:simpleContent>
				</xsd:complexType>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="AnnualDividendProtectionEvent">
		 <xsd:annotation>
		  <xsd:documentation xml:lang="en">A clause that forces the value of the underlying's dividends to a given amount during the pricing of a CB</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="tns:DividendProtectionEvent">
				<xsd:sequence>
					<xsd:element minOccurs="0" name="factor" type="xsd:short" />
					<xsd:element minOccurs="0" name="paymentDate" type="xsd:int" />
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="DividendProtection">
		<xsd:annotation>
			<xsd:documentation xml:lang="en">A type for defining DividendProtection clauses.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="tns:Feature">
				<xsd:sequence>
					<xsd:element maxOccurs="unbounded" minOccurs="0" name="dividendProtectionEvent" type="tns:DividendProtectionEvent"/>
					<xsd:element maxOccurs="unbounded" minOccurs="0" name="annualDividendProtectionEvent" type="tns:AnnualDividendProtectionEvent"/>
				</xsd:sequence>
				<xsd:attribute name="id" type="xsd:ID" />
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="ContinuousDividendEvent">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">A clause that forces the value of the underlying's dividends to a given continuous rate during the pricing of a CB</xsd:documentation>
    </xsd:annotation>
		<xsd:all>
			<xsd:element minOccurs="0" name="schedule" type="tns:Schedule" />
			<xsd:element name="dividend">
				<xsd:complexType>
          <xsd:annotation>
            <xsd:documentation xml:lang="en">The continuous rate of substitution dividend, it appears in the Value field of the clause</xsd:documentation>
          </xsd:annotation>
					<xsd:simpleContent>
						<xsd:extension base="xsd:double">
							<xsd:attribute name="inPercent" type="xsd:boolean"></xsd:attribute>
						</xsd:extension>
					</xsd:simpleContent>
				</xsd:complexType>
			</xsd:element>
		</xsd:all>
	</xsd:complexType>
	<xsd:complexType name="ContinuousDividend">
		<xsd:annotation>
			<xsd:documentation xml:lang="en">A type for defining ContinuousDividend clauses.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="tns:Feature">
				<xsd:sequence>
					<xsd:element maxOccurs="unbounded" minOccurs="0" name="continuousDividendEvent" type="tns:ContinuousDividendEvent"/>
				</xsd:sequence>
				<xsd:attribute name="id" type="xsd:ID" />
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="Isf">
		<xsd:annotation>
			<xsd:documentation xml:lang="en">A type for defining Isf clauses,defining a CB that is not redeemed in cash, but into a certain number of shares which depend on the value of the underlying.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="tns:Feature">
				<xsd:sequence>
					<xsd:element minOccurs="0" name="schedule" type="tns:Schedule" />
					<xsd:element name="incrementalShareFactor">
						<xsd:complexType>
              <xsd:annotation>
                <xsd:documentation xml:lang="en">Incremental Share Factor,  it appears in the Value field of the clause</xsd:documentation>
              </xsd:annotation>
							<xsd:simpleContent>
								<xsd:extension base="xsd:double">
									<xsd:attribute name="inPercent" type="xsd:boolean"></xsd:attribute>
								</xsd:extension>
							</xsd:simpleContent>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
				<xsd:attribute name="id" type="xsd:ID" />
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="Pride">
		<xsd:annotation>
			<xsd:documentation xml:lang="en">A type for defining Pride clauses,defining a CB that is not redeemed in cash, but into a certain number of shares which depend on the value of the underlying.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="tns:Feature">
				<xsd:sequence>
					<xsd:element minOccurs="0" name="schedule" type="tns:Schedule" />
					<xsd:element minOccurs="0" name="spotMin" type="tns:Trigger" />
					<xsd:element minOccurs="0" name="spotMax" type="tns:Trigger" />
					<xsd:element minOccurs="0" name="slope" type="common:DoubleInPercent"/>
				</xsd:sequence>
				<xsd:attribute name="id" type="xsd:ID" />
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="PricingForSwap">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">Assumptions and Models applied for the Theoretical Valuation of a Swap Instrument</xsd:documentation>
    </xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="tns:Pricing">
				<xsd:sequence>
					<xsd:element minOccurs="0" name="calculationDate" type="xsd:date">
						<xsd:annotation>
							<xsd:documentation xml:lang="en">Calculation Date</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element minOccurs="0" name="calculationValue" type="xsd:double">
						<xsd:annotation>
							<xsd:documentation xml:lang="en">Calculation Value</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element minOccurs="0" name="family" type="xsd:normalizedString">
						<xsd:annotation>
							<xsd:documentation xml:lang="en">The possible fields depend on those specified in the yield curve family table and must be written in upper camel</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element minOccurs="0" name="familyOtherCurrency" type="tns:Currency"/>
					<xsd:element minOccurs="0" name="familySpread" type="xsd:double"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType abstract="true" name="InstrumentForSwap">
		<xsd:annotation>
      <xsd:documentation xml:lang="en">An Instrument representing a generic Swap Transaction that may be agreed between two counterparties</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="tns:Instrument">
				<xsd:sequence>
					<xsd:element minOccurs="0" name="pricing" type="tns:PricingForSwap" />
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:simpleType name="RollingMethod">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">Methodology that drives the cash flow generation of an Equity Swap or Basket Swap</xsd:documentation>
    </xsd:annotation>
		<xsd:restriction base="xsd:normalizedString">
			<xsd:enumeration value="Undefined" />
			<xsd:enumeration value="ForwardTradeDate" />
			<xsd:enumeration value="ForwardEffectiveDate" />
		</xsd:restriction>
	</xsd:simpleType>
  <xsd:complexType name="Clauses">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">List of specific Clauses that impact the Payoff or Pricing of an Instrument</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" ref="tns:feature"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="Swap">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">An Instrument representing a generic Swap Transaction that may be agreed between two counterparties</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="tns:InstrumentForSwap">
        <xsd:sequence>
          <xsd:element minOccurs="0" ref="tns:abstractCalculationAgent">
            <xsd:annotation>
              <xsd:documentation source="http://www.sophis.net" xml:lang="en">The concrete type is defined in sophis.xsd</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="withMarginCall" type="xsd:boolean" default="false"/>
          <xsd:element minOccurs="0" name="breakEvenWithoutFixedCoupon" type="xsd:boolean" default="false"/>
          <xsd:element minOccurs="0" name="alignFlowDatesForBothLegs" type="xsd:boolean" default="false"/>
          <xsd:element minOccurs="0" name="rollingMethod" type="tns:RollingMethod" />
          <xsd:element minOccurs="0" name="isTemplateSwap" type="xsd:boolean" default="false"/>
          <xsd:element minOccurs="0" name="notionalExchange" type="tns:NotionalExchange" />
          <xsd:element minOccurs="0" name="DTCCConvention" type="tns:DTCCConventionType" />
          <xsd:element minOccurs="0" name="calendarsList" type="tns:CalendarsList" />
          <xsd:element name="receivingLeg" type="tns:LegContainerType">
				<xsd:annotation>
							<xsd:documentation xml:lang="en">Receiving Leg.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="payingLeg" type="tns:LegContainerType">
				<xsd:annotation>
							<xsd:documentation xml:lang="en">Paying Leg.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
          <xsd:element minOccurs="0" name="clauses" type="tns:Clauses" />
                    <!-- Inserting Extended Models Data Here -->

          <!-- Model CB Swap/Convertible Asset Swap -->
					<xsd:element minOccurs="0" name="ASCOT_OPTION_PAYER" type="xsd:short"/>
					<xsd:element minOccurs="0" name="ASCOT_START_DATE" type="xsd:date"/>
					<xsd:element minOccurs="0" name="ASCOT_END_DATE" type="xsd:date"/>
					<xsd:element minOccurs="0" name="ASCOT_STRIKE_PENALTY" type="xsd:double"/>
					<!-- Gamma Swap -->
					<xsd:element minOccurs="0" name="GAMMASWAP_FIXINGCOLUMN" type="xsd:short"/>
					<xsd:element minOccurs="0" name="GAMMASWAP_TIMESTEP" type="xsd:int"/>
					<xsd:element minOccurs="0" name="GAMMASWAP_STRIKESTEP" type="xsd:int"/>
					<xsd:element minOccurs="0" name="GAMMASWAP_WITHDIVIDENDS" type="xsd:boolean"/>
					<!-- Variance Swap -->
					<xsd:element minOccurs="0" name="VARSWAP_TYPE" type="xsd:short"/>
					<xsd:element minOccurs="0" name="VARSWAP_BARR_LOW" type="xsd:double"/>
					<xsd:element minOccurs="0" name="VARSWAP_BARR_UP" type="xsd:double"/>
					<xsd:element minOccurs="0" name="VARSWAP_FIXINGTYPE" type="xsd:short"/>
					<xsd:element minOccurs="0" name="VARSWAP_DENOMTYPE" type="xsd:short"/>
					<xsd:element minOccurs="0" name="VARSWAP_ADJUSTED" type="xsd:boolean"/>
					<xsd:element minOccurs="0" name="VARSWAP_CAP" type="xsd:double"/>
					<xsd:element minOccurs="0" name="VARSWAP_USERDENOM" type="xsd:double"/>
					<xsd:element minOccurs="0" name="VARSWAP_INTRADAYDELTA" type="xsd:boolean"/>
					<xsd:element minOccurs="0" name="VARSWAP_WITHDIVIDENDS" type="xsd:boolean"/>
					<xsd:element minOccurs="0" name="VARSWAP_SPLIT_TABLEs" type="tns:VarswapSplitTables"/>
					<xsd:element minOccurs="0" name="VARSWAP_MDE_TABLEs" type="tns:VarswapMDETables"/>
					<xsd:element minOccurs="0" name="VARSWAP_FIXINGCOLUMN" type="xsd:short"/>
					<xsd:element minOccurs="0" name="variance" type="tns:Variance"/>
					<!-- Common to Variance Swaps and Credit Swaps -->
					<xsd:element minOccurs="0" name="NTH_TO_DEF" type="xsd:short"/>
          <!-- Model Credit Swap/One Factor Nth to Default AND CDO Swap -->
          <xsd:element minOccurs="0" name="MIN_CDO" type="xsd:double"/>
          <xsd:element minOccurs="0" name="MAX_CDO" type="xsd:double"/>
          <xsd:element minOccurs="0" name="CORREL_TYPE" type="xsd:string"/>
          <xsd:element minOccurs="0" name="CORREL1" type="xsd:double"/>
          <xsd:element minOccurs="0" name="CORREL2" type="xsd:double"/>
          <xsd:element minOccurs="0" name="FIXED_CORREL" type="xsd:boolean"/>
          <xsd:element minOccurs="0" name="NBDRAW" type="xsd:int"/>
					<!-- Commodity Swap -->
					<xsd:element minOccurs="0" name="swapNotionalUnit" type="xsd:string"/>
					<xsd:element minOccurs="0" name="flowFactor" type="tns:FlowFactor"/>
					<xsd:element minOccurs="0" name="paymentDaysOffset" type="tns:PaymentDaysOffset"/>
					<xsd:element minOccurs="0" name="VARSWAP_SMILE_INTEGRATION" type="xsd:short"/>
          			<!-- TRS: model Basket Swap -->
          <xsd:element minOccurs="0" name="valuationType" type="xsd:short" />
          <xsd:element minOccurs="0" name="pricingRelativeEndDate" type="common:AdjustableOrRelativeDate" />
          <xsd:element minOccurs="0" name="basketGreeksSplit" type="xsd:short" />
		      <xsd:element minOccurs="0" name="isForwardSwap" type="xsd:boolean" />
          <xsd:element minOccurs="0" name="BASKET_SWAP_HISTORYs" type="tns:BasketSwapHistorys"/>
			<xsd:element minOccurs="0" name="hasLinePicking" type="xsd:boolean">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">Line picking can be used to overrule the reporting method so the user gets to choose how to decrease quantities.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
					<xsd:element minOccurs="0" name="reportingMethod" type="xsd:string">
						<xsd:annotation>
							<xsd:documentation xml:lang="en">Reporting method for the basket swap. If not specified when creating a new instrument, WAP is used.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
          <xsd:element minOccurs="0" name="fundingFixingMethod" type="FundingFixingMethod">
            <xsd:annotation>
              <xsd:documentation xml:lang="en">Fixing used to compute the notional for the Interest Rate leg.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
					<!-- TRS: model Price Return Swap -->
					<xsd:element minOccurs="0" name="prsFundingType" type="tns:PrsFundingType">
						<xsd:annotation>
							<xsd:documentation xml:lang="en">Funding type for the price return swap. If not specified when creating a new instrument, AdjustedEquityFixing is used.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
          <!-- TRS: models Basket Swap and Price Return Swap -->
          <xsd:element minOccurs="0" name="isFullyFunded" type="xsd:boolean">
            <xsd:annotation>
              <xsd:documentation xml:lang="en">Specifies if the instrument is fully funded or not. Only for Basket Swaps and Price Return Swaps</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
			<xsd:element minOccurs="0" name="isQuantoBasket" type="xsd:boolean">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">Specifies if the instrument is quanto or not. Only for Basket Swaps and Price Return Swaps</xsd:documentation>
				</xsd:annotation>
			</xsd:element>

			<xsd:element minOccurs="0" name="syntheticDividendsList" type="tns:BasketSwapSyntheticDividendsList">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">Gives synthetic dividends. Only for Basket Swap Model.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>

			<!-- MarkToMarketCrossCurrencySwap -->
			<xsd:element minOccurs="0" name="markToMarketCrossCurrencySwap" type="tns:MarkToMarketCrossCurrencySwap" />

          			<!-- End of Extended Models Data -->
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="MarkToMarketCrossCurrencySwap">
    <xsd:sequence>
      <xsd:element name="variableNotionalLeg" type="tns:VariableNotionalLeg" />
      <xsd:element minOccurs="0" name="fixingType" type="tns:FixingType">
        <xsd:annotation>
          <xsd:documentation xml:lang="en">Fixing used by the calculation agent. The possible fields are the sophis one and those specified in the new_history_column table.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="fixingTypePivotVsCurrency1" type="tns:FixingType">
        <xsd:annotation>
          <xsd:documentation xml:lang="en">Fixing used by the calculation agent for NDF cross fixing. The possible fields are the sophis one and those specified in the new_history_column table.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="fixingTypePivotVsCurrency2" type="tns:FixingType">
        <xsd:annotation>
          <xsd:documentation xml:lang="en">Fixing used by the calculation agent for NDF cross fixing. The possible fields are the sophis one and those specified in the new_history_column table.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
	</xsd:sequence>
  </xsd:complexType>
  <xsd:simpleType name="VariableNotionalLeg">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">Specifies which leg will be reajusted.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:normalizedString">
      <xsd:enumeration value="ReceivingLeg" />
      <xsd:enumeration value="PayingLeg" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:complexType name="DTCCConventionType">
    <xsd:simpleContent>
      <xsd:extension base="xsd:normalizedString">
        <xsd:attribute name="typeScheme" type="xsd:string" />
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="VarswapSplitTables">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">List of Split Events that apply to the Underlying of a Variance Swap Contract</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="VARSWAP_SPLIT_TABLE" type="tns:VarswapSplitTable"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="VarswapSplitTable">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">A Split Event that apply to the underlying of a Variance Swap Contract</xsd:documentation>
    </xsd:annotation>
    <xsd:all>
      <xsd:element minOccurs="0" name="VARSWAP_SPLIT_DATE" type="xsd:date"/>
      <xsd:element minOccurs="0" name="CODE" type="tns:Underlyer"/>
      <xsd:element minOccurs="0" name="VARSWAP_SPLIT_FACTOR" type="xsd:double"/>
    </xsd:all>
	</xsd:complexType>
	<xsd:complexType name="VarswapMDETables">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">List of Market Disruption Events that apply to the payoff of a Variance Swap Contract</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="VARSWAP_MDE_TABLE" type="tns:VarswapMDETable"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="VarswapMDETable">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">A Market Disruption Event that apply to the payoff of a Variance Swap Contract</xsd:documentation>
    </xsd:annotation>
    <xsd:all>
      <xsd:element minOccurs="0" name="VARSWAP_MDE_DATE" type="xsd:date"/>
      <xsd:element minOccurs="0" name="CODE" type="tns:Underlyer"/>
    </xsd:all>
	</xsd:complexType>
	<xsd:complexType name="Variance">
		<xsd:annotation>
		  <xsd:documentation xml:lang="en">Specific data for variance swaps</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
		  <xsd:choice>
			<xsd:annotation>
			  <xsd:documentation xml:lang="en">
				Choice between expressing the strike as volatility or variance (strike=20 means 20%).
			  </xsd:documentation>
			</xsd:annotation>
			<xsd:element name="volatilityStrikePrice" type="xsd:double"/>
			<xsd:element name="varianceStrikePrice" type="xsd:double"/>
		  </xsd:choice>
		  <xsd:element minOccurs="0" name="vegaNotionalAmount" type="xsd:double">
			<xsd:annotation>
			  <xsd:documentation xml:lang="en">
				Vega Notional represents the approximate gain/loss at maturity for a 1% difference between RVol (realised vol) and KVol (strike vol). It does not necessarily represent the Vega Risk of the trade.
			  </xsd:documentation>
			</xsd:annotation>
		  </xsd:element>
		</xsd:sequence>
	</xsd:complexType>
  <xsd:complexType name="CalendarsList">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">List of Calendars that apply to the Cash Flow generation of an Instrument, generally a Swap</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="calendar" type="tns:Calendar">
        <xsd:annotation>
          <xsd:documentation xml:lang="en">List of Calendars.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="Calendar">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">Defines a business day calendar.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:choice>
        <xsd:element name="businessCenter" type="xsd:normalizedString" />
        <xsd:sequence>
      <xsd:element name="currency" type="tns:Currency"/>
         <xsd:element minOccurs="0" name="place" type="xsd:normalizedString"/>
         <xsd:element minOccurs="0" name="market" type="tns:Market"/>
        </xsd:sequence>
      </xsd:choice>
      <xsd:element name="calendarApplyTo" type="tns:CalendarApplyTo"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:simpleType name="FlowFactor">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">For Swaps, especially Commodity Swaps, defines if the Notional of each flow is always identical (Ignore quantity) or depends on the number of days during the flow.
Consider, for example, a Commodity Swap from 1/1/2011 to 10/1/2011.
The flow notional will be equal to the Swap notional in mode "Ignore quantity".
The flow notional will be 10*1/31 of the Swap notional in mode "Monthly basis".
The flow notional will be 10 times the Swap notional in mode "Cal. days", which is mainly used for daily gas delivery/financial swaps. </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:normalizedString">
      <xsd:enumeration value="Monthly basis" />
      <xsd:enumeration value="Ignore quantity" />
      <xsd:enumeration value="Cal. days" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="CalendarApplyTo">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">Defines where the Advanced Calendar of the Swap should apply.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:normalizedString">
      <xsd:enumeration value="All"/>
      <xsd:enumeration value="Only Rolling"/>
      <xsd:enumeration value="Only Receiving"/>
      <xsd:enumeration value="Only Paying"/>
      <xsd:enumeration value="Both Payments"/>
      <xsd:enumeration value="Rolling"/>
      <xsd:enumeration value="Payment"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="ForexOrder">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">Defines if the FX rate corresponds to market way or to the natural order defines by the conversion to be applied.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:normalizedString">
      <xsd:enumeration value="QuotationOrder"/>
      <xsd:enumeration value="MajorOrder"/>
      <xsd:enumeration value="MinorOrder"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:complexType name="LegContainerType">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">List of available Leg Types for Swap Transactions</xsd:documentation>
    </xsd:annotation>
    <xsd:choice>
      <xsd:annotation>
        <xsd:documentation xml:lang="en">Selection among Swap Leg Types</xsd:documentation>
      </xsd:annotation>
			<xsd:element minOccurs="0" name="swapStream" type="tns:SwapStream" />
			<xsd:element minOccurs="0" name="creditLeg" type="tns:CreditLeg" />
			<xsd:element minOccurs="0" name="assetLeg" type="tns:AssetLeg" />
			<xsd:element minOccurs="0" name="equityLeg" type="tns:EquityLeg" />
			<xsd:element minOccurs="0" name="inflationZCLeg" type="tns:InflationLeg" />
            <xsd:element minOccurs="0" name="inflationYoYLeg" type="tns:InflationLeg" />
			<xsd:element minOccurs="0" name="inflationStructuredLeg" type="tns:InflationStructuredLeg" />
      <xsd:element name="physicalLeg" type="tns:PhysicalFutureLeg" minOccurs="0"/>
      <xsd:element name="futureLeg" type="tns:PhysicalFutureLeg" minOccurs="0"/>
      <xsd:element name="cashLeg" type="tns:CashLeg" minOccurs="0"/>
			<xsd:element minOccurs="0" name="emptyLeg" type="tns:EmptyLeg"/>
		</xsd:choice>
	</xsd:complexType>
  <xsd:complexType name="Leg">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">A generic type representing the payoff agreed by a counterparty of a Swap Transaction</xsd:documentation>
    </xsd:annotation>
  </xsd:complexType>
  <xsd:complexType name="PhysicalFutureLeg">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">Defines a leg in a Commodity Swap.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="tns:Leg">
        <xsd:sequence>
          <xsd:element name="calculationPeriodDates" type="tns:CalculationPeriodDates" minOccurs="0"/>
          <xsd:element name="commoditiesFixingCode" type="xsd:string"/>
          <xsd:element name="forexFixingCode" type="xsd:string"/>
          <xsd:element name="secondStartDate" type="common:AdjustableOrRelativeDate" minOccurs="0"/>
          <xsd:element name="secondEndDate" type="common:AdjustableOrRelativeDate" minOccurs="0"/>
          <xsd:element name="notional" type="xsd:double" minOccurs="0"/>
          <xsd:element name="notionalUnit" type="xsd:string" minOccurs="0"/>
          <xsd:element name="delivery" type="tns:Delivery" minOccurs="0"/>
          <xsd:element name="underlyer" type="tns:Underlyer"/>
          <xsd:element name="monthOffset" type="xsd:int" minOccurs="0"/>
          <xsd:element name="dayOffset" type="xsd:int" minOccurs="0"/>
          <xsd:element name="numberDays" type="xsd:int" minOccurs="0"/>
          <xsd:element name="spread" type="xsd:double" minOccurs="0"/>
          <xsd:element name="forexInformation" type="tns:ForexInformation" minOccurs="0"/>
          <xsd:element name="fixingTypeCode" type="xsd:int"/>
          <xsd:element name="fixingTypeString" type="xsd:string"/>
          <xsd:element name="physicalFutureFlowsList" type="tns:PhysicalFutureFlowsList" minOccurs="0"/>
          <xsd:element name="underlyingMNPBasket" type="tns:MNPBasket" minOccurs="0"/>
          <xsd:element name="deliveryQuantities" type="tns:NonStandardDeliveryProfileType" minOccurs="0"/>
          <xsd:element name="totalNotionalQuantity" type="xsd:decimal"  minOccurs="0">
            <xsd:annotation >
              <xsd:documentation source="fpml.org" xml:lang="en">The Total Notional Quantity.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="CashLeg">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">Defines the payment price, per unit, in a Commodity Forward or Fixed/Float commodity Swap.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="tns:Leg">
        <xsd:sequence>
          <xsd:element name="calculationPeriodDates" type="tns:CalculationPeriodDates" minOccurs="0"/>
          <xsd:element name="cashAmount" type="xsd:double"/>
          <xsd:element name="cashUnit" type="xsd:string"/>
          <xsd:element name="forexInformation" type="tns:ForexInformation" minOccurs="0"/>
          <xsd:element name="cashLegFlowsList" type="tns:CashLegFlowsList" minOccurs="0"/>
          <xsd:element name="totalNotionalQuantity" type="xsd:decimal"  minOccurs="0">
            <xsd:annotation >
              <xsd:documentation source="fpml.org" xml:lang="en">The Total Notional Quantity.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="SwapStream">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">A type defining a schedule of rates or amounts in terms of an initial value and then a series of step date and value pairs. On each step date the rate or amount changes to the new step value. The series of step date and value pairs are optional. If not specified, this implies that the initial value remains unchanged over time.</xsd:documentation>
    </xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="tns:Leg">
				<xsd:sequence>
					<xsd:element minOccurs="0" name="calculationPeriodDates" type="tns:CalculationPeriodDates">
						<xsd:annotation>
							<xsd:documentation xml:lang="en">A type defining the parameters used to generate the calculation period dates schedule</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element minOccurs="0" name="paymentDates" type="tns:PaymentDates">
						<xsd:annotation>
							<xsd:documentation xml:lang="en">A type defining parameters used to generate the payment dates schedule, including the specification of early or delayed payments. Payment dates are determined relative to the calculation period dates or the reset dates.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element minOccurs="0" name="resetDates" type="tns:ResetDates">
						<xsd:annotation>
							<xsd:documentation xml:lang="en">A type defining the parameters used to generate the reset dates schedule and associated fixing dates. The reset dates are determined relative to the calculation periods schedules dates.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element minOccurs="0" name="calculationPeriodAmount" type="tns:CalculationPeriodAmount" />
					<xsd:element minOccurs="0" name="legIssuer" type="tns:SwapThirdParty" />
					<xsd:element minOccurs="0" name="forexInformation" type="tns:ForexInformation" />
          <xsd:element minOccurs="0" name="exoticPayoff" type="tns:ExoticPayoff" />
					<xsd:element minOccurs="0" name="rangeAccrual" type="tns:RangeAccrual" />
          <xsd:element minOccurs="0" name="exoticType" type="tns:ExoticType" />
          <xsd:element minOccurs="0" name="exoticSpread" type="tns:ExoticSpread" />
          <xsd:element minOccurs="0" name="isCancelable" type="xsd:boolean" />
          <xsd:element minOccurs="0" name="isAutocallable" type="xsd:boolean" />
          <xsd:element minOccurs="0" name="autocallTrigger" type="xsd:double" />
					<xsd:element minOccurs="0" name="fixedFlowsList" type="tns:FixedFlowsList" />
					<xsd:element minOccurs="0" name="floatingFlowsList" type="tns:FloatingFlowsList" />
          <xsd:element minOccurs="0" name="inflationFlowsList" type="tns:InflationFlowsList" />
					<xsd:element minOccurs="0" name="extraFunding" type="tns:ExtraFunding" />
          <xsd:element minOccurs="0" name="separateSpreadInterestTicket" type="xsd:boolean">
            <xsd:annotation>
              <xsd:documentation xml:lang="en">Flag specifying if Interest Rate and Spread parts of the interest should be generated in separate tickets.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="defineFundingSpreadPerComponent" type="xsd:boolean">
            <xsd:annotation>
              <xsd:documentation xml:lang="en">Flag specifying if funding spread should be managed by per component.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
<xsd:complexType name="InflationLeg">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">A type of Swap Leg that represents either a stream of Zero-Coupon or Year-on-Year Inflation-linked coupons</xsd:documentation>
    </xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="tns:SwapStream">
				<xsd:sequence>
					<xsd:element minOccurs="0" name="inflationIndex" type="xsd:int" />
          <xsd:element minOccurs="0" name="inflationIndexIdentifier" type="tns:Identifier"></xsd:element>
					<xsd:element minOccurs="0" name="inflationRule" type="xsd:int" />
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="InflationStructuredLeg">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">A type of Swap Leg that represents a stream of Structured Inflation coupons</xsd:documentation>
    </xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="tns:InflationLeg">
				<xsd:sequence>
					<xsd:element minOccurs="0" name="cap" type="xsd:double" />
					<xsd:element minOccurs="0" name="floor" type="xsd:double" />
					<xsd:element minOccurs="0" name="floorLimit" type="xsd:double" />
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="AssetLeg">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">A type of Swap Leg that represents a stream of coupons linked to a Bond or Debt Instruments</xsd:documentation>
    </xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="tns:Leg">
				<xsd:sequence>
					<xsd:element minOccurs="0" name="currency" type="tns:Currency" />
					<xsd:element minOccurs="0" name="adjustmentMethod" type="tns:AdjustmentMethod" />
					<xsd:element minOccurs="0" name="effectiveDate" type="common:AdjustableOrRelativeDate">
						<xsd:annotation>
							<xsd:documentation xml:lang="en">Issue date of the contract.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element minOccurs="0" name="scheduledTerminationDate" type="common:AdjustableOrRelativeDate">
						<xsd:annotation>
							<xsd:documentation xml:lang="en">The scheduled date on which the credit protection will lapse.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element minOccurs="0" name="dateAdjustments" type="tns:HolidayAdjustementEnum" />
					<xsd:element minOccurs="0" name="underlying" type="tns:Identifier" />
					<xsd:element minOccurs="0" name="assetNotional" type="xsd:double" />
					<xsd:element minOccurs="0" name="stopIfDefault" type="xsd:boolean" />
					<xsd:element minOccurs="0" name="addedCoupon" type="tns:AddedCoupon" />
					<xsd:element minOccurs="0" name="forexInformation" type="tns:ForexInformation" />
					<xsd:element minOccurs="0" name="assetFlowsList" type="tns:AssetFlowsList" />
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>

	<xsd:complexType name="EmptyLeg">
	    <xsd:annotation>
	      <xsd:documentation xml:lang="en">A type of Swap Leg that represents "no leg"</xsd:documentation>
	    </xsd:annotation>
	    <xsd:complexContent>
	      <xsd:extension base="tns:Leg">
	        <xsd:sequence>
	          <xsd:element minOccurs="0" name="currency" type="tns:Currency"/>
	        </xsd:sequence>
	      </xsd:extension>
	    </xsd:complexContent>
  	</xsd:complexType>
	<xsd:complexType name="AddedCoupon">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">Describes the added coupon generation that are exchanged after the expiry of the Underlying Bond in an Asset Swap transaction</xsd:documentation>
    </xsd:annotation>
		<xsd:all>
			<xsd:element name="floatingRateIndex" type="xsd:normalizedString">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">As the index is not part of the interest rate definition, it is supposed to be the first word of the name.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element minOccurs="0" name="indexTenor" type="common:DateInterval" />
			<xsd:element minOccurs="0" name="spread" type="xsd:double">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">The spread is a per annum rate, expressed as a decimal.For purposes of determining a calculation period amount, if positive the spread will be added to the floating rate and if negative the spread will be subtracted from the floating rate.A positive 10 basis point (0.1%) spread would be represented as 0.001.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		   <xsd:element minOccurs="0" name="tags" type="tag:Tags">
            <xsd:annotation>
              <xsd:documentation xml:lang="en">Since 7.1.0 : contains all tags applied to the instrument </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="extraFields" type="common:ExtraFields">
            <xsd:annotation>
              <xsd:documentation xml:lang="en">Since 5.3.3 : contains all extensible elements (toolkit datas for example)</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
		</xsd:all>
	</xsd:complexType>
	<xsd:complexType name="AssetFlowsList">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">List of Asset Flows</xsd:documentation>
    </xsd:annotation>
		<xsd:sequence>
			<xsd:element maxOccurs="unbounded" minOccurs="0" name="assetFlow" type="tns:AssetFlow">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">List of Asset Flows.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="AssetFlow">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">A Cash Flow generated by a Swap's Asset Leg</xsd:documentation>
    </xsd:annotation>
		<xsd:all>
			<xsd:element minOccurs="0" name="isForced" type="xsd:boolean" />
			<xsd:element minOccurs="0" name="startDate" type="xsd:date" />
			<xsd:element minOccurs="0" name="endDate" type="xsd:date" />
			<xsd:element minOccurs="0" name="settlementDate" type="common:AdjustableOrRelativeDate" />
			<xsd:element minOccurs="0" name="percentage" type="xsd:double" />
			<xsd:element name="seniority" type="xsd:double">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">Fixed coupon value.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:all>
	</xsd:complexType>
	<xsd:complexType name="CalculationPeriodDates">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">A type defining the parameters used to generate the calculation period dates schedule</xsd:documentation>
    </xsd:annotation>
		<xsd:all>
			<xsd:element minOccurs="0" name="effectiveDate" type="common:AdjustableOrRelativeDate">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">Issue date of the contract.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
      <xsd:element minOccurs="0" name="effectiveDateType" type="tns:dateType">
        <xsd:annotation>
          <xsd:documentation xml:lang="en">Issue date type (Regular, IMM Monthly or IMM Quarterly).</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
			<xsd:element minOccurs="0" name="terminationDate" type="common:AdjustableOrRelativeDate">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">Expiration date of the contract.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
      <xsd:element minOccurs="0" name="terminationDateType" type="tns:dateType">
        <xsd:annotation>
          <xsd:documentation xml:lang="en">Expiration date type (Regular, IMM Monthly or IMM Quarterly).</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
			<xsd:element minOccurs="0" name="calculationPeriodDatesAdjustments" type="tns:CalculationPeriodDatesAdjustments">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">The business day convention to apply to each calculation period end date if it would otherwise fall on a day that is not a business day in the specified financial business centers.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element minOccurs="0" name="firstRegularPeriodStartDate" type="common:AdjustableOrRelativeDate" />
			<xsd:element minOccurs="0" name="lastRegularPeriodEndDate" type="common:AdjustableOrRelativeDate" />
			<xsd:element minOccurs="0" name="stubPeriodType" type="tns:StubPeriodType" />
			<xsd:element name="stubPeriodTypeAlt" type="tns:StubPeriodType" minOccurs="0" />
			<xsd:element minOccurs="0" name="calculationPeriodFrequency" type="tns:CalculationPeriodFrequency" />
		</xsd:all>
	</xsd:complexType>
	<xsd:complexType name="CalculationPeriodDatesAdjustments">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">The business day convention to apply to each calculation period end date if it would otherwise fall on a day that is not a business day in the specified financial business centers</xsd:documentation>
    </xsd:annotation>
		<xsd:sequence>
			<xsd:element minOccurs="0" name="businessDayConvention" type="tns:HolidayAdjustementEnum" />
			<xsd:element minOccurs="0" name="adjustmentMethod" type="tns:AdjustmentMethod" />
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="CalculationPeriodFrequency">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">Specifies the frequency of a stream of Cash Flows</xsd:documentation>
    </xsd:annotation>
		<xsd:all>
			<xsd:element minOccurs="0" name="periodMultiplier" type="xsd:int" />
			<xsd:element minOccurs="0" name="periodEnum" type="common:PeriodEnum" />
			<xsd:element name="rollConvention" type="tns:RollConventionEnum">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">The convention for determining the sequence of calculation period end dates. It is used in conjunction with a specified frequency and the regular period start date of a calculation period.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:all>
	</xsd:complexType>
	<xsd:complexType name="PaymentDates">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">A type defining parameters used to generate the payment dates schedule, including the specification of early or delayed payments. Payment dates are determined relative to the calculation period dates or the reset dates.</xsd:documentation>
    </xsd:annotation>
		<xsd:all>
			<xsd:element minOccurs="0" name="paymentFrequency" type="tns:PaymentFrequency" />
			<xsd:element minOccurs="0" name="payRelativeTo" type="tns:PayRelativeToEnum" />
			<xsd:element minOccurs="0" name="paymentDaysOffset" type="tns:PaymentDaysOffset" />
			<xsd:element minOccurs="0" name="paymentDatesAdjustments" type="tns:HolidayAdjustementEnum" />
			<xsd:element minOccurs="0" name="firstPaymentDate" type="common:AdjustableOrRelativeDate" />
		</xsd:all>
	</xsd:complexType>
	<xsd:complexType name="PaymentFrequency">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">Specifies the frequency at which the instrument pays, e.g. 6M</xsd:documentation>
    </xsd:annotation>
		<xsd:all>
			<xsd:element minOccurs="0" name="periodMultiplier" type="xsd:int" />
			<xsd:element minOccurs="0" name="periodEnum" type="common:PeriodEnum" />
		</xsd:all>
	</xsd:complexType>
	<xsd:complexType name="PaymentDaysOffset">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">Parameters to specify a time lag between coupon End Date and Payment Date</xsd:documentation>
    </xsd:annotation>
		<xsd:all>
			<xsd:element minOccurs="0" name="periodMultiplier" type="xsd:int" />
			<xsd:element minOccurs="0" name="periodEnum" type="common:PeriodEnum" />
			<xsd:element name="dayType" type="common:DayTypeEnum">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">The convention for determining the sequence of calculation period end dates. It is used in conjunction with a specified frequency and the regular period start date of a calculation period.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element minOccurs="0" name="businessDayConvention" type="common:BusinessDayConventionEnum">
				<xsd:annotation>
					<xsd:documentation source="http://www.FpML.org" xml:lang="en">The convention for
						adjusting a date if it would otherwise fall on a day that is not a business day.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:all>
	</xsd:complexType>
	<xsd:complexType name="ResetDates">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">A type defining the parameters used to generate the reset dates schedule and associated fixing dates. The reset dates are determined relative to the calculation periods schedules dates.</xsd:documentation>
    </xsd:annotation>
		<xsd:all>
			<xsd:element minOccurs="0" name="resetRelativeTo" type="tns:ResetRelativeToEnum" nillable="true" />
			<xsd:element minOccurs="0" name="rateCutOffDaysOffset" type="tns:RateCutOffDaysOffset" />
			<xsd:element minOccurs="0" name="resetFrequency" type="tns:ResetFrequency" />
			<xsd:element minOccurs="0" name="resetDatesAdjustments" type="tns:HolidayAdjustementEnum" />
			<xsd:element minOccurs="0" name="roundingMethodType" type="tns:RoundingMethodEnum" />
			<xsd:element minOccurs="0" name="roundingMethodValue" type="xsd:short" />
			<xsd:element minOccurs="0" name="mergeSwapCalendar" type="xsd:boolean" />
		</xsd:all>
	</xsd:complexType>
	<xsd:simpleType name="RoundingMethodEnum">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">Rounding Method for coupon amounts (up, down, nearest...)</xsd:documentation>
    </xsd:annotation>
		<xsd:restriction base="xsd:normalizedString">
			<xsd:enumeration value="None" />
			<xsd:enumeration value="Down" />
			<xsd:enumeration value="Up" />
			<xsd:enumeration value="Nearest" />
			<xsd:enumeration value="Last" />
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:complexType name="RateCutOffDaysOffset">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">Parameters to specify a Floating Rate's fixing date with respect to the Rate period's start and end date</xsd:documentation>
    </xsd:annotation>
		<xsd:all>
			<xsd:element minOccurs="0" name="periodMultiplier" type="xsd:int" />
			<xsd:element minOccurs="0" name="periodEnum" type="common:PeriodEnum" />
			<xsd:element name="dayType" type="common:DayTypeEnum">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">The convention for determining the sequence of calculation period end dates. It is used in conjunction with a specified frequency and the regular period start date of a calculation period.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:all>
	</xsd:complexType>
	<xsd:complexType name="ResetFrequency">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">Specifies the frequency of an Interest Rate coupon schedule</xsd:documentation>
    </xsd:annotation>
		<xsd:all>
			<xsd:element minOccurs="0" name="periodMultiplier" type="xsd:int" />
			<xsd:element minOccurs="0" name="periodEnum" type="common:PeriodEnum" />
		</xsd:all>
	</xsd:complexType>
	<xsd:complexType name="CalculationPeriodAmount">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">Parameters that determine how a stream of Interest Rate Coupons are computed</xsd:documentation>
    </xsd:annotation>
		<xsd:all>
			<xsd:element minOccurs="0" name="calculation" type="tns:Calculation" />
		</xsd:all>
	</xsd:complexType>
	<xsd:complexType name="Calculation">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">Parameters that determine how an Interest Rate Coupon is computed</xsd:documentation>
    </xsd:annotation>
		<xsd:sequence>
			<xsd:element name="notionalSchedule" type="tns:NotionalSchedule" />
			<xsd:element minOccurs="0" name="fixedRateSchedule" type="tns:FixedRateSchedule" />
			<xsd:element minOccurs="0" name="floatingRateCalculation" type="tns:FloatingRateCalculation" />
      <xsd:element minOccurs="0" name="couponCapitalization" type="tns:CouponCapitalization"/>
      <xsd:element minOccurs="0" name="rounding" type="tns:Rounding"/>
	  <xsd:element minOccurs="0" name="spreadInFixing" type="xsd:double" />
      <xsd:element minOccurs="0" name="minimum" type="xsd:double" />
      <xsd:element minOccurs="0" name="maximum" type="xsd:double" />
			<xsd:element minOccurs="0" name="dayCountFraction" type="tns:DayCountBasis" />
			<xsd:element minOccurs="0" name="discounting" type="tns:Discounting"/>
		</xsd:sequence>
	</xsd:complexType>
  <xsd:complexType name="Rounding">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">Rounding parameters for Floating Interest Rates</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="roundingMethod" type="tns:RoundingMethodEnum"/>
      <xsd:element name="roundingMethodDecimal" type="xsd:int"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="Discounting">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">Interest Settlement Type of a Swap Leg (in arrears, in advance...)</xsd:documentation>
    </xsd:annotation>
    <xsd:all>
      <xsd:element minOccurs="0" name="discountingType" type="xsd:normalizedString"/>
    </xsd:all>
  </xsd:complexType>
	<xsd:complexType name="NotionalSchedule">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">Describes the amortizing schedule of a Fixed Income instrument</xsd:documentation>
    </xsd:annotation>
		<xsd:all>
			<xsd:element minOccurs="0" name="notionalStepSchedule" type="tns:NotionalStepSchedule" />
			<xsd:element minOccurs="0" name="notionalStepParameters" type="tns:NotionalStepRule" />
		</xsd:all>
	</xsd:complexType>
	<xsd:complexType name="NotionalStepRule">
		<xsd:annotation>
      <xsd:documentation xml:lang="en">A parametric representation of the amortizing schedule of a Fixed Income instrument</xsd:documentation>
		</xsd:annotation>
		<xsd:all>
			<xsd:element minOccurs="0" name="stepFrequency" type="tns:StepFrequency" />
			<xsd:element minOccurs="0" name="firstNotionalStepDate" type="xsd:date" />
			<xsd:element minOccurs="0" name="lastNotionalStepDate" type="xsd:date" />
			<xsd:element minOccurs="0" name="notionalStepAmount" type="xsd:double" />
			<xsd:element minOccurs="0" name="notionalFinalAmount" type="xsd:double" />
			<xsd:element minOccurs="0" name="notionalStepRate" type="xsd:float" />
		</xsd:all>
	</xsd:complexType>
	<xsd:complexType name="StepFrequency">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">Frequency of the Amortization Flows</xsd:documentation>
    </xsd:annotation>
		<xsd:all>
			<xsd:element minOccurs="0" name="periodMultiplier" type="xsd:int" />
			<xsd:element minOccurs="0" name="periodEnum" type="common:PeriodEnum" />
		</xsd:all>
	</xsd:complexType>
	<xsd:complexType name="ForexInformation">
		<xsd:annotation>
			<xsd:documentation xml:lang="en">Information on a Leg with a currency different from the swap</xsd:documentation>
		</xsd:annotation>
		<xsd:all>
			<xsd:element minOccurs="0" name="currency" type="tns:Currency" />
			<xsd:element name="forexOrder" type="tns:ForexOrder" />
			<xsd:element minOccurs="0" name="initialForexSpot" type="xsd:double" />
			<xsd:element minOccurs="0" name="presentForexSpot" type="xsd:double" />
			<xsd:element minOccurs="0" name="isQuanto" type="xsd:boolean" />
			<xsd:element minOccurs="0" name="settlementCurrency" type="xsd:normalizedString"/>
      <xsd:element minOccurs="0" name="deliveryCurrency" type="tns:Currency" />
      <xsd:element minOccurs="0" name="forexFixing" type="tns:FixingType" />
      <xsd:element minOccurs="0" name="forexFixingLag" type="xsd:int" />
		</xsd:all>
	</xsd:complexType>
	<xsd:complexType name="NotionalStepSchedule">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">Initial Notional and currenct of a stream of Cash Flows</xsd:documentation>
    </xsd:annotation>
		<xsd:all>
			<xsd:element minOccurs="0" name="initialValue" type="xsd:double" />
			<xsd:element name="currency" type="tns:Currency">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">currency</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:all>
	</xsd:complexType>
	<xsd:complexType name="FixedRateSchedule">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">Describes the parameters to generate a stream of Fixed-Rate Coupons</xsd:documentation>
    </xsd:annotation>
		<xsd:all>
			<xsd:element minOccurs="0" name="initialValue" type="xsd:double" />
			<xsd:element minOccurs="0" name="couponMode" type="tns:YieldCalculation" />
			<xsd:element minOccurs="0" name="couponAccrual" type="tns:YieldCalculation" />
		</xsd:all>
	</xsd:complexType>
  <xsd:complexType name="MNPBasket">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">A type representing a Price formula for commodities. The price formula is defined by the average of prices on a basket of Commodities.
The price corresponds to the weighted average of each component of the basket.
Each component of the basket is defined by a commodity and a set of averaging rules, also known as MNP rules.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
	  <xsd:element minOccurs="0" name="currency" type="tns:Currency" />
      <xsd:element name="MNPBasketComponents" type="tns:MNPBasketComponent" minOccurs="0" maxOccurs="unbounded">
        <xsd:annotation>
          <xsd:documentation xml:lang="en">Composition of an MNP basket.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
	<xsd:complexType name="DeliveryProfileByHourItemType">
    <xsd:annotation>
			<xsd:documentation xml:lang="en">A type representing the delivery of electricity or gas for a given quantity and a given moment of the day. The unit of the quantity is not defined and depends on the context. The granularity of the moment of the day also depends on the context. It must correspond to a valid "DeliveryPeriod" for the Commodity. The Commodity is not defined and depends on the context.</xsd:documentation>
    </xsd:annotation>
		<xsd:all>
			<xsd:element minOccurs="0" name="hour" type="xsd:string" />
			<xsd:element minOccurs="0" name="quantity" type="xsd:double" />
		</xsd:all>
	</xsd:complexType>
  <xsd:complexType name="DeliveryProfileByHourType">
    <xsd:annotation>
			<xsd:documentation xml:lang="en">A type representing the delivery of electricity or gas during the day based on the 'DeliveryProfileByHourItemType'.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="list" type="tns:DeliveryProfileByHourItemType" minOccurs="0" maxOccurs="unbounded" />
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="DeliveryProfileByDayType">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">A type representing the delivery of electricity or gas during a given day.</xsd:documentation>
    </xsd:annotation>
	<xsd:all>
	    <xsd:element minOccurs="0" name="day" type="xsd:date" />
	    <xsd:element minOccurs="0" name="curve" type="xsd:int" />
	    <xsd:element minOccurs="0" name="databyhour" type="tns:DeliveryProfileByHourType" />
    </xsd:all>
  </xsd:complexType>
  <xsd:complexType name="NonStandardDeliveryProfileType">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">A type representing the delivery of electricity or gas during a short or long period of time (from a few minutes to several years) with the finest level of detail. In a non-standard delivery profile, there is no assumption regarding the shape of the delivery, instead, each delivery must be specified, with a quantity defined hour by hour and day by day. For commodities where the time granularity is smaller than 1 hour (e.g. 10 minutes), the delivery must be defined with that level of precision.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="deliveryProfileByDay" type="tns:DeliveryProfileByDayType" minOccurs="0" maxOccurs="unbounded">
        <xsd:annotation>
          <xsd:documentation xml:lang="en">Non standard delivery profile data.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
	<xsd:complexType name="FixedFlowsList">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">A list of fixed interest-rate cash flows</xsd:documentation>
    </xsd:annotation>
		<xsd:sequence>
			<xsd:element maxOccurs="unbounded" minOccurs="0" name="fixedFlow" type="tns:FixedFlow">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">List of Fixed Flows.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>
  <xsd:complexType name="PhysicalFutureFlowsList">
    <xsd:annotation>
			<xsd:documentation xml:lang="en">Represents the list of Commodity payments or delivery valuations for each period of a Commodity Swap.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="physicalFutureFlow" type="tns:PhysicalFutureFlow" minOccurs="0" maxOccurs="unbounded">
        <xsd:annotation>
          <xsd:documentation xml:lang="en">List of Physical/Future Flows.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="CashLegFlowsList">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">Represents the list of cash payments for a Commodity Swap.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="cashLegFlow" type="tns:CashLegFlow" minOccurs="0" maxOccurs="unbounded">
        <xsd:annotation>
          <xsd:documentation xml:lang="en">List of Cash Flows.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
	<xsd:simpleType name="MNPUnitType">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">For the different parameters of an MNP Commodity basket, this type represent the possible type of time units such 'month' or 'weeks'.</xsd:documentation>
    </xsd:annotation>
		<xsd:restriction base="xsd:normalizedString">
			<xsd:enumeration value="Undefined"></xsd:enumeration>
			<xsd:enumeration value="Months"></xsd:enumeration>
			<xsd:enumeration value="Weeks"></xsd:enumeration>
			<xsd:enumeration value="CalDays"></xsd:enumeration>
			<xsd:enumeration value="WorkDays"></xsd:enumeration>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="MNPMeanStartType">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">A type which represents a parameter of the MNP Averaging rule of an MNP Commodity Basket. The exat meaning of the type is described in the Sophis Financial Documentation.
It corresponds to the reference data for which the MNP Price formula is calculated.</xsd:documentation>
    </xsd:annotation>
		<xsd:restriction base="xsd:normalizedString">
			<xsd:enumeration value="Undefined"></xsd:enumeration>
			<xsd:enumeration value="BeginningOfPeriod"></xsd:enumeration>
			<xsd:enumeration value="EndOfPeriod"></xsd:enumeration>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="MNPAverageType">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">A type which represents a parameter of the MNP Averaging rule of an MNP Commodity Basket. The exat meaning of the type is described in the Sophis Financial Documentation.
It corresponds to the type of Averaging which is applied for periods of several months.</xsd:documentation>
    </xsd:annotation>
		<xsd:restriction base="xsd:normalizedString">
			<xsd:enumeration value="Undefined"></xsd:enumeration>
			<xsd:enumeration value="DailyAverage"></xsd:enumeration>
			<xsd:enumeration value="MonthlyAverage"></xsd:enumeration>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="MNPFxFixingRule">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">A type which represents a parameter of the MNP Averaging rule of an MNP Commodity Basket. The exat meaning of the type is described in the Sophis Financial Documentation.
It representing the Fixing to use for the FX average calculation.</xsd:documentation>
    </xsd:annotation>
		<xsd:restriction base="xsd:normalizedString">
			<xsd:enumeration value="Undefined"></xsd:enumeration>
			<xsd:enumeration value="MonthlyFx"></xsd:enumeration>
			<xsd:enumeration value="DailyFx"></xsd:enumeration>
			<xsd:enumeration value="MonthToMonth"></xsd:enumeration>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="MNPEltCompoQuanto">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">A type which represents a parameter of the MNP Averaging rule of an MNP Commodity Basket. The exat meaning of the type is described in the Sophis Financial Documentation.
It represents the FX convertion to use, which can be a Quanto (fixed) or Compo based on an MNP Averaging rule.</xsd:documentation>
    </xsd:annotation>
		<xsd:restriction base="xsd:normalizedString">
			<xsd:enumeration value="Undefined"></xsd:enumeration>
			<xsd:enumeration value="Compo"></xsd:enumeration>
			<xsd:enumeration value="Quanto"></xsd:enumeration>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="MNPFxAverageWay">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">A type which represents a parameter of the MNP Averaging rule of an MNP Commodity Basket. The exat meaning of the type is described in the Sophis Financial Documentation.
It defines if the FX Average should be calculated according to FX Market Way or according to the FX way implied by the change of currency from the Commodity Currency to the Basket Currency.</xsd:documentation>
    </xsd:annotation>
		<xsd:restriction base="xsd:normalizedString">
			<xsd:enumeration value="Undefined"></xsd:enumeration>
			<xsd:enumeration value="BasketCommo"></xsd:enumeration>
			<xsd:enumeration value="CommoBasket"></xsd:enumeration>
			<xsd:enumeration value="MarketWay"></xsd:enumeration>
		</xsd:restriction>
	</xsd:simpleType>
  <xsd:complexType name="MNPBasketFxParameters">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">A type which represents a parameter of the MNP Averaging rule of an MNP Commodity Basket. The exat meaning of the type is described in the Sophis Financial Documentation.
It represents the MNP parameters for the FX Averaging calculation.</xsd:documentation>
    </xsd:annotation>
    <xsd:all>
      <xsd:element name="fxRule" type="tns:MNPFxFixingRule" minOccurs="0"/>
      <xsd:element name="typeElt" type="tns:MNPEltCompoQuanto" minOccurs="0"/>
      <xsd:element name="quantoFx" type="xsd:double" minOccurs="0"/>
      <xsd:element name="fxSpread" type="xsd:double" minOccurs="0"/>
      <xsd:element name="fxMValue" type="xsd:int" minOccurs="0"/>
      <xsd:element name="fxMUnit" type="tns:MNPUnitType" minOccurs="0"/>
      <xsd:element name="fxNValue" type="xsd:int" minOccurs="0"/>
      <xsd:element name="fxNUnit" type="tns:MNPUnitType" minOccurs="0"/>
      <xsd:element name="fxPValue" type="xsd:int" minOccurs="0"/>
      <xsd:element name="fxPMeanStart" type="tns:MNPMeanStartType" minOccurs="0"/>
      <xsd:element name="fxPRefDate" type="xsd:date" minOccurs="0"/>
      <xsd:element name="fxMNPAverage" type="tns:MNPAverageType" minOccurs="0"/>
      <xsd:element name="fxAverageWay" type="tns:MNPFxAverageWay" minOccurs="0"/>
      <xsd:element name="fxFixingColumn" type="tns:FixingType" minOccurs="0"/>
    </xsd:all>
  </xsd:complexType>
  <xsd:complexType name="MNPBasketComponent">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">A type which represents a parameter of the MNP Averaging rule of an MNP Commodity Basket. The exat meaning of the type is described in the Sophis Financial Documentation.
It represents 1 component of the basket.</xsd:documentation>
    </xsd:annotation>
    <xsd:all>
	  <xsd:element name="commodity" type="tns:Underlyer" minOccurs="0"/>
      <xsd:element name="quantity" type="xsd:double" minOccurs="0"/>
      <xsd:element name="MValue" type="xsd:int" minOccurs="0"/>
      <xsd:element name="MUnit" type="tns:MNPUnitType" minOccurs="0"/>
      <xsd:element name="NValue" type="xsd:int" minOccurs="0"/>
      <xsd:element name="NUnit" type="tns:MNPUnitType" minOccurs="0"/>
      <xsd:element name="PValue" type="xsd:int" minOccurs="0"/>
      <xsd:element name="PMeanStart" type="tns:MNPMeanStartType" minOccurs="0"/>
      <xsd:element name="PRefDate" type="xsd:date" minOccurs="0"/>
      <xsd:element name="MNPAverage" type="tns:MNPAverageType" minOccurs="0"/>
      <xsd:element name="fixingColumn" type="tns:FixingType" minOccurs="0"/>
      <xsd:element name="LMEFixingType" type="xsd:string" minOccurs="0"/>
      <xsd:element name="fxParameters" type="tns:MNPBasketFxParameters" minOccurs="0"/>
    </xsd:all>
  </xsd:complexType>
  <xsd:complexType name="PhysicalFutureFlow">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">Represents the definition of the Commodity payment or delivery for each period of time of a Commodity swap.</xsd:documentation>
    </xsd:annotation>
    <xsd:all>
	  <xsd:element minOccurs="0" name="isForced" type="xsd:boolean" />
      <xsd:element name="startDate" type="xsd:date" minOccurs="0"/>
      <xsd:element name="endDate" type="xsd:date" minOccurs="0"/>
      <xsd:element name="settlementDate" type="common:AdjustableOrRelativeDate" minOccurs="0"/>
      <xsd:element name="percentage" type="xsd:double" minOccurs="0"/>
      <xsd:element name="quantity" type="xsd:double" minOccurs="0"/>
      <xsd:element name="spread" type="xsd:double" minOccurs="0"/>
      <xsd:element name="stripOptionExpiry" type="xsd:date" minOccurs="0"/>
    </xsd:all>
  </xsd:complexType>
  <xsd:complexType name="CashLegFlow">
    <xsd:annotation>
			<xsd:documentation xml:lang="en">Represents the fixed price for each period of time of a Commodity Swap.</xsd:documentation>
    </xsd:annotation>
    <xsd:all>
	  <xsd:element minOccurs="0" name="isForced" type="xsd:boolean" />
      <xsd:element name="startDate" type="xsd:date" minOccurs="0"/>
      <xsd:element name="endDate" type="xsd:date" minOccurs="0"/>
      <xsd:element name="settlementDate" type="common:AdjustableOrRelativeDate" minOccurs="0"/>
      <xsd:element name="percentage" type="xsd:double" minOccurs="0"/>
      <xsd:element name="quantity" type="xsd:double" minOccurs="0"/>
      <xsd:element name="unitCashAmount" type="xsd:double" minOccurs="0"/>
    </xsd:all>
  </xsd:complexType>
  <xsd:complexType name="FixedFlow">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">A Cash Flow whose amount is determined by a Fixed Rate of Interest</xsd:documentation>
    </xsd:annotation>
		<xsd:all>
			<xsd:element minOccurs="0" name="isForced" type="xsd:boolean" />
			<xsd:element minOccurs="0" name="startDate" type="xsd:date" />
			<xsd:element minOccurs="0" name="endDate" type="xsd:date" />
			<xsd:element minOccurs="0" name="settlementDate" type="common:AdjustableOrRelativeDate" />
			<xsd:element minOccurs="0" name="percentage" type="xsd:double" />
			<xsd:element minOccurs="0" name="fixedRate" type="xsd:double" />
			<xsd:element minOccurs="0" name="fxFixingDate" type="xsd:date">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">FX fixing date for mark-to-market cross currency swaps.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element minOccurs="0" name="fxFixingValue" type="xsd:double">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">FX fixing value for mark-to-market cross currency swaps.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
            <xsd:element minOccurs="0" name="minimum" type="xsd:double" />
            <xsd:element minOccurs="0" name="maximum" type="xsd:double" />
		</xsd:all>
	</xsd:complexType>
	<xsd:complexType name="FloatingRateCalculation">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">Describes the parameters to generate and compute a stream of Floating-Rate Coupons</xsd:documentation>
    </xsd:annotation>
    <xsd:all>
      <xsd:element minOccurs="0" name="identifier" type="tns:Identifier" >
      <xsd:annotation>
        <xsd:documentation xml:lang="en">Identification of the underlying asset, using public and/or private identifiers.</xsd:documentation>
      </xsd:annotation>
      </xsd:element>
			<xsd:element minOccurs="0" name="floatingRateIndex" type="xsd:normalizedString">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">As the index is not part of the interest rate definition, it is supposed to be the first word of the name.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
      <xsd:element minOccurs="0" name="capitalizationMethod" type="tns:CapitalizationMethod" />
			<xsd:element minOccurs="0" name="indexTenor" type="common:DateInterval" />
			<xsd:element minOccurs="0" name="floatingRateMultiplier" type="xsd:double">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">Rate multiplier to apply to the floating rate.The multiplier can be a positive or negative decimal. This element should only be included if the multiplier is not equal to 1 (one).</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element minOccurs="0" name="spread" type="xsd:double">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">The spread is a per annum rate, expressed as a decimal.For purposes of determining a calculation period amount, if positive the spread will be added to the floating rate and if negative the spread will be subtracted from the floating rate.A positive 10 basis point (0.1%) spread would be represented as 0.001.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		  <xsd:element minOccurs="0" name="tags" type="tag:Tags">
            <xsd:annotation>
              <xsd:documentation xml:lang="en">Since 7.1.0 : contains all tags applied to the instrument </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
      <xsd:element minOccurs="0" name="extraFields" type="common:ExtraFields">
        <xsd:annotation>
          <xsd:documentation xml:lang="en">Since 5.3.3 : contains all extensible elements (toolkit datas for example)</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:all>
	</xsd:complexType>
  <xsd:complexType name="CouponCapitalization">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">Contains the relevant payoff information when an Interest Rate is paid or capitalized at a different Frequency from its Tenor</xsd:documentation>
    </xsd:annotation>
    <xsd:all>
      <xsd:element name="capitalizedType" type="tns:CapitalizedType"/>
      <xsd:element minOccurs="0" name="capitalizationFrequency" type="tns:CapitalizationFrequency"/>
    </xsd:all>
  </xsd:complexType>
  <xsd:complexType name="CapitalizationFrequency">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">Specifies the frequency at which an capitalized Floating Interest coupon pays</xsd:documentation>
    </xsd:annotation>
    <xsd:all>
      <xsd:element minOccurs="0" name="periodMultiplier" type="xsd:int"/>
      <xsd:element minOccurs="0" name="periodEnum" type="common:PeriodEnum"/>
    </xsd:all>
  </xsd:complexType>
  <xsd:simpleType name="CapitalizedType">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">Specifies the formula to Capitalize a Floating Interest Rate. This property is linked to the Asset, not to the Interest Rate</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:normalizedString">
      <xsd:enumeration value="None"/>
      <xsd:enumeration value="WithoutMargin"/>
      <xsd:enumeration value="WithMargin"/>
      <xsd:enumeration value="Average"/>
      <xsd:enumeration value="CDI+Margin"/>
      <xsd:enumeration value="CDI%Margin"/>
    </xsd:restriction>
  </xsd:simpleType>
	<xsd:complexType name="FloatingFlowsList">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">A list of floating interest-rate cash flows</xsd:documentation>
    </xsd:annotation>
		<xsd:sequence>
			<xsd:element maxOccurs="unbounded" minOccurs="0" name="floatingFlow" type="tns:FloatingFlow">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">List of Floating Flows.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>
  <xsd:complexType name="InflationFlowsList">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">A list of inflation-linked cash flows</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="inflationFlow" type="tns:InflationFlow">
        <xsd:annotation>
          <xsd:documentation xml:lang="en">List of Inflation-Linked Flows.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
	<xsd:complexType name="RangeAccrual">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">Parameters that describe the Range Accrual observations and payoff for Range Accrual Notes and Swaps</xsd:documentation>
    </xsd:annotation>
		<xsd:all>
			<xsd:element minOccurs="0" name="observationRate" type="tns:FloatingRateCalculation" />
      <xsd:element minOccurs="0" name="observationRate2" type="tns:FloatingRateCalculation" />
			<xsd:element minOccurs="0" name="frequency" type="tns:AccrualFrequency" />
			<xsd:element minOccurs="0" name="startOffset" type="xsd:short" />
			<xsd:element minOccurs="0" name="cutOffLag" type="xsd:short" />
			<xsd:element name="cutOffPeriod" type="tns:AccrualCutOffPeriod" />
			<xsd:element name="weighting" type="tns:AccrualWeighting" />
			<xsd:element minOccurs="0" name="rangeList" type="tns:RangeList" />
		</xsd:all>
	</xsd:complexType>
  <xsd:complexType name="ExoticSpread">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">Parameters that describe the Exotic Spread of Swaps legs</xsd:documentation>
    </xsd:annotation>
    <xsd:all>
      <xsd:element minOccurs="0" name="digital" type="xsd:boolean" />
      <xsd:element minOccurs="0" name="shortRate" type="tns:FloatingRateCalculation" />
      <xsd:element minOccurs="0" name="rangeAccrualShortRate" type="tns:FloatingRateCalculation" />
      <xsd:element name="percent" type="xsd:double" />
		</xsd:all>
	</xsd:complexType>
  <xsd:complexType name="ABSDataType">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">List of parameters governing ABS-specific Data coming from Intex</xsd:documentation>
    </xsd:annotation>
    <xsd:all>
      <xsd:element minOccurs="0" name="accumulatedLoss" type="xsd:double"></xsd:element>
      <xsd:element minOccurs="0" name="accumulatedWritedown" type="xsd:double"></xsd:element>
      <xsd:element minOccurs="0" name="accumulatedInterestShortfall" type="xsd:double"></xsd:element>
      <xsd:element minOccurs="0" name="cashFlowProvider" type="tns:ABSCashFlowGenerationEnum"></xsd:element>
      <xsd:element minOccurs="0" name="lastUpdateDate" type="xsd:date"></xsd:element>
      <xsd:element minOccurs="0" name="cashFlowScenario" type="xsd:string"></xsd:element>
      <xsd:element minOccurs="0" name="creditDefaultType" type="tns:ABSCreditDefaultEnum"></xsd:element>
      <xsd:element minOccurs="0" name="severityMethod" type="tns:ABSSeverityMethodEnum"></xsd:element>
      <xsd:element minOccurs="0" name="recoveryType" type="tns:ABSRecoveryTypeEnum"></xsd:element>
      <xsd:element minOccurs="0" name="delinquencyType" type="tns:ABSDelinquencyTypeEnum"></xsd:element>
    </xsd:all>
  </xsd:complexType>
	<xsd:simpleType name="AccrualFrequency">
		<xsd:annotation>
			<xsd:documentation xml:lang="en">List of accrual observation frequencies : for exact definition, see financial documentation.</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:normalizedString">
			<xsd:enumeration value="Undefined" />
			<xsd:enumeration value="OneDay" />
			<xsd:enumeration value="OneWeek" />
			<xsd:enumeration value="OneMonth" />
			<xsd:enumeration value="ThreeMonth" />
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="AccrualCutOffPeriod">
		<xsd:annotation>
			<xsd:documentation xml:lang="en">List of cut off periods : for exact definition, see financial documentation.</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:normalizedString">
			<xsd:enumeration value="CarryLast" />
			<xsd:enumeration value="Shorten" />
			<xsd:enumeration value="Contiguous" />
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="AccrualWeighting">
		<xsd:annotation>
			<xsd:documentation xml:lang="en">List of weighting methods : for exact definition, see financial documentation.</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:normalizedString">
			<xsd:enumeration value="Unweighted" />
			<xsd:enumeration value="Weighted" />
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:complexType name="RangeList">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">Description of all Range Accrual Clauses over the lifetime of an Instrument</xsd:documentation>
    </xsd:annotation>
		<xsd:sequence>
			<xsd:element maxOccurs="unbounded" minOccurs="0" name="range" type="tns:Range">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">Range list.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="Range">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">Description of a Range Accrual Clause for a given period</xsd:documentation>
    </xsd:annotation>
		<xsd:all>
			<xsd:element name="startDate" type="xsd:date" />
			<xsd:element name="endDate" type="xsd:date" />
			<xsd:element name="lowerBarrier" type="xsd:double" />
			<xsd:element name="upperBarrier" type="xsd:double" />
      <xsd:element minOccurs="0" name="lowerBarrier2" type="xsd:double" />
      <xsd:element minOccurs="0" name="upperBarrier2" type="xsd:double" />
		</xsd:all>
	</xsd:complexType>
	<xsd:simpleType name="percentage">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">A floating-point value between 0 and 100%</xsd:documentation>
    </xsd:annotation>
		<xsd:restriction base="xsd:double">
			<xsd:minInclusive value="0"/>
			<xsd:maxInclusive value="100"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:complexType name="FloatingFlow">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">A Cash Flow whose amount is determined by a Floating Rate of Interest (such as 1M LIBOR)</xsd:documentation>
    </xsd:annotation>
		<xsd:all>
			<xsd:element minOccurs="0" name="isForced" type="xsd:boolean" />
			<xsd:element minOccurs="0" name="startDate" type="xsd:date" />
			<xsd:element minOccurs="0" name="endDate" type="xsd:date" />
			<xsd:element minOccurs="0" name="settlementDate" type="common:AdjustableOrRelativeDate" />
			<xsd:element minOccurs="0" name="percentage" type="xsd:double" />
			<xsd:element minOccurs="0" name="fixingDate" type="xsd:date">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">Fixing date of the interest rate for the corresponding cash flow.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element minOccurs="0" name="valueStartDate" type="xsd:date">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">The floating rate is computed with the zero coupon yield curvewith a start date and an end date. This is the start date.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element minOccurs="0" name="valueEndDate" type="xsd:date">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">The floating rate is computed with the zero coupon yield curvewith a start date and an end date. This is the end date.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element minOccurs="0" name="spread" type="xsd:double">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">Margin on the floating interest rate (after applying min/max).</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element minOccurs="0" name="spreadInFixing" type="xsd:double">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">Margin In Fixing on the floating interest rate (before applying min/max).</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element minOccurs="0" name="fixingRateValue" type="xsd:double">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">Floating interest rate fixing value if overloaded.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element minOccurs="0" name="fixingRateValue2" type="xsd:double">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">Second Floating interest rate fixing value for an interpolation.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element minOccurs="0" name="minimum" type="xsd:double">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">Floating interest rate minimum fixing value.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element minOccurs="0" name="maximum" type="xsd:double">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">Floating interest rate maximum fixing value.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element minOccurs="0" name="volatility" type="xsd:double">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">Caplet volatility value.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element minOccurs="0" name="notionalRate" type="xsd:double">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">Notional rate for digital cap/floor.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element minOccurs="0" maxOccurs="1" name="broken" type="xsd:boolean">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">Flow period is a broken period.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element minOccurs="0" maxOccurs="1" name="fxFixingDate" type="xsd:date">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">FX fixing date for mark-to-market cross currency swaps.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element minOccurs="0" maxOccurs="1" name="fxFixingValue" type="xsd:double">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">FX fixing value for mark-to-market cross currency swaps.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element minOccurs="0" maxOccurs="1" name="poolFactor" type="xsd:double">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">Pool factor for ABS (value from 0.0 to 1.0)</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element minOccurs="0" maxOccurs="1" name="ABSNotionalRepayment" type="xsd:double">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">Value of the notional prepayment of an ABS flow</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
      <xsd:element minOccurs="0" maxOccurs="1" name="currentBalance" type="xsd:double">
        <xsd:annotation>
          <xsd:documentation xml:lang="en">Value of the current balance of an ABS flow</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" maxOccurs="1" name="interestShortfall" type="xsd:double">
        <xsd:annotation>
          <xsd:documentation xml:lang="en">Value of the interest shortfall of an ABS flow</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
			<xsd:element minOccurs="0" maxOccurs="1" name="forexNotional" type="xsd:double">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">Forex between notional currency and instrument currency </xsd:documentation>
				</xsd:annotation>
			</xsd:element>
      <xsd:element minOccurs="0" maxOccurs="1" name="snowballFixedRate" type="xsd:double">
        <xsd:annotation>
          <xsd:documentation xml:lang="en">Fixed rate of the snowball payoff </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" maxOccurs="1" name="snowballMultiplier" type="xsd:int">
        <xsd:annotation>
          <xsd:documentation xml:lang="en">Value that is applied to the floating index (it should default to -1) Must be 0 for the initial coupon periods </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" maxOccurs="1" name="snowballCap" type="xsd:double">
        <xsd:annotation>
          <xsd:documentation xml:lang="en">The global maximum coupon applicable for the respective interest reset period </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" maxOccurs="1" name="snowballFloor" type="xsd:double">
        <xsd:annotation>
          <xsd:documentation xml:lang="en">The global minimum coupon applicable for the respective interest reset period </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:all>
  </xsd:complexType>
  <xsd:complexType name="InflationFlow">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">A Cash Flow whose amount is determined by the values of an Inflation Index (such as HICP)</xsd:documentation>
    </xsd:annotation>
    <xsd:all>
	  <xsd:element minOccurs="0" name="isForced" type="xsd:boolean" />
      <xsd:element minOccurs="0" name="startDate" type="xsd:date" />
      <xsd:element minOccurs="0" name="endDate" type="xsd:date" />
      <xsd:element minOccurs="0" name="settlementDate" type="common:AdjustableOrRelativeDate" />
      <xsd:element minOccurs="0" name="percentage" type="xsd:double" />
      <xsd:element minOccurs="0" name="strike" type="xsd:double">
        <xsd:annotation>
          <xsd:documentation xml:lang="en">Strike for an Inflation Caplet</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="amortizing" type="xsd:double">
        <xsd:annotation>
          <xsd:documentation xml:lang="en">Amortizing Percentage for an Amortizing Flow</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="volatility" type="xsd:double">
        <xsd:annotation>
          <xsd:documentation xml:lang="en">Caplet volatility value.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="notionalRate" type="xsd:double">
        <xsd:annotation>
          <xsd:documentation xml:lang="en">Notional rate for digital cap/floor.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:all>
  </xsd:complexType>
  <xsd:complexType name="SwapThirdParty">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">Describes one counterparty of a Swap Instrument</xsd:documentation>
    </xsd:annotation>
		<xsd:all>
			<xsd:element minOccurs="0" name="issuerCode" type="tns:Identifier" />
			<xsd:element minOccurs="0" name="seniority" type="tns:SeniorityString" />
			<xsd:element minOccurs="0" name="defaultEvent" type="tns:DefaultEvent" />
		</xsd:all>
	</xsd:complexType>
	<xsd:complexType name="BasketSwapSyntheticDividends">
		<xsd:annotation>
		  <xsd:documentation xml:lang="en">A type storing synthetic dividens defined in div cash tab for basket swaps .</xsd:documentation>
		</xsd:annotation>
		<xsd:all>
		  <xsd:element name="Sicovam" type="tns:Underlyer" minOccurs="1" maxOccurs="1" />
		  <xsd:element name="EligibilityDate" type="xsd:date" minOccurs="0" maxOccurs="1" />
		  <xsd:element name="MarketPayDate" type="xsd:date" minOccurs="0" maxOccurs="1" />
		  <xsd:element name="SwapPayDate" type="xsd:date" minOccurs="0" maxOccurs="1" />
		  <xsd:element name="DivAmount" type="xsd:double" minOccurs="1" maxOccurs="1" />
		  <xsd:element name="DivCurrency" type="tns:Currency" minOccurs="0" maxOccurs="1" />
		  <xsd:element name="DivRebate" type="xsd:double" minOccurs="1" maxOccurs="1" />
		  <xsd:element name="Quantity" type="xsd:double" minOccurs="1" maxOccurs="1" />
		  <xsd:element name="Fixing" type="xsd:double" minOccurs="0" maxOccurs="1" />
		  <xsd:element name="FixingDate" type="xsd:date" minOccurs="0" maxOccurs="1" />
		  <xsd:element name="PaymentCurrency" type="tns:Currency" minOccurs="0" maxOccurs="1" />
		  <xsd:element name="CorporateActionID" type="xsd:unsignedLong" minOccurs="1" maxOccurs="1" />
		  <xsd:element name="Ident" type="xsd:unsignedLong" minOccurs="0" maxOccurs="1" />
		</xsd:all>
  </xsd:complexType>
	<xsd:complexType name="BasketSwapSyntheticDividendsList">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">A list synthetic dividends</xsd:documentation>
    </xsd:annotation>
		<xsd:sequence>
			<xsd:element maxOccurs="unbounded" minOccurs="0" name="syntheticDividend" type="tns:BasketSwapSyntheticDividends"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:simpleType name="NotionalExchange">
		<xsd:annotation>
      <xsd:documentation xml:lang="en">Specifies the principal exchange amount, either by explicitly defining it, or by point to an amount defined somewhere else in the swap document</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:normalizedString">
			<xsd:enumeration value="NoExchange" />
			<xsd:enumeration value="Final" />
			<xsd:enumeration value="Initial" />
			<xsd:enumeration value="Both" />
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="AdjustmentMethod">
		<xsd:annotation>
			<xsd:documentation xml:lang="en">How dates are adjusted for the swap.</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:normalizedString">
			<xsd:enumeration value="No" />
			<xsd:enumeration value="Yes" />
			<xsd:enumeration value="OldYes" />
			<xsd:enumeration value="IMM" />
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="StubPeriodType">
		<xsd:annotation>
			<xsd:documentation xml:lang="en">StubPeriodTypeEnum</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:normalizedString">
			<xsd:enumeration value="ShortInitial" />
			<xsd:enumeration value="ShortFinal" />
			<xsd:enumeration value="LongInitial" />
			<xsd:enumeration value="LongFinal" />
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="RollConventionEnum">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">The convention for determining the sequence of calculation period end dates. It is used in conjunction with a specified frequency and the regular period start date of a calculation period</xsd:documentation>
    </xsd:annotation>
		<xsd:restriction base="xsd:normalizedString">
			<xsd:enumeration value="NONE" />
			<xsd:enumeration value="IMM" />
			<xsd:enumeration value="EOM" />
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="PayRelativeToEnum">
		<xsd:annotation>
			<xsd:documentation xml:lang="en">The specification of whether payments occur relative to the calculation period start or end date.</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:normalizedString">
			<xsd:enumeration value="CalculationPeriodEndDate" />
			<xsd:enumeration value="CalculationPeriodStartDate" />
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="ResetRelativeToEnum">
		<xsd:annotation>
			<xsd:documentation xml:lang="en">The specification of whether resets occur relative to the first or last day of a calculation period.</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:normalizedString">
			<xsd:enumeration value="Standard" />
			<xsd:enumeration value="CalculationPeriodEndDate" />
			<xsd:enumeration value="CalculationPeriodStartDate" />
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:complexType name="CreditLeg">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">A type of Swap Leg that represents a protection against the default of a credit-risky Reference Entity</xsd:documentation>
    </xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="tns:Leg">
				<xsd:sequence>
					<xsd:element minOccurs="0" name="generalTerms" type="tns:GeneralTerms" />
          <xsd:element minOccurs="0" name="protectionTerms" type="tns:ProtectionTerms" />
					<xsd:element minOccurs="0" name="obligations" type="tns:Obligations" />
					<xsd:element minOccurs="0" name="cashSettlementTerms" type="tns:CashSettlementTerms" />
					<xsd:element minOccurs="0" name="spreadType" type="tns:SpreadType"/>
					<xsd:element minOccurs="0" name="dayCountBasis" type="tns:DayCountBasis"/>
					<xsd:element minOccurs="0" name="yieldCalculation" type="tns:YieldCalculation"/>
					<xsd:element minOccurs="0" name="frequency" type="tns:CouponFrequency"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="GeneralTerms">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">This element contains all the data that appears in the section entitled "1. General Terms" in the 2003 ISDA Credit Derivatives Confirmation</xsd:documentation>
    </xsd:annotation>
		<xsd:all>
			<xsd:element minOccurs="0" name="effectiveDate" type="common:AdjustableOrRelativeDate">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">Issue date of the contract.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element minOccurs="0" name="scheduledTerminationDate" type="common:AdjustableOrRelativeDate">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">The scheduled date on which the credit protection will lapse.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element minOccurs="0" name="dateAdjustments" type="tns:HolidayAdjustementEnum" />
			<xsd:element minOccurs="0" name="adjustmentMethod" type="tns:AdjustmentMethod" />
		</xsd:all>
	</xsd:complexType>
	<xsd:complexType name="DefaultEvent">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">An event type that records the occurrence of a credit event notice</xsd:documentation>
    </xsd:annotation>
		<xsd:simpleContent>
			<xsd:extension base="xsd:normalizedString">
				<xsd:attribute name="referenceType" type="xsd:string" />
			</xsd:extension>
		</xsd:simpleContent>
	</xsd:complexType>
	<xsd:complexType name="ProtectionTerms">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">This element contains all the terms relevant to defining the applicable floating rate payer calculation amount, credit events and associated conditions to settlement, and reference obligations</xsd:documentation>
    </xsd:annotation>
		<xsd:all>
			<xsd:element name="calculationAmount" type="tns:Money">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">The notional amount of protection coverage.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element minOccurs="0" name="defaultEvent" type="tns:DefaultEvent" />
		</xsd:all>
	</xsd:complexType>
	<xsd:complexType name="Obligations">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">Obligation and deliverable obligation characteristics</xsd:documentation>
    </xsd:annotation>
		<xsd:all>
      <xsd:element minOccurs="0" name="refEntity" type="xsd:int" />
			<xsd:element minOccurs="0" name="underlyer" type="tns:Underlyer" />
			<xsd:element minOccurs="0" name="seniority" type="tns:SeniorityString" />
      <xsd:element minOccurs="0" name="SRO" type="tns:SRO" />
      <xsd:element minOccurs="0" name="delivery"  type="tns:DeliveryEnum" />
		</xsd:all>
	</xsd:complexType>
	<xsd:complexType name="CashSettlementTerms">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">Conditions under which a Credit Transaction is settled in case of default event</xsd:documentation>
    </xsd:annotation>
		<xsd:all>
			<xsd:element minOccurs="0" name="settlementCurrency" type="tns:Currency" />
			<xsd:element minOccurs="0" name="valuationDate" type="tns:ValuationDate" />
			<xsd:element minOccurs="0" name="quotationMethod" type="tns:QuotationRateTypeEnum" />
      <xsd:element minOccurs="0" name="runningCoupon" type="xsd:int" />
			<xsd:element minOccurs="0" name="cashSettlementAmount" type="tns:Money">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">The amount paid by the seller to the buyer for cash settlement on the cash settlement date.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element minOccurs="0" name="recoveryFactor" type="tns:RestrictedPercentage">
				<xsd:annotation>
				  <xsd:documentation xml:lang="en">Used for fixed recovery, specifies the recovery level, determined at contract inception, to be applied on a default. Used to calculate the amount paid by the seller to the buyer for cash settlement on the cash settlement date. Amount calculation is (1 minus the Recovery Factor) multiplied by the Floating Rate Payer Calculation Amount. The currency will be derived from the Floating Rate Payer Calculation Amount.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:all>
	</xsd:complexType>
	<xsd:complexType name="ValuationDate">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">The number of business days after conditions to settlement have been satisfied when the calculation agent obtains a price quotation on the Reference Obligation for purposes of cash settlement. There may be one or more valuation dates. This is typically specified if the cash settlement amount is not a fixed amount. ISDA 2003 Term: Valuation Date</xsd:documentation>
    </xsd:annotation>
		<xsd:all>
			<xsd:element minOccurs="0" name="singleValuationDate" type="tns:SingleValuationDate" />
		</xsd:all>
	</xsd:complexType>
	<xsd:complexType name="SingleValuationDate">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">The number of business days between successive valuation dates when multiple valuation dates are applicable for cash settlement. ISDA 2003 Term: Business Days thereafter</xsd:documentation>
    </xsd:annotation>
		<xsd:all>
			<xsd:element minOccurs="0" name="businessDays" type="xsd:int" />
		</xsd:all>
	</xsd:complexType>
	<xsd:simpleType name="QuotationRateTypeEnum">
		<xsd:annotation>
			<xsd:documentation xml:lang="en">The specification of the type of quotation rate to be obtained from each cash settlement reference bank.</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:normalizedString">
			<xsd:enumeration value="Undefined" />
			<xsd:enumeration value="Mid" />
			<xsd:enumeration value="Bid" />
			<xsd:enumeration value="Ask" />
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="AccruedPaymentType">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">Determines how is performance is settled in case of an Adjustment for a Basket Swap</xsd:documentation>
    </xsd:annotation>
		<xsd:restriction base="xsd:normalizedString">
			<xsd:enumeration value="NoAccruedPayment" />
			<xsd:enumeration value="RealizedPayment" />
			<xsd:enumeration value="SyntheticReset" />
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="UnderlyerAdjustmentType">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">Determines the type of Adjustment in a Basket Swap schedule</xsd:documentation>
    </xsd:annotation>
		<xsd:restriction base="xsd:normalizedString">
			<xsd:enumeration value="Adjustment" />
			<xsd:enumeration value="Fixing" />
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="UnderlyerAdjustmentDataFlavour">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">Determines how the change of composition of a Basket impacts the initial Basket in a Basket Swap</xsd:documentation>
    </xsd:annotation>
		<xsd:restriction base="xsd:normalizedString">
			<xsd:enumeration value="New" />
			<xsd:enumeration value="NewByDifference" />
			<xsd:enumeration value="Replace"/>
			<xsd:enumeration value="AmendByDifferenceVsItself"/>
			<xsd:enumeration value="AmendByDifferenceVsPrevious"/>
			<xsd:enumeration value="DeleteLast" />
			<xsd:enumeration value="Delete"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:complexType name="EquityLeg">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">A type of Swap Leg that represents the performance of an Equity (Share, Basket or Index)</xsd:documentation>
    </xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="tns:Leg">
				<xsd:sequence>
					<xsd:element minOccurs="0" name="paymentDates" type="tns:PaymentDates" />
					<xsd:element minOccurs="0" name="businessDayConvention" type="tns:HolidayAdjustementEnum" />
					<xsd:element minOccurs="0" name="adjustmentMethod" type="tns:AdjustmentMethod" />
					<xsd:element minOccurs="0" name="paymentFrequency" type="tns:PaymentFrequency" />
					<xsd:element minOccurs="0" name="effectiveDate" type="common:AdjustableOrRelativeDate">
						<xsd:annotation>
							<xsd:documentation xml:lang="en">Issue date of the contract.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element minOccurs="0" name="terminationDate" type="common:AdjustableOrRelativeDate">
						<xsd:annotation>
							<xsd:documentation xml:lang="en">Expiration date of the contract.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element minOccurs="0" name="firstRegularPeriodStartDate" type="common:AdjustableOrRelativeDate" />
					<xsd:element minOccurs="0" name="lastRegularPeriodEndDate" type="common:AdjustableOrRelativeDate" />
					<xsd:element minOccurs="0" name="stubPeriodType" type="tns:StubPeriodType"/>
					<xsd:element minOccurs="0" name="stubPeriodTypeAlt" type="tns:StubPeriodType"/>
					<xsd:element name="equityUnderlyer" type="tns:EquityUnderlyer" />
					<xsd:element minOccurs="0" name="spreadEndDate" type="xsd:date" />
					<xsd:element minOccurs="0" name="spreadAdjustmentType" type="xsd:int" />
					<xsd:element minOccurs="0" name="spreadAdj" type="xsd:double" />
					<xsd:element minOccurs="0" name="upfrontFees" type="xsd:double" />
					<xsd:element minOccurs="0" name="earlyTerminated" type="xsd:boolean"/>
					<xsd:element minOccurs="0" name="rateOfReturn" type="tns:RateOfReturn" />
					<xsd:element minOccurs="0" name="notional" type="tns:Notional" />
					<xsd:element minOccurs="0" name="return" type="tns:Return" />
					<xsd:element minOccurs="0" name="dividendConditions" type="tns:DividendConditions" />
          <xsd:element minOccurs="0" name="corporateActionCash" type="xsd:normalizedString" />
          <xsd:element minOccurs="0" name="performancePaymentRules" type="tns:PerformancePaymentRules">
            <xsd:annotation>
              <xsd:documentation xml:lang="en">Describes the Performance payment rules for the Realized unpaid.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
					<xsd:element minOccurs="0" name="forexInformation" type="tns:ForexInformation"/>
					<xsd:element minOccurs="0" name="indexedFlowsList" type="tns:IndexedFlowsList" />
					<xsd:element minOccurs="0" name="fixingCode" type="xsd:normalizedString" />
					<xsd:element minOccurs="0" name="forexFixingCode" type="xsd:normalizedString" />
					<xsd:element minOccurs="0" name="modificationDate" type="xsd:date">
						<xsd:annotation>
							<xsd:documentation xml:lang="en">Modification date for TRS basket adjustments and fixings, otherwise ignored. If not specified, the modification date is used for the adjustment.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element minOccurs="0" name="valueDate" type="xsd:date">
						<xsd:annotation>
							<xsd:documentation xml:lang="en">Value date for TRS basket creation, adjustments, and fixings; ignored in other cases. By default the modification date is used.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element minOccurs="0" name="orderAdj" type="xsd:int">
						<xsd:annotation>
							<xsd:documentation xml:lang="en">Relative order intraday of the Adjustment to be edited or the position to be inserted.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element minOccurs="0" name="accruedPaymentType" type="tns:AccruedPaymentType">
						<xsd:annotation>
							<xsd:documentation xml:lang="en">Accrued payment type, only used for TRS basket adjustments. If not specified, RealizedPayment is used.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element minOccurs="0" name="underlyerAdjustmentType" type="tns:UnderlyerAdjustmentType">
						<xsd:annotation>
							<xsd:documentation xml:lang="en">Specifies if the modification is a TRS basket adjustment or fixing. Ignored in other cases.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element minOccurs="0" name="underlyerAdjustmentDataFlavour" type="tns:UnderlyerAdjustmentDataFlavour">
						<xsd:annotation>
							<xsd:documentation xml:lang="en">If not specified, "New" is assumed.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element minOccurs="0" name="extraFundingAdj" type="tns:ExtraFundingAdj">
						<xsd:annotation>
							<xsd:documentation xml:lang="en">Describes the Extra Funding parameters</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element minOccurs="0" name="generalCollateralIndex" type="tns:Underlyer">
						<xsd:annotation>
							<xsd:documentation xml:lang="en">Sicovam of the instrument used to calculate the repo curve of the general collateral components.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element minOccurs="0" name="generalCollateralType" type="tns:GeneralCollateralTypeEnum">
						<xsd:annotation>
							<xsd:documentation xml:lang="en">Determines what components part of the General Collateral are affected by the selected Repo Curve.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="EquityUnderlyer">
		<xsd:annotation>
			<xsd:documentation xml:lang="en">A type describing the whole set of possible underlyers: single underlyers or multiple underlyers, each of these having either security or index components.</xsd:documentation>
		</xsd:annotation>
		<xsd:choice>
      <xsd:annotation>
        <xsd:documentation xml:lang="en">Underlyer may be either a single Instrument or multiple Instruments</xsd:documentation>
      </xsd:annotation>
			<xsd:element minOccurs="0" name="singleUnderlyer" type="SingleUnderlyer">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">Describes the swap's underlyer when it has only one asset component.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="basketUnderlyer" type="BasketUnderlyer">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">Describes the swap's underlyer when it has multiple asset components.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:choice>
	</xsd:complexType>
	<xsd:complexType name="SingleUnderlyer">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">Describes the swap's underlyer when it has only one asset component</xsd:documentation>
    </xsd:annotation>
		<xsd:all>
			<xsd:element minOccurs="0" name="underlyingAsset" type="tns:Underlyer">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">A type describing the basic components of a security of index underlyer.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element minOccurs="0" name="dividendPayout" type="tns:DividendPayout" />
		</xsd:all>
	</xsd:complexType>
	<xsd:complexType name="DividendPayout">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">Specifies the dividend payout ratio associated with an equity underlyer. A basket swap can have different payout ratios across the various underlying constituents. In certain cases the actual ratio is not known on trade inception, and only general conditions are then specified.</xsd:documentation>
    </xsd:annotation>
		<xsd:all>
			<xsd:element minOccurs="0" name="divendendPayoutRatio" type="xsd:double" />
		</xsd:all>
	</xsd:complexType>
	<xsd:complexType name="RateOfReturn">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">Specifies the terms of the initial price of the return type swap and of the subsequent valuations of the underlyer</xsd:documentation>
    </xsd:annotation>
		<xsd:all>
			<xsd:element name="initialPrice" type="tns:ReturnLegValuationPrice">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">Specifies the initial reference price of the underlyer.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="notionalReset" type="xsd:boolean" />
			<xsd:element name="valuationPriceFinal" type="tns:ReturnLegValuationPrice">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">Specifies the initial reference price of the underlyer.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element minOccurs="0" name="paymentDates" type="tns:ReturnSwapPaymentDates" />
		</xsd:all>
	</xsd:complexType>
	<xsd:complexType name="ReturnLegValuationPrice">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">Specifies the initial reference price of the underlyer. This price can be expressed either as an actual amount/currency, as a determination method, or by reference to another value specified in the swap document</xsd:documentation>
    </xsd:annotation>
		<xsd:all>
			<xsd:element minOccurs="0" name="netPrice" type="tns:ActualPrice" />
			<xsd:element minOccurs="0" name="valuationRules" type="tns:EquityValuation" />
		</xsd:all>
	</xsd:complexType>
	<xsd:complexType name="ActualPrice">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">The fixing of a component in a Basket Swap</xsd:documentation>
    </xsd:annotation>
		<xsd:all>
			<xsd:element minOccurs="0" name="amount" type="xsd:double" />
			<xsd:element minOccurs="0" name="priceExpression" type="xsd:normalizedString" />
		</xsd:all>
	</xsd:complexType>
	<xsd:complexType name="EquityValuation">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">The rules to adjust the Coupon Period of an Indexed-linked Flow</xsd:documentation>
    </xsd:annotation>
		<xsd:sequence>
			<xsd:element name="valuationDate" type="common:AdjustableOrRelativeDate" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="ReturnSwapPaymentDates">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">A type describing the return payment dates of the swap</xsd:documentation>
    </xsd:annotation>
		<xsd:all>
			<xsd:element name="paymentDateFinal" type="common:AdjustableOrRelativeDate" />
		</xsd:all>
	</xsd:complexType>
	<xsd:complexType name="Notional">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">An type defining the notional amount or notional amount schedule associated with a swap or bond stream. The notional schedule will be captured explicitly, specifying the dates that the notional changes and the outstanding notional amount that applies from that date. A parametric representation of the rules defining the notional step schedule can optionally be included.</xsd:documentation>
    </xsd:annotation>
		<xsd:sequence>
			<xsd:element name="notionalAmount" type="tns:Money" />
			<xsd:element minOccurs="0" name="notionalStepParameters" type="tns:NotionalStepRule" />
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="DividendConditions">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">Corporate Action Payment Rules for an Equity Swap or Basket Swap</xsd:documentation>
    </xsd:annotation>
		<xsd:all>
			<xsd:element minOccurs="0" name="dividendReinvestment" type="xsd:boolean" />
			<xsd:element minOccurs="0" name="dividendEntitlement" type="tns:DividendEntitlementEnum" />
			<xsd:element minOccurs="0" name="dividendPaymentDate" type="tns:DividendPaymentDate" />
			<xsd:element minOccurs="0" name="paymentCurrency" type="tns:PaymentCurrency" />
			<xsd:element minOccurs="0" name="frequency" type="tns:PaymentFrequency" />
			<xsd:element minOccurs="0" name="dividendPayment" type="tns:DividendPayment" />
		</xsd:all>
	</xsd:complexType>
	<xsd:simpleType name="DividendEntitlementEnum">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">Determines under which conditions a Dividend of the underlying is eligible for exchange between counterparties of a Basket Swap. Also see DividendPaymentDate</xsd:documentation>
    </xsd:annotation>
		<xsd:restriction base="xsd:normalizedString">
			<xsd:enumeration value="ExDate" />
			<xsd:enumeration value="RecordDate" />
      <xsd:enumeration value="PaymentDate" />
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:complexType name="DividendPaymentDate">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">Determines under which conditions a Dividend of the underlying is eligible for exchange between counterparties of a Basket Swap</xsd:documentation>
    </xsd:annotation>
		<xsd:all>
			<xsd:element minOccurs="0" name="dividendEntitlement" type="xsd:normalizedString" />
		</xsd:all>
	</xsd:complexType>
	<xsd:complexType name="PaymentCurrency">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">Determines in which currency the dividends of the underlying are exchanged, either in their own currency or in swap currency</xsd:documentation>
    </xsd:annotation>
		<xsd:all>
			<xsd:element minOccurs="0" name="determinationMethod" type="xsd:normalizedString" />
		</xsd:all>
	</xsd:complexType>
	<xsd:simpleType name="DividendPaymentType">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">Determines when the dividends of the underlying are exchanged between the counterparties of a Basket Swap</xsd:documentation>
    </xsd:annotation>
		<xsd:restriction base="xsd:normalizedString">
			<xsd:enumeration value="ResetDate"></xsd:enumeration>
			<xsd:enumeration value="Immediate"></xsd:enumeration>
			<xsd:enumeration value="Immediate paid at reset"></xsd:enumeration>
      <xsd:enumeration value="Immediate paid at reset following market pay date (end date)"></xsd:enumeration>
      <xsd:enumeration value="Immediate paid at reset following market pay date (virtual reset)"></xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
	<xsd:complexType name="DividendPayment">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">Determines when the dividends of the underlying are exchanged between the counterparties of a Basket Swap. It also includes a settlement lag period</xsd:documentation>
    </xsd:annotation>
		<xsd:all>
			<xsd:element name="type" type="tns:DividendPaymentType" />
			<xsd:element minOccurs="0" name="lag" type="xsd:int" />
		</xsd:all>
	</xsd:complexType>
	<xsd:complexType name="Return">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">A type describing the dividend return conditions applicable to the swap</xsd:documentation>
    </xsd:annotation>
		<xsd:all>
			<xsd:element minOccurs="0" name="returnType" type="xsd:normalizedString" />
		</xsd:all>
	</xsd:complexType>
	<xsd:complexType name="IndexedFlowsList">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">A list of indexed flows</xsd:documentation>
    </xsd:annotation>
		<xsd:sequence>
			<xsd:element maxOccurs="unbounded" minOccurs="0" name="indexedFlow" type="tns:IndexedFlow">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">List of Indexed Flows.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="IndexedFlow">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">A Cash Flow whose amount is determined by the performance of an Equity</xsd:documentation>
    </xsd:annotation>
		<xsd:all>
			<xsd:element minOccurs="0" name="isForced" type="xsd:boolean" />
			<xsd:element minOccurs="0" name="startDate" type="xsd:date" />
			<xsd:element minOccurs="0" name="endDate" type="xsd:date" />
			<xsd:element minOccurs="0" name="settlementDate" type="common:AdjustableOrRelativeDate" />
			<xsd:element minOccurs="0" name="percentage" type="xsd:double" />
			<xsd:element minOccurs="0" name="initialIndexValue" type="xsd:double" />
			<xsd:element minOccurs="0" name="dividendRate" type="xsd:double" />
		</xsd:all>
	</xsd:complexType>
	<xsd:complexType name="CommodityIndex">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">Defines a Commodity Index average, including:
- the composition of the index, at different moments of time (Future composition in case of reweightings for example)
- the rolling rules
- other parameters, such as rounding preferences for published values or average calculations</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="tns:Instrument">
        <xsd:sequence>
		  <xsd:element minOccurs="0" name="pricing" type="tns:Pricing" />
          <xsd:element name="rollRule" type="xsd:string"/>
          <xsd:element name="roundingAverage" type="xsd:int"/>
          <xsd:element minOccurs="0" name="parentIndex" type="tns:Identifier" />
          <xsd:element minOccurs="0" name="compositionSchedule" type="tns:CompositionSchedule"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="CompositionSchedule">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">Defines the list of composition of an index at different moment of time. Composition changes, for example yearly, in case of reweighting of the Index.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" maxOccurs="unbounded"  name="composition" type="tns:Composition">
        <xsd:unique name="uniqueSchedule">
          <xsd:annotation>
            <xsd:documentation xml:lang="en">Identifies one composition of the index at a specific moment of time.</xsd:documentation>
          </xsd:annotation>
          <xsd:selector xpath="tns:Composition"/>
          <xsd:field    xpath="compositionValidityDate"/>
        </xsd:unique>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="Composition">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">Defines a composition of the Commodity Index at a moment of time. The composition is made of a list of components (cf. ComponentList) and their weights. It also includes a normalization factor.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="normalizationConstant" type="xsd:double"/>
      <xsd:element name="compositionValidityDate" type="xsd:date"/>
      <xsd:element minOccurs="0" name="componentList" type="tns:ComponentList"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="ComponentList">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">One item in the composition of a Commodity Index. In addition to the commodity and the weight, each item defines the rule to select different Futures of the Commodity at different valuation dates.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" maxOccurs="unbounded"  name="component" type="tns:Component">
        <xsd:unique name="uniqueCommo">
          <xsd:annotation>
            <xsd:documentation xml:lang="en">cf. ComponentsList</xsd:documentation>
          </xsd:annotation>
          <xsd:selector xpath="commoId"/>
          <xsd:field    xpath="sophis"/>
        </xsd:unique>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="ComponentDefinition">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">cf. ComponentList</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" name="commoId" type="tns:Identifier"/>
      <xsd:element minOccurs="0" name="weight" type="xsd:double"/>
      <xsd:element minOccurs="0" name="commoFixingCol" type="xsd:string"/>
      <xsd:element minOccurs="0" name="fxFixingCol" type="xsd:string"/>
      <xsd:element minOccurs="0" name="fixingTypeCode" type="xsd:int"/>
      <xsd:element minOccurs="0" name="fixingTypeString" type="xsd:string"/>
      <xsd:element minOccurs="0" name="shiftMonth" type="xsd:int"/>
      <xsd:element minOccurs="0" name="rollMonthList" type="tns:RollMonthList"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="ComponentNoDefinition">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">cf. ComponentList.
This component definition is empty.
It is used, for example, to associate a non-null definition to a commodity in the Index for the dates before the Commodity was introduced in the Index definition.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" name="commoId" type="tns:Identifier" />
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="Component">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">This type is used to link between the different composition of the Commodity Index (cf. previous/next)</xsd:documentation>
    </xsd:annotation>
    <xsd:choice>
      <xsd:annotation>
        <xsd:documentation xml:lang="en"></xsd:documentation>
      </xsd:annotation>
      <xsd:element name="newDefinition" type="ComponentDefinition" />
      <xsd:element name="previousDefinition" type="ComponentNoDefinition" />
    </xsd:choice>
  </xsd:complexType>
  <xsd:complexType name="RollMonthList">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">In the composition of the Commodity Index, defines the months when it will roll from one Future to the next one.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" maxOccurs="12" name="month" type="tns:Month"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:simpleType name="Month">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">A type representing a Month.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="Jan"/>
      <xsd:enumeration value="Feb"/>
      <xsd:enumeration value="Mar"/>
      <xsd:enumeration value="Apr"/>
      <xsd:enumeration value="May"/>
      <xsd:enumeration value="Jun"/>
      <xsd:enumeration value="Jul"/>
      <xsd:enumeration value="Aug"/>
      <xsd:enumeration value="Sep"/>
      <xsd:enumeration value="Oct"/>
      <xsd:enumeration value="Nov"/>
      <xsd:enumeration value="Dec"/>
    </xsd:restriction>
  </xsd:simpleType>
	<xsd:complexType name="Notation">
		<xsd:annotation>
			<xsd:documentation xml:lang="en">A notation given by a Rating Agency for a given Seniority</xsd:documentation>
		</xsd:annotation>
		<xsd:simpleContent>
			<xsd:extension base="common:StringBounded39">
				<xsd:attribute name="provider" type="common:StringBounded39" use="required">
					<xsd:annotation>
						<xsd:documentation xml:lang="en">In upper camel.</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
		        <xsd:attribute name="seniority" type="common:StringBounded39" use="optional">
		          <xsd:annotation>
		            <xsd:documentation xml:lang="en">In upper camel.</xsd:documentation>
		          </xsd:annotation>
		        </xsd:attribute>
				<xsd:attribute name="watch" type="xsd:int" use="optional">
					<xsd:annotation>
						<xsd:documentation xml:lang="en">0 = empty, 1 = Null, 2 = Positive, 3 = Negative</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:simpleContent>
	</xsd:complexType>
	<xsd:complexType name="Ratings">
		<xsd:annotation>
      <xsd:documentation xml:lang="en">A party's credit rating.</xsd:documentation>
			<xsd:documentation xml:lang="en">List of notation by agencies.</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
      <xsd:element minOccurs="0" maxOccurs="1" name="identifier" type="tns:Identifier" >
      <xsd:annotation>
        <xsd:documentation xml:lang="en">Identification of the underlying asset, using public and/or private identifiers.</xsd:documentation>
      </xsd:annotation>
      </xsd:element>
			<xsd:element minOccurs="0" maxOccurs="unbounded" name="notation" type="tns:Notation">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">Notation for one agency.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
	<xsd:attributeGroup ref="common:PersistentEntity.model"/>
  </xsd:complexType>

	<xsd:complexType name="AbstractCalculationAgent" abstract="true">
		<xsd:annotation>
			<xsd:documentation source="http://www.sophis.net" xml:lang="en">The concrete type is defined in sophis.xsd.</xsd:documentation>
		</xsd:annotation>
	</xsd:complexType>
	<xsd:element name="abstractCalculationAgent" type="tns:AbstractCalculationAgent"/>

	 <xsd:complexType name="Dummy">
    <xsd:annotation>
      <xsd:documentation source="http://www.sophis.net" xml:lang="en">This element was only defined to fix a known xml substitutionGroup issue, in fact
	  the post Processing, done after clientProxy generation aims to complete all the missing declarations (sons) for the father element.
	  to do so the father must have at least 2 sons and at least one of them must be declared in a different namespace than the father element, in this case dummy element plays the
	  role of the second son element, if we take it off , the post processing will ignore concreteCalculationAgent defined in (sophis.xsd),
	  consequently the serialization/deserialization process will fail  (SRQ-47234)</xsd:documentation>
    </xsd:annotation>
     <xsd:complexContent>
		<xsd:extension base="tns:AbstractCalculationAgent">
			<xsd:attribute name="dummyAttribute" type="xsd:boolean"></xsd:attribute>
		</xsd:extension>
	 </xsd:complexContent>
   </xsd:complexType>
  <xsd:element name="dummy" type="tns:Dummy" substitutionGroup="tns:abstractCalculationAgent" />

	<xsd:complexType name="PricingForCapFloor">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">Assumptions and Models applied for the Theoretical Valuation of a Cap/Floor</xsd:documentation>
    </xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="tns:Pricing">
				<xsd:sequence>
					<xsd:element minOccurs="0" name="calculationDate" type="xsd:date">
						<xsd:annotation>
							<xsd:documentation xml:lang="en">Calculation Date</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element minOccurs="0" name="calculationValue" type="xsd:double">
						<xsd:annotation>
							<xsd:documentation xml:lang="en">Calculation Value</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element minOccurs="0" name="family" type="xsd:normalizedString">
						<xsd:annotation>
							<xsd:documentation xml:lang="en">The possible fields depend on those specified in the yield curve family table and must be written in upper camel</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element minOccurs="0" name="familyOtherCurrency" type="tns:Currency"/>
					<xsd:element minOccurs="0" name="familySpread" type="xsd:double"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType abstract="true" name="InstrumentForCapFloor">
		<xsd:annotation>
      <xsd:documentation xml:lang="en">A type defining an interest rate cap, floor, or cap/floor strategy (e.g. collar) product</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="tns:Instrument">
				<xsd:sequence>
					<xsd:element minOccurs="0" name="pricing" type="tns:PricingForCapFloor" />
                </xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="CapFloor">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">A type defining an interest rate cap, floor, or cap/floor strategy (e.g. collar) product</xsd:documentation>
    </xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="tns:InstrumentForCapFloor">
				<xsd:sequence>
					<xsd:element name="underlyingCategory" type="tns:CapUnderlying" />
					<xsd:element name="payoffType" type="tns:PayoffType" />
					<xsd:element minOccurs="0" name="notionalRate" type="xsd:double" />
					<xsd:element name="capfloorType" type="tns:CapfloorType" />
					<xsd:element name="strike" type="xsd:double" />
					<xsd:element name="marketPrice" type="xsd:double" />
					<xsd:element name="simulationRate" type="xsd:double" />
					<xsd:element name="volatilityType" type="tns:VolatilityEnum" />
					<xsd:element name="volatilityValue" type="xsd:double" />
					<xsd:element minOccurs="0" name="calendarsList" type="tns:CalendarsList" />
					<xsd:element minOccurs="0" name="floatingComponent" type="tns:SwapStream" />
					<xsd:element minOccurs="0" name="inflationComponent" type="tns:InflationLeg" />
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:simpleType name="PayoffType">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">Specifies whether the payoff of a Cap/Floor instrument is standard (ie max(rate - strike, 0)) or digital (ie notionalRate if rate &gt;= strike, 0 otherwise)</xsd:documentation>
    </xsd:annotation>
		<xsd:restriction base="xsd:normalizedString">
			<xsd:enumeration value="Digital" />
			<xsd:enumeration value="Standard" />
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType  name="CapUnderlying">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">The type of underlying for a Cap/Floor instrument: either Interest Rate or Inflation Rate</xsd:documentation>
    </xsd:annotation>
		<xsd:restriction base="xsd:normalizedString">
			<xsd:enumeration value="Interest_Rate" />
			<xsd:enumeration value="Inflation" />
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="CapfloorType">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">Specifies whether a Cap/Floor instrument is a Cap (bearer agrees to purchase the underlying debt at an agreed rate) or a floor (bearer agrees to sell the underlying debt at an agreed rate)</xsd:documentation>
    </xsd:annotation>
		<xsd:restriction base="xsd:normalizedString">
			<xsd:enumeration value="Cap" />
			<xsd:enumeration value="Floor" />
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="VolatilityEnum">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">Determines whether a Volatility set at Cap/Floor level is to be interpreted as a spread over the market volatility or as a substitution of the market volatility</xsd:documentation>
    </xsd:annotation>
		<xsd:restriction base="xsd:normalizedString">
			<xsd:enumeration value="Overvolatility" />
			<xsd:enumeration value="Fixed Volatility" />
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:complexType name="LegacyDerivativeCode">
		<xsd:annotation>
			<xsd:documentation source="http://www.sophis.net" xml:lang="en">Type to identify an instrument inside a Legacy derivative format.</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element minOccurs="0" name="SOPHISCODE">
				<xsd:annotation>
					<xsd:documentation source="http://www.sophis.net" xml:lang="en">Sophis internal code (namely sicovam).</xsd:documentation>
				</xsd:annotation>
				<xsd:complexType>
					<xsd:simpleContent>
						<xsd:extension base="xsd:unsignedInt">
							<xsd:attribute name="selectedIdentifier" type="xsd:normalizedString" use="optional" />
							<xsd:attributeGroup ref="common:ReferenceGroup" />
						</xsd:extension>
					</xsd:simpleContent>
				</xsd:complexType>
			</xsd:element>
			<xsd:element minOccurs="0" name="ISIN">
				<xsd:annotation>
					<xsd:documentation source="http://www.sophis.net" xml:lang="en">Reference, Mnemo, or External Reference.</xsd:documentation>
				</xsd:annotation>
				<xsd:complexType>
					<xsd:simpleContent>
						<xsd:extension base="common:StringBounded39">
							<xsd:attribute name="selectedIdentifier" type="xsd:normalizedString" use="optional" />
							<xsd:attributeGroup ref="common:ReferenceGroup" />
						</xsd:extension>
					</xsd:simpleContent>
				</xsd:complexType>
			</xsd:element>
			<xsd:element minOccurs="0" name="Markit" type="xsd:normalizedString"/>
			<xsd:element minOccurs="0" name="Reference" type="xsd:normalizedString"/>
			<xsd:element minOccurs="0" name="SophisReference" type="xsd:normalizedString"/>
			<xsd:element minOccurs="0" name="Ticker" type="xsd:normalizedString"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="LegacyDerivativeUnderlyingData">
		<xsd:annotation>
			<xsd:documentation  source="http://www.sophis.net" xml:lang="en">Type to define data related to the underlyer of a derivative in Legacy format</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element minOccurs="0" name="accounting_date" type="xsd:int">
				<xsd:annotation>
					<xsd:documentation  source="http://www.sophis.net" xml:lang="en">datedebutexercice??</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:simpleType name="Basis_type">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">Specifies whether an Option is swapped (versus a Rate Leg) or not</xsd:documentation>
    </xsd:annotation>
		<xsd:restriction base="xsd:int">
			<xsd:enumeration value="4">
				<xsd:annotation>
					<xsd:documentation  source="http://www.sophis.net" xml:lang="en">Normal option</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="5">
				<xsd:annotation>
					<xsd:documentation  source="http://www.sophis.net" xml:lang="en">Swapped option</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="NumericQuotationType">
		<xsd:annotation>
			<xsd:documentation xml:lang="en">List of quotation types available. This is the numerical version of type QuotationType.</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:int">
			<xsd:enumeration value="-1">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">NotDefined.</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="0">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">InPrice.</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="1">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">InYield.</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="2">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">InPercentage.</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="3">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">InPriceWithoutAccrued.</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="4">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">InPercentWithAccrued.</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="5">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">InAnotherCurrency.</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="6">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">Uncertain.</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="7">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">InDiscountMargin.</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="8">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">InPriceNominalClean.</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="9">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">InPriceNominalDirty.</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="10">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">InPriceRealClean.</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="11">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">InPriceRealDirty.</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="12">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">InPriceInitialClean.</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="13">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">InPriceInitialDirty.</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="14">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">InYieldNominal.</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="15">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">InYieldReal.</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="16">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">InAmountNominalClean.</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="17">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">InAmountNominalDirty.</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="EquityType">
		<xsd:annotation>
			<xsd:documentation xml:lang="en">Specify the way the underlying is delivered. See complexType SettlementType</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:int">
			<xsd:enumeration value="1">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">NewShare.</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="2">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">OldShare (ACT_ANCIENNE).</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="3">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">CashPayment (ACT_DIV_CONT).</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="4">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">CashPayment (ACT_OAT).</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="5">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">Currency.</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="6">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">CashPayment (ACT_OPTION).</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="7">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">OldShare (ACT_FUTUR).</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="8">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">MarketDelivery.</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="9">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">Cash and application.</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="ComputationType">
		<xsd:annotation>
			<xsd:documentation xml:lang="en">Specifies the pay-off of the option. See ComplexType OptionTypeEnum.</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:int">
			<xsd:enumeration value="1">
				<xsd:annotation>
					<xsd:documentation source="http://www.sophis.net" xml:lang="en">Call for single underlying.</xsd:documentation>
					<xsd:documentation source="http://www.sophis.net" xml:lang="en">BestOfCallCall for two underlying.</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="2">
				<xsd:annotation>
					<xsd:documentation source="http://www.sophis.net" xml:lang="en">Put for single underlying.</xsd:documentation>
					<xsd:documentation source="http://www.sophis.net" xml:lang="en">BestOfCallPut for two underlying.</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="3">
				<xsd:annotation>
					<xsd:documentation source="http://www.sophis.net" xml:lang="en">ConvertibleBond for single underlying.</xsd:documentation>
					<xsd:documentation source="http://www.sophis.net" xml:lang="en">BestOfPutPut for two underlying.</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="4">
				<xsd:annotation>
					<xsd:documentation source="http://www.sophis.net" xml:lang="en">RedeemableBond for single underlying.</xsd:documentation>
					<xsd:documentation source="http://www.sophis.net" xml:lang="en">BestOfPutCall for two underlying.</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="5">
				<xsd:annotation>
					<xsd:documentation source="http://www.sophis.net" xml:lang="en">IndexedLoan for single underlying.</xsd:documentation>
					<xsd:documentation source="http://www.sophis.net" xml:lang="en">Spread for two underlying.</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="6">
				<xsd:annotation>
					<xsd:documentation source="http://www.sophis.net" xml:lang="en">LockInBond for single underlying.</xsd:documentation>
					<xsd:documentation source="http://www.sophis.net" xml:lang="en">Basket for two underlying.</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="7">
				<xsd:annotation>
					<xsd:documentation source="http://www.sophis.net" xml:lang="en">RedeemableIndexedLoan for single underlying.</xsd:documentation>
					<xsd:documentation source="http://www.sophis.net" xml:lang="en">WorstOfCallCall for two underlying.</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="8">
				<xsd:annotation>
					<xsd:documentation source="http://www.sophis.net" xml:lang="en">WorstOfCallPut for two underlying.</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="9">
				<xsd:annotation>
					<xsd:documentation source="http://www.sophis.net" xml:lang="en">ShareWithEquityOption for single underlying.</xsd:documentation>
					<xsd:documentation source="http://www.sophis.net" xml:lang="en">WorstOfPutPut for two underlying.</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="10">
				<xsd:annotation>
					<xsd:documentation source="http://www.sophis.net" xml:lang="en">BondWithStockPurchaseWarrant for single underlying.</xsd:documentation>
					<xsd:documentation source="http://www.sophis.net" xml:lang="en">WorstOfPutCall for single underlying.</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="11">
				<xsd:annotation>
					<xsd:documentation source="http://www.sophis.net" xml:lang="en">DuoDigital for single underlying.</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:complexType name="CreditRiskInfo">
		<xsd:all>
	  <xsd:element minOccurs="0" name="frequency" type="xsd:int" />
	  <xsd:element minOccurs="0" name="dayCountBasis" type="tns:DayCountBasis" />
	  <xsd:element minOccurs="0" name="mode" type="xsd:int" />
      <xsd:element minOccurs="0" name="defaultEvent" type="xsd:integer" />
	  <xsd:element minOccurs="0" name="YTMInstrument" type="tns:Identifier" />
		</xsd:all>
	</xsd:complexType>
	<xsd:complexType name="PricerParameters">
		<xsd:all>
	  <xsd:element minOccurs="0" name="time_steps" type="xsd:int" />
	  <xsd:element minOccurs="0" name="funding_spread" type="xsd:double" />
		</xsd:all>
	</xsd:complexType>
	<xsd:complexType name="LegacyDerivative">
		<xsd:all>
			<xsd:element minOccurs="0" name="derivative_name" type="common:StringBounded39">
				<xsd:annotation>
					<xsd:documentation  source="http://www.sophis.net" xml:lang="en">redundant with element name of InstrumentForLegacyDerivativeMessage,
						denotes to the name of the derivative instrument.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element minOccurs="0" name="basis_type" type="tns:Basis_type">
				<xsd:annotation>
					<xsd:documentation  source="http://www.sophis.net" xml:lang="en">Indicates the type of option</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element minOccurs="0" name="derivative_code" type="tns:LegacyDerivativeCode">
				<xsd:annotation>
					<xsd:documentation  source="http://www.sophis.net" xml:lang="en">code of the derivative instrument</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element minOccurs="0" name="underlying_code" type="tns:LegacyDerivativeCode">
				<xsd:annotation>
					<xsd:documentation  source="http://www.sophis.net" xml:lang="en">Code of the underlyer</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element minOccurs="0" name="issuer_code" type="tns:LegacyDerivativeCode">
				<xsd:annotation>
					<xsd:documentation  source="http://www.sophis.net" xml:lang="en">Code of the issuer</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element minOccurs="0" name="underlying_data" type="tns:LegacyDerivativeUnderlyingData">
				<xsd:annotation>
					<xsd:documentation  source="http://www.sophis.net" xml:lang="en">Data relative to the underlyer</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element minOccurs="0" name="issue_price" type="xsd:double" />
			<xsd:element minOccurs="0" name="strike" type="xsd:double" />
			<xsd:element minOccurs="0" name="exercice_currency" type="tns:Currency" />
			<xsd:element minOccurs="0" name="quotation_currency" type="tns:Currency" />
			<xsd:element minOccurs="0" name="quotation_type" type="tns:NumericQuotationType" />
			<xsd:element minOccurs="0" name="closure_begin" type="xsd:date" />
			<xsd:element minOccurs="0" name="closure_end" type="xsd:date" />
			<xsd:element minOccurs="0" name="proportion" type="xsd:double" />
			<xsd:element minOccurs="0" name="convertion_ratio_en_share" type="xsd:double" />
      <xsd:element minOccurs="0" name="initial_convertion_ratio" type="xsd:double" />
			<xsd:element minOccurs="0" name="equity_type" type="tns:EquityType" />
			<xsd:element minOccurs="0" name="issue_number" type="xsd:double" />
			<xsd:element minOccurs="0" name="issue_date" type="xsd:date">
				<xsd:annotation>
					<xsd:documentation source="http://www.sophis.net" xml:lang="en">Number of days since 01/01/1904.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element minOccurs="0" name="base_underlying" type="xsd:double" />
			<xsd:element minOccurs="0" name="quanto" type="tns:BooleanInteger" />
      <xsd:element minOccurs="0" name="foreign_rate" type="xsd:double">
        <xsd:annotation>
          <xsd:documentation source="http://www.sophis.net" xml:lang="en">Informative field giving the calculated foreign rate for quanto CB</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
			<xsd:element minOccurs="0" name="computation_type" type="tns:ComputationType" />
			<xsd:element minOccurs="0" name="notional" type="xsd:double"  />
			<xsd:element minOccurs="0" name="nb_available_assets" type="xsd:int" />
			<xsd:element minOccurs="0" name="quotity" type="xsd:double" />
			<xsd:element minOccurs="0" name="market_code" type="tns:Mnemonic" />
			<xsd:element minOccurs="0" name="payment_date" type="xsd:date" />
			<xsd:element minOccurs="0" name="straight_value" type="xsd:double" />
      <xsd:element minOccurs="0" name="spreadDiscount" type="xsd:double" />
	  <xsd:element minOccurs="0" name="calledDate" type="xsd:int" />
	  <xsd:element minOccurs="0" name="calledPrice" type="xsd:double" />
      <xsd:element minOccurs="0" name="calledPriceInPercent" type="xsd:boolean" />
	  <xsd:element minOccurs="0" name="minimumPiece" type="xsd:double" />
	  <xsd:element minOccurs="0" name="lowestIncrement" type="xsd:double" />
	  <xsd:element minOccurs="0" name="creditRisk" type="tns:CreditRiskInfo" />
	  <xsd:element minOccurs="0" name="allotment" type="xsd:normalizedString" />
	  <xsd:element minOccurs="0" name="model" type="xsd:normalizedString" />
	  <xsd:element minOccurs="0" name="dialog" type="tns:Dialog" />
	  <xsd:element minOccurs="0" name="optimisation" type="tns:Optimisation" />
	  <xsd:element minOccurs="0" name="underlying_model" type="tns:UnderlyingModel" />
	  <xsd:element minOccurs="0" name="pricer_parameters" type="tns:PricerParameters" />
	  <xsd:element minOccurs="0" name="fixingType" type="xsd:normalizedString" />
		</xsd:all>
	</xsd:complexType>
	<xsd:simpleType name="BooleanInteger">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">A Boolean Value</xsd:documentation>
    </xsd:annotation>
		<xsd:restriction base="xsd:int">
			<xsd:enumeration value="0" />
			<xsd:enumeration value="1" />
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:complexType name="InstrumentForLookup" >
    <xsd:annotation>
      <xsd:documentation xml:lang="en">Element used to perform a lookup of instrument without definition in FpML messages</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="tns:InstrumentBase">
        <xsd:sequence>
          <xsd:element minOccurs="0" name="identifier" type="tns:Identifier" />
		 		 <xsd:element minOccurs="0" name="status" type="xsd:normalizedString" >
          <xsd:annotation>
            <xsd:documentation xml:lang="en">Identification of the underlying asset, using public and/or private identifiers.</xsd:documentation>
          </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="extraFields" type="common:ExtraFields">
            <xsd:annotation>
              <xsd:documentation xml:lang="en">Since 5.3.3 : contains all extensible elements (toolkit datas for example)</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
	<xsd:complexType name="LegacyDerivativeClause">
		<xsd:all>
			<xsd:element minOccurs="0" name="clause_code" type="xsd:int" />
			<xsd:element minOccurs="0" name="clause_name" type="common:StringBounded39" />
			<xsd:element minOccurs="0" name="clause_type" type="xsd:int" />
			<xsd:element minOccurs="0" name="start_date" type="xsd:date" />
			<xsd:element minOccurs="0" name="end_date" type="xsd:date" />
			<xsd:element minOccurs="0" name="minimum" type="xsd:double" />
			<xsd:element minOccurs="0" name="maximum" type="xsd:double" />
			<xsd:element minOccurs="0" name="comment" type="common:StringBounded39" />
			<xsd:element minOccurs="0" name="is_percentage_1" type="tns:BooleanInteger">
				<xsd:annotation>
					<xsd:documentation source="http://www.sophis.net" xml:lang="en">Indicates whether the minimum value is (=1) or is not (=0) expressed in percent.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element minOccurs="0" name="is_percentage_2" type="tns:BooleanInteger">
				<xsd:annotation>
					<xsd:documentation source="http://www.sophis.net" xml:lang="en">Indicates whether the maximum value is (=1) or is not (=0) expressed in percent.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element minOccurs="0" name="percentage_value" type="tns:BooleanInteger">
				<xsd:annotation>
					<xsd:documentation source="http://www.sophis.net" xml:lang="en">Indicates whether the value is (=1) or is not (=0) expressed in percent.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element minOccurs="0" name="clause_payment_date" type="xsd:date" />
			<xsd:element minOccurs="0" name="value" type="xsd:double" />
			<xsd:element minOccurs="0" name="datecross" type="xsd:date" />
			<xsd:element minOccurs="0" name="is_value_replaced_with_histo_fixing" type="xsd:int" />
		</xsd:all>
	</xsd:complexType>
	<xsd:complexType name="LegacyDerivativeRedemption">
		<xsd:all>
			<xsd:element minOccurs="0" name="maturity_date" type="xsd:date" />
			<xsd:element minOccurs="0" name="coupon_amount" type="xsd:double" />
			<xsd:element minOccurs="0" name="redemption_amount" type="xsd:double" />
			<xsd:element minOccurs="0" name="redemption_nb_available_assets" type="xsd:double" />
			<xsd:element minOccurs="0" name="nb_converted_assets" type="xsd:double" />
			<xsd:element minOccurs="0" name="pool_factor" type="xsd:double" />
			<xsd:element minOccurs="0" name="abs_flow" type="xsd:double" />
      <xsd:element minOccurs="0" name="current_balance" type="xsd:double" />
      <xsd:element minOccurs="0" name="interest_shortfall" type="xsd:double" />
			<xsd:element minOccurs="0" name="forex_notional" type="xsd:double" />
		</xsd:all>
	</xsd:complexType>
	<xsd:complexType name="InstrumentForLegacyDerivativeMessage">
		<xsd:complexContent>
			<xsd:extension base="tns:Instrument">
				<xsd:sequence>
					<xsd:element minOccurs="0" name="pricing" type="tns:PricingForOption">
						<xsd:annotation>
							<xsd:documentation  source="http://www.sophis.net" xml:lang="en">only model, dialog, optimisation, and underlyingModel are implemented for legacy options</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
  <xsd:complexType name="FixedRate">
    <xsd:all>
      <xsd:element minOccurs="0" name="couponRate" type="xsd:double"/>
      <xsd:element minOccurs="0" name="frequency" type="xsd:int"/>
      <xsd:element minOccurs="0" name="dayCountBasis" type="tns:DayCountBasis"/>
      <xsd:element minOccurs="0" name="mode" type="xsd:int"/>
    </xsd:all>
  </xsd:complexType>
	<xsd:complexType name="LegacyDerivativeMessage">
		<xsd:complexContent>
			<xsd:extension base="tns:InstrumentForLegacyDerivativeMessage">
				<xsd:sequence>
					<xsd:element minOccurs="0" name="version" type="xsd:int" default="1" />
					<xsd:element minOccurs="0" name="derivative" type="tns:LegacyDerivative" />
					<xsd:element minOccurs="0" name="fixedRate" type="tns:FixedRate" />
					<xsd:element minOccurs="0" maxOccurs="unbounded" name="clause" type="tns:LegacyDerivativeClause" />
					<xsd:element minOccurs="0" maxOccurs="unbounded" name="redemption" type="tns:LegacyDerivativeRedemption" />
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	  <xsd:complexType name="BasketSwapHistorys">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">List of Basket Swap histrories</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="BASKET_SWAP_HISTORY" type="tns:BasketSwapHistory"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="BasketSwapHistory">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">The historic of basket adjustment </xsd:documentation>
    </xsd:annotation>
    <xsd:all>
      <xsd:element minOccurs="0" name="SICOVAM" type="tns:Underlyer"/>
      <xsd:element minOccurs="0" name="VAL_DATE" type="xsd:date"/>
      <xsd:element minOccurs="0" name="Accrued_pay_type" type="xsd:short"/>
      <xsd:element minOccurs="0" name="VAL_DATE_PAY" type="xsd:date"/>
      <xsd:element minOccurs="0" name="REMOVED_AMOUNT" type="xsd:double"/>
      <xsd:element minOccurs="0" name="UNCH_AMOUNT" type="xsd:double"/>
      <xsd:element minOccurs="0" name="ADDED_AMOUNT" type="xsd:double"/>
      <xsd:element minOccurs="0" name="NEW_SICOVAM" type="tns:Underlyer"/>
    </xsd:all>
  </xsd:complexType>
  <xsd:simpleType name="PricingTypeEnum">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">The Pricing Types of a Bond: standard, MtM...
This may be used in combination with any Pricing Model</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:normalizedString">
      <xsd:enumeration value="XXX"/>
      <xsd:enumeration value="Theoretical"/>
      <xsd:enumeration value="MtM_Greeks_MtM"/>
      <xsd:enumeration value="MtM_Greeks_Theo"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!-- -->
   <xsd:element name="extraFields" type="common:ExtraFields"/>
	<xsd:simpleType name="TreasuryMovementType">
		<xsd:annotation>
			<xsd:documentation xml:lang="en">Defines various supported types of treasury movement.</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:normalizedString">
			<xsd:enumeration value="TreasuryMovementImpact">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">Cash impact from normal (non-treasury) deal.</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="TreasuryMovementAdjustment">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">Cash adjustment, like initial balance or due to mistakes.</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="TreasuryMovementRetail">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">Cash impact due to other activities (retail, etc) not managed by Sophis.</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="TreasuryMovementLevel">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">Cash transfer between two accounts.</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="TreasuryMovementAccountRemuneration">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">Cash remuneration on account.</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="TreasuryMovementAccountCost">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">Account cost payment.</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:complexType name="TreasuryAccountInstrument">
		<xsd:complexContent>
			<xsd:extension base="tns:Instrument">
				<xsd:sequence>
				    <xsd:element minOccurs="0" name="pricing" type="tns:Pricing" />
					<xsd:element minOccurs="1" maxOccurs="1" name="movementType" type="tns:TreasuryMovementType">
						<xsd:annotation>
							<xsd:documentation xml:lang="en">The type of treasury movement.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
          <xsd:element minOccurs="1" maxOccurs="1" name="sourceAccountName" type="common:StringBounded249">
						<xsd:annotation>
							<xsd:documentation xml:lang="en">The name of treasury account from which the balance is done.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
          <xsd:element minOccurs="0" maxOccurs="1" name="targetAccountName" type="common:StringBounded249">
						<xsd:annotation>
							<xsd:documentation xml:lang="en">The name of treasury account on which the operation is to be done. Optional as it can be an external account.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="Asset" abstract="true">
		<xsd:annotation>
			<xsd:documentation xml:lang="en">Abstract base class for all underlying assets.</xsd:documentation>
		</xsd:annotation>
		<xsd:attribute name="id" type="xsd:ID" />
	</xsd:complexType>
	<xsd:complexType name="BasketUnderlyer">
		<xsd:annotation>
			<xsd:documentation xml:lang="en">A type describing the underlyer features of a basket swap. Each of the basket constituents are described through an embedded component, the basketConstituentsType.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="Asset">
				<xsd:sequence>
					<xsd:element name="openUnits" type="xsd:decimal" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation xml:lang="en">The number of units (index or securities) that constitute the underlyer of the swap. In the case of a basket swap, this element is used to reference both the number of basket units, and the number of each asset components of the basket when these are expressed in absolute terms.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="basketConstituent" type="BasketConstituent" minOccurs="0" maxOccurs="unbounded">
						<xsd:annotation>
							<xsd:documentation xml:lang="en">Describes each of the components of the basket.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="linePicking" type="LinePicking" minOccurs="0" maxOccurs="1">
						<xsd:annotation>
							<xsd:documentation xml:lang="en">Describes line picking for the components of the baskets.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="basketDivisor" type="xsd:decimal" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation xml:lang="en">Specifies the basket divisor amount. This value is normally used to adjust the constituent weight for pricing or to adjust for dividends, or other corporate actions.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
          <xsd:element minOccurs="0" name="fwdNotional" type="tns:FwdNotional">
            <xsd:annotation>
              <xsd:documentation xml:lang="en">If included, it describes the forward notional currency and value for forward start basket swaps.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
					<xsd:element minOccurs="0" name="dividendPayout" type="tns:DividendPayout" />
			<xsd:element minOccurs="0" name="settlementCurrency" type="tns:Currency">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">The currency for non-deliverable currency equity leg payments.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="BasketConstituentSpreadType">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">The spread to use on the basket line</xsd:documentation>
    </xsd:annotation>
		<xsd:simpleContent>
			<xsd:extension base="xsd:double">
				<xsd:attribute name="adjusted" type="xsd:boolean" default="false" />
			</xsd:extension>
		</xsd:simpleContent>
	</xsd:complexType>
	<xsd:complexType name="BasketConstituent">
		<xsd:annotation>
			<xsd:documentation xml:lang="en">A type describing each of the constituents of a basket.</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element ref="underlyer" />
			<xsd:element name="constituentWeight" type="ConstituentWeight" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">Specifies the weight of each of the underlyer constituent within the basket, either in absolute or relative terms. This is an optional component, as certain swaps do not specify a specific weight for each of their basket constituents.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="dividendPayout" type="DividendPayout" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">Specifies the dividend payout ratio associated with an equity underlyer. A basket swap can have different payout ratios across the various underlying constituents. In certain cases the actual ratio is not known on trade inception, and only general conditions are then specified. Users should note that FpML makes a distinction between the derivative contract and the underlyer of the contract. It would be better if the agreed dividend payout on a derivative contract was modelled at the level of the derivative contract, an approach which may be adopted in the next major version of FpML.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="underlyerPrice" type="Price" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">Specifies the price that is associated with each of the basket constituents. This component is optional, as it is not absolutely required to accurately describe the economics of the trade, considering the price that characterizes the equity swap is associated to the leg of the trade.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="adjustedUnderlyerPrice" type="ActualPrice" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">Adjusted price for the constituent.
						If not specified, the net price or equivalent from underlyerPrice is used.
						FX conversion, if applicable, is taken from underlyerPrice.
						Adjusted price is meaningful and used only in Price Return Swaps, ignored otherwise.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="underlyerNotional" type="Money" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">Specifies the notional (i.e. price * quantity) that is associated with each of the basket constituents. This component is optional, as it is not absolutely required to accurately describe the economics of the trade, considering the notional that characterizes the equity swap is associated to the leg of the trade.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>

			<xsd:element name="spread" type="BasketConstituentSpreadType" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">Deprecated, replace by Borrow Spread for the constituent, specified in percent. Also indicates whether the constituent is adjusted or not.
						If not present, (not adjusted) zero is used.</xsd:documentation>
				 </xsd:annotation>
			</xsd:element>

      		<xsd:element name="borrowSpread" type="BasketConstituentSpreadType" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">Borrow Spread for the constituent, specified in percent. Also indicates whether the constituent is adjusted or not.
						If not present, (not adjusted) zero is used.</xsd:documentation>
			</xsd:annotation>
			</xsd:element>

  			<xsd:element name="fundingSpread" type="BasketConstituentSpreadType" minOccurs="0">
    			<xsd:annotation>
      				<xsd:documentation xml:lang="en">Funding Spread for the constituent, specified in percent. Also indicates whether the constituent is adjusted or not.
        				If not present, (not adjusted) zero is used.</xsd:documentation>
    			</xsd:annotation>
  			</xsd:element>

      <xsd:element minOccurs="0" maxOccurs="1" name="fxFixingModified" type="xsd:short" />
      <xsd:element name="divEligibility" type="DividendEligibility" minOccurs="0">
        <xsd:annotation>
					<xsd:documentation xml:lang="en">Dividend Eligibility (Standard, Special Ex, Special Cum).
            It is applied to the quantity added or decreased in the adjustment.
            If quantity is not modified it is set to Standard value as it is not used.
            If not specified, default value is Standard.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="accrued" minOccurs="0" type="xsd:double">
        <xsd:annotation>
					<xsd:documentation xml:lang="en">Accrued coupon value of the component on payment date of the adjustment in case the instrument is quoted in clean price.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
	  <xsd:element name="extraFields" type="common:ExtraFields" minOccurs="0" />
		</xsd:sequence>
		<xsd:attribute name="id" type="xsd:ID" use="optional" />
	</xsd:complexType>
	<xsd:simpleType name="ConstituentWeightOp">
		<xsd:restriction base="xsd:normalizedString">
			<xsd:enumeration value="set" />
			<xsd:enumeration value="add" />
			<xsd:enumeration value="multiply" />
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:complexType name="ConstituentWeight">
		<xsd:annotation>
			<xsd:documentation xml:lang="en">A type describing the weight of each of the underlyer constituent within the basket, either in absolute or relative terms.</xsd:documentation>
		</xsd:annotation>
		<xsd:all>
			<xsd:element name="openUnits" type="xsd:decimal">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">The number of units (index or securities) that constitute the underlyer of the swap. In the case of a basket swap, this element is used to reference both the number of basket units, and the number of each asset components of the basket when these are expressed in absolute terms.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element minOccurs="0" name="isInWeight" type="xsd:boolean">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">If true then openUnits is to be considered as notional weight. If not it is a quantity.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:all>
		<xsd:attribute name="op" type="tns:ConstituentWeightOp" default="set" />
	</xsd:complexType>
	<xsd:complexType name="Price">
		<xsd:annotation>
			<xsd:documentation xml:lang="en">A type describing the strike price.</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:sequence>
				<xsd:element name="netPrice" type="ActualPrice">
					<xsd:annotation>
						<xsd:documentation xml:lang="en">Specifies the price of the underlyer, net of commissions.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="accruedInterestPrice" type="xsd:decimal" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation xml:lang="en">Specifies the accrued interest that are part of the dirty price in the case of a fixed income security or a convertible bond. Expressed in percentage of the notional.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="fxConversion" type="FxConversion" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation xml:lang="en">Specifies the currency conversion rate that applies to an amount. This rate can either be defined elsewhere in the document (case of a quanto swap), or explicitly described through this component.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
			</xsd:sequence>
			<xsd:element name="cleanNetPrice" type="xsd:decimal" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">The net price excluding accrued interest. The "Dirty Price" for bonds is put in the "netPrice" element, which includes accrued interest. Thus netPrice - cleanNetPrice = accruedInterest. The currency and price expression for this field are the same as those for the (dirty) netPrice.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="currency" type="tns:Currency" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation xml:lang="en"></xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="FxConversion">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">Specifies the currency conversion rate that applies to an amount. This rate can either be defined elsewhere in the document (case of a quanto swap), or explicitly described through this component</xsd:documentation>
    </xsd:annotation>
		<xsd:sequence>
			<xsd:element name="fxRate" type="FxRate" maxOccurs="unbounded">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">Specifies a currency conversion rate.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>
  <xsd:complexType name="StubDates">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">Specifies the stub calculation period</xsd:documentation>
    </xsd:annotation>
    <xsd:all>
      <xsd:element minOccurs="0" name="firstRegularPeriodStartDate" type="common:AdjustableOrRelativeDate" />
      <xsd:element minOccurs="0" name="lastRegularPeriodEndDate" type="common:AdjustableOrRelativeDate" />
    </xsd:all>
  </xsd:complexType>
  <xsd:complexType name="LongBeginEnd">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">Element to define how to deal with a none standard calculation period within a swap stream</xsd:documentation>
    </xsd:annotation>
    <xsd:all>
      <xsd:element minOccurs="0" name="stubPeriodType" type="tns:StubPeriodType" />
      <xsd:element minOccurs="0" name="stubPeriodTypeAlt" type="tns:StubPeriodType" />
    </xsd:all>
  </xsd:complexType>
  <xsd:complexType name="Amortizing">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">A parametric representation of the amortizing schedule of a Fixed Income instrument</xsd:documentation>
    </xsd:annotation>
    <xsd:all>
      <xsd:element minOccurs="0" name="notionalStepParameters" type="tns:NotionalStepRule" />
    </xsd:all>
  </xsd:complexType>
  <xsd:complexType name="SwapInSwaption">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">The description of the underlying Swap when the user configurates it directly as properties of a Swaption</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" name="underlyingTemplate" type="tns:Identifier"/>
      <xsd:element minOccurs="0" name="startDate" type="xsd:date"/>
      <xsd:element minOccurs="0" name="startDate2" type="common:AdjustableOrRelativeDate"/>
      <xsd:element minOccurs="0" name="startDate2Type" type="tns:dateType"/>
      <xsd:element minOccurs="0" name="endDate" type="xsd:date"/>
      <xsd:element minOccurs="0" name="endDate2" type="common:AdjustableOrRelativeDate"/>
      <xsd:element minOccurs="0" name="endDate2Type" type="tns:dateType"/>
      <xsd:element minOccurs="0" name="family" type="xsd:normalizedString"/>
      <xsd:choice minOccurs="0">
        <xsd:element name="floatingIndex" type="tns:Identifier" />
        <xsd:element name="floatingRate" type="tns:FloatingRate" />
      </xsd:choice>
			<xsd:element minOccurs="0" name="floatingIndexTenor" type="common:DateInterval" />
      <xsd:element minOccurs="0" name="floatingLegFrequency" type="tns:CouponFrequency" />
      <xsd:element minOccurs="0" name="spread" type="xsd:double" />
      <xsd:element minOccurs="0" name="foatingLongBeginEnd" type="tns:LongBeginEnd" />
      <xsd:element minOccurs="0" name="floatingStubDates" type="tns:StubDates" />
      <xsd:element minOccurs="0" name="floatingLegAdjustmentMethod" type="tns:AdjustmentMethod" />
      <xsd:element minOccurs="0" name="floatingLegBusinessDayConvention" type="tns:HolidayAdjustementEnum" />
      <xsd:element minOccurs="0" name="hasFloatingAmortizing" type="xsd:boolean" />
      <xsd:element minOccurs="0" name="floatingAmortizing" type="tns:Amortizing"/>
      <xsd:element minOccurs="0" name="fixedLegFrequency" type="tns:CouponFrequency" />
      <xsd:element minOccurs="0" name="interestBasis" type="tns:DayCountBasis" />
      <xsd:element minOccurs="0" name="interestMode" type="tns:YieldCalculation" />
      <xsd:element minOccurs="0" name="fixedLongBeginEnd" type="tns:LongBeginEnd" />
      <xsd:element minOccurs="0" name="fixedStubDates" type="tns:StubDates" />
      <xsd:element minOccurs="0" name="fixedLegAdjustmentMethod" type="tns:AdjustmentMethod" />
      <xsd:element minOccurs="0" name="fixedLegBusinessDayConvention" type="tns:HolidayAdjustementEnum" />
      <xsd:element minOccurs="0" name="hasFixedAmortizing" type="xsd:boolean" />
      <xsd:element minOccurs="0" name="fixedAmortizing" type="tns:Amortizing"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="Commission">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">A type describing the commission that will be charged for each of the hedge transactions</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="tns:Instrument">
        <xsd:sequence>
		  <xsd:element minOccurs="0" name="pricing" type="tns:Pricing" />
          <xsd:element minOccurs="0" name="depositary" type="xsd:unsignedInt"/>
          <xsd:element minOccurs="0" name="businessEvent" type="xsd:int"/>
          <xsd:element minOccurs="0" name="convention" type="xsd:int"/>
          <xsd:element minOccurs="0" name="rate" type="tns:Underlyer"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>

	<xsd:complexType name="ExMaskUnderlyingList">
		<xsd:annotation>
			<xsd:documentation xml:lang="en">List of underlyings of a Clause Builder Option Exotic Mask</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element minOccurs="0" maxOccurs="unbounded" name="UnderlyingData" type="tns:ExMaskUnderlyingData"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="ExMaskUnderlyingData">
		<xsd:annotation>
			<xsd:documentation xml:lang="en">A line in the list of underlyings of a Clause Builder Option Exotic Mask</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="LineId" type="xsd:int"/>
			<xsd:element name="UnderlyingCode" type="Underlyer"/>
		</xsd:sequence>
	</xsd:complexType>

	<xsd:complexType name="ExoticMaskBase" abstract="true">
		<xsd:sequence>
			<xsd:element name="UnderlyingList" type="tns:ExMaskUnderlyingList"/>
			<xsd:element name="basketType" type="xsd:normalizedString"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:element name="exoticMaskBase" type="tns:ExoticMaskBase"/>

	<xsd:complexType name="ExoticMaskData">
		<xsd:annotation>
			<xsd:documentation xml:lang="en"></xsd:documentation>
		</xsd:annotation>
		<xsd:choice>
			<xsd:element name="customExoticMaskData" type="common:ExtraFields"/>
			<xsd:element ref="exoticMaskBase"/>
		</xsd:choice>
	</xsd:complexType>

	<xsd:complexType name="ClauseBuilderExoticMask">
		<xsd:annotation>
			<xsd:documentation xml:lang="en">For Clause Builder instrument, stores data related to its exotic mask, allowing to generate most of clause builder data</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="MaskName" type="xsd:normalizedString"/>
			<xsd:element minOccurs="0" name="MaskData" type="tns:ExoticMaskData"/>
		</xsd:sequence>
	</xsd:complexType>

  <xsd:complexType name="ClauseBuilderOption">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">An Option created with the "Clause Builder" option mask</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="tns:Option">
        <xsd:sequence>
          <xsd:element minOccurs="0" name="fixedIncome" type="tns:FixedIncomeInOptions"/>
					<xsd:element minOccurs="0" name="UnderlyingList" type="tns:UnderlyingList"/>
					<xsd:element minOccurs="0" name="BasketCompositionList" type="tns:BasketCompositionList"/>
					<xsd:element minOccurs="0" name="BasketClauseList" type="tns:BasketClauseList"/>
					<xsd:element minOccurs="0" name="FixingClauseList" type="tns:FixingClauseList"/>
					<xsd:element minOccurs="0" name="OptionClauseList" type="tns:OptionClauseList"/>
					<xsd:element minOccurs="0" name="FixingValueList" type="tns:FixingValueList"/>
					<xsd:element minOccurs="0" name="PayOff" type="xsd:normalizedString"/>
					<xsd:element minOccurs="0" name="GapRisk" type="xsd:boolean"/>
					<xsd:element minOccurs="0" name="Termsheet" type="xsd:normalizedString"/>
					<xsd:element minOccurs="0" name="IsRateLegPaid" type="xsd:boolean"/>
					<xsd:element minOccurs="0" name="IsNotDeliverable" type="xsd:boolean"/>
					<xsd:element minOccurs="0" name="ExoticMask" type="ClauseBuilderExoticMask"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="UnderlyingList">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">List of underlyings of a Clause Builder Option</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" maxOccurs="unbounded" name="UnderlyingData" type="tns:UnderlyingData" />
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="UnderlyingData">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">A line in the list of underlyings of a Clause Builder Option</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="LineId" type="xsd:int" />
      <xsd:element name="UnderlyingCode" type="tns:Underlyer" />
	  <xsd:element name="MgtFees" type="xsd:double" />
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="BasketCompositionList">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">Used to specify the bonds that constitute the bond basket</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" maxOccurs="unbounded" name="BasketCompositionData" type="tns:BasketCompositionData" />
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="BasketCompositionData">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">Used to define the data of bonds that constitute the basket</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="Basket" type="xsd:normalizedString" />
      <xsd:element name="Type" type="xsd:normalizedString" />
	  <xsd:element name="Components" type="xsd:normalizedString" />
	  <xsd:element name="BasketQuantoType" type="xsd:int" />
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="BasketClauseList">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">Represents a list of clauses.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" maxOccurs="unbounded" name="BasketClauseData" type="tns:BasketClauseData" />
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="BasketClauseData">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">Clauses are terms of a contract modifying the pay-off (and consequently the theoretical price) of a listed or OTC instrument under certain conditions. </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="Basket" type="xsd:normalizedString" />
      <xsd:element name="Element" type="xsd:int" />
	    <xsd:element name="Value" type="xsd:double" />
	    <xsd:element name="Floor" type="xsd:double" />
	    <xsd:element name="Cap" type="xsd:double" />
			<xsd:element name="RolloverDate" type="xsd:date" />
	    <xsd:element name="Information" type="xsd:normalizedString" />
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="FixingClauseList">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">List of Fixing Clauses of a Clause Builder Option</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" maxOccurs="unbounded" name="FixingClauseData" type="tns:FixingClauseData" />
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="FixingClauseData">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">A Fixing Clause of a Clause Builder Option</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="Id" type="xsd:int" />
      <xsd:element name="Type" type="xsd:normalizedString" />
	   <xsd:element name="Date" type="xsd:date" />
      <xsd:element minOccurs="0" name="FixingType" type="xsd:int" />
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="OptionClauseList">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">List of Option Clauses of a Clause Builder Option</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" maxOccurs="unbounded" name="OptionClauseData" type="tns:OptionClauseData" />
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="OptionClauseData">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">An Option Clause of a Clause Builder Option</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="Id" type="xsd:int" />
      <xsd:element name="Name" type="xsd:normalizedString" />
	    <xsd:element name="Value" type="xsd:normalizedString" />
      <xsd:element name="Type" type="xsd:normalizedString" />
      <xsd:element name="Child" type="xsd:normalizedString" />
	    <xsd:element name="Properties" type="xsd:normalizedString" />
	    <xsd:element name="Underlying" type="xsd:normalizedString" />
	    <xsd:element name="PaymentDate" type="xsd:date" />
	    <xsd:element name="Coupon" type="xsd:double" />
	    <xsd:element name="Factor" type="xsd:double" />
        <xsd:element name="Strike" type="xsd:double" />
	    <xsd:element name="Floor" type="xsd:double" />
	    <xsd:element name="Cap" type="xsd:double" />
	    <xsd:element name="StartIds" type="xsd:normalizedString" />
	    <xsd:element name="EndIds" type="xsd:normalizedString" />
      <xsd:element name="Comments" type="xsd:normalizedString" />
	  <xsd:element name="MinAge" type="xsd:int" />
	  <xsd:element name="MaxAge" type="xsd:int" />
	  <xsd:element name="StartDate" type="xsd:int" />
	  <xsd:element name="EndDate" type="xsd:int" />
	  <xsd:element name="DataType_Flag" type="xsd:int" />
			<xsd:element minOccurs="0" name="ReferenceId" type="xsd:int" />
	  <xsd:element minOccurs="0" name="Continuation" type="xsd:normalizedString"/>
	  <xsd:element minOccurs="0" name="IsAbsolute" type="xsd:boolean"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="FixingValueList">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">List of Fixing Values of a Clause Builder Option</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" maxOccurs="unbounded" name="FixingValueData" type="tns:FixingValueData" />
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="FixingValueData">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">A Fixing Value of a Clause Builder Option</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
			<xsd:element minOccurs="0" name="UnderlyingId" type="xsd:int"/>
			<xsd:element minOccurs="0" name="Underlying" type="tns:Underlyer"/>
      <xsd:element name="Date" type="xsd:date" />
      <xsd:element name="Value" type="xsd:double" />
	  <xsd:element name="Status" type="xsd:int" />
      <xsd:element minOccurs="0" name="FixingType" type="xsd:int" />
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="ForexInstrument">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">A Sophis instrument representing an FX pair.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="tns:Instrument">
        <xsd:sequence>
		  <xsd:element minOccurs="0" name="pricing" type="tns:Pricing" />
          <xsd:element name="quotedCurrencyPair" type="tns:QuotedCurrencyPair"/>
          <xsd:element minOccurs="0" name="forexAdditionalData" type="tns:ForexAdditionalData"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="ForexAdditionalData">
    <xsd:annotation>
			<xsd:documentation xml:lang="en">Parameters of an FX pair, such as the market way (e.g. USD/JPY instead of JPY/USD), the lag between trading date and spot settlement date (i.e. ValueDays), the possibility to deliver the currency (use NDF/Non Deliverable Forwards if not), etc.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" name="quotity" type="xsd:double"/>
      <xsd:element minOccurs="0" name="valueDays" type="xsd:int"/>
      <xsd:element minOccurs="0" name="accuracy" type="xsd:int"/>
      <xsd:element minOccurs="0" name="pipsFactor" type="xsd:double"/>
      <xsd:element minOccurs="0" name="ndfDefault" type="xsd:boolean"/>
      <xsd:element minOccurs="0" name="useDiscountedDeltaForStrike" type="xsd:boolean"/>
      <xsd:element minOccurs="0" name="vegaWeightsId" type="xsd:int" />
      <xsd:element minOccurs="0" name="defaultFixingType" type="xsd:unsignedLong"/>
	  <xsd:element minOccurs="0" name="pivotCurrency" type="tns:Currency"/>
	  <xsd:element minOccurs="0" name="fixingTypePivotVsCcy1" type="xsd:unsignedLong"/>
	  <xsd:element minOccurs="0" name="fixingTypePivotVsCcy2" type="xsd:unsignedLong"/>
      <xsd:element minOccurs="0" name="ndfDeliveredCcy" type="tns:Currency"/>
      <xsd:element minOccurs="0" name="calendarsList" type="tns:CalendarsList"/>
    </xsd:sequence>
  </xsd:complexType>
	<xsd:complexType name="ExtraFunding">
		<xsd:annotation>
			<xsd:documentation xml:lang="en">A type defining the parameters for floating leg in Basket Swap instrument to be used in anticipated performance payment.</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element minOccurs="0" name="fundingMethod" type="xsd:normalizedString">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">Funding Method to choose the type of remuneration calculation.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element minOccurs="0" name="fundingRate" type="tns:FloatingRateCalculation">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">Funding Rate used to calculate the remuneration.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element minOccurs="0" name="paymentRule" type="xsd:normalizedString">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">Specify the payment rule for anticipated realized performance payment.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element minOccurs="0" name="longSpread" type="xsd:double">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">Spread used in case the basket has long total notional.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element minOccurs="0" name="shortSpread" type="xsd:double">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">Spread used in case the basket has short total notional.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element minOccurs="0" name="calculateFuturesDailyMargin" type="xsd:boolean">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">Flag specifying if Daily Margin interest should be calculated for Futures.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="ExtraFundingAdj">
		<xsd:annotation>
			<xsd:documentation xml:lang="en">A type defining the Extra Funding parameters used on a basket adjustment.</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="fundingRate" type="tns:FloatingRateCalculation">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">Funding Rate used to calculate the fixing values.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="fixingValue" type="xsd:double">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">Fixing Value of the Basket Adjustment used for calculations.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>
  <xsd:simpleType name="DividendEligibility">
    <xsd:annotation>
			<xsd:documentation>Values accepted for field Dividend Eligibility in basket Swap components.
        standard - use current eligibility rule.
        specialEx - next coupon on diff quantity is not paid/received, next ones are following current eligibility rule.
        specialCum - previous coupon on diff quantity is paid/received, next ones are following current eligibility rule.
                 Only has an effect if trade date is between ex-date and record date, and eligibility is "on the ex-date".</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:normalizedString">
      <xsd:enumeration value="standard" />
      <xsd:enumeration value="specialEx" />
      <xsd:enumeration value="specialCum" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:complexType name="PerformancePaymentRules">
    <xsd:annotation>
			<xsd:documentation xml:lang="en">A type to describe the possible performance payment rules.
        Realized unpaid is paid at earliest of the following if they are ticked as true.
        "Reset/synthetic Reset" is not included as it is always considered true.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="realizedPaymentOnSameComponent" minOccurs="0" type="xsd:boolean" default="false">
        <xsd:annotation>
          <xsd:documentation>If true, Realized unpaid is paid at next performance payment if there is any performance on the same component.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="ratePayment" minOccurs="0" type="xsd:boolean" default="false">
        <xsd:annotation>
          <xsd:documentation>If true, Realized unpaid is paid at next Rate payment.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
	<xsd:complexType name="LinePicking">
		<xsd:annotation>
			<xsd:documentation xml:lang="en">Defines line picking information for the basket.</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="linePickingData" type="LinePickingData" minOccurs="0" maxOccurs="unbounded">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">Describes line picking information for a component.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="LinePickingData">
		<xsd:annotation>
			<xsd:documentation xml:lang="en">Defines line picking information for a component.</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element ref="underlyer" />
			<xsd:element name="decrease" type="DecreaseData" minOccurs="0" maxOccurs="unbounded">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">Describes line picking for one previous adjustment for the component.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="DecreaseData">
		<xsd:annotation>
			<xsd:documentation xml:lang="en">Defines line picking for one previous adjustment for a component.</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="adjustmentId" type="xsd:unsignedInt" minOccurs="1" maxOccurs="1">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">The adjustment to apply line picking to.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="quantity" type="xsd:double" minOccurs="1" maxOccurs="1">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">The quantity to add or substract, shall always be a possitive number.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>
  <xsd:complexType name="FwdNotional">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">Defines forward notional value and currency used for forward start basket swaps.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="1"  name="fwdCurrency" type="tns:Currency">
        <xsd:annotation>
          <xsd:documentation xml:lang="en">Forward currency in which the forward value is set.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="1" name="fwdValue" type="xsd:double">
        <xsd:annotation>
          <xsd:documentation xml:lang="en">Forward notional value for the forward basket swap creation.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:simpleType name="FundingFixingMethod">
    <xsd:annotation>
			<xsd:documentation>Values accepted for field Funding Method for distinct gross and net amount fixings in basket swaps.
        The accepted values are: "Gross Fixing" and "Net Fixing".</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:normalizedString">
      <xsd:enumeration value="Gross Fixing" />
      <xsd:enumeration value="Net Fixing" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:complexType name="FID">
	<xsd:annotation>
		<xsd:documentation>Represents an entry in the FIDLIST table</xsd:documentation>
	</xsd:annotation>
	<xsd:choice>
		<xsd:element name="item" type="xsd:short"/>
		<xsd:element name="name" type="xsd:normalizedString"/>
	</xsd:choice>
  </xsd:complexType>
	<xsd:complexType name="Prefix">
		<xsd:annotation>
			<xsd:documentation>'integrator' and 'source' are taken into account only when 'global' is false, otherwise they are ignored</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="global" type="xsd:boolean" />
			<xsd:element name="integrator" type="xsd:normalizedString" minOccurs="0"/>
			<xsd:element name="source" type="xsd:normalizedString" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="Ric">
		<xsd:annotation>
			<xsd:documentation xml:lang="en">Describes the data contained in the CTRL+J dialog.</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="identifier" type="tns:Identifier" />
			<xsd:element name="fid" type="tns:FID" minOccurs="0" />
			<xsd:element name="prefix" type="tns:Prefix" minOccurs="0" />
			<xsd:element name="reuter" type="xsd:normalizedString" minOccurs="0"/>
			<xsd:element name="userRef" type="xsd:normalizedString" minOccurs="0"/>
			<xsd:element name="gl" type="xsd:normalizedString" minOccurs="0"/>
			<xsd:element name="triarch" type="xsd:normalizedString" minOccurs="0"/>
			<xsd:element name="fist" type="xsd:normalizedString" minOccurs="0"/>
			<xsd:element name="tibco" type="xsd:normalizedString" minOccurs="0"/>
			<xsd:element name="spot" type="xsd:double" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attributeGroup ref="common:PersistentEntity.model"></xsd:attributeGroup>
	</xsd:complexType>
	<xsd:element name="ric" type="Ric" />
	<xsd:simpleType name="GeneralCollateralTypeEnum">
		<xsd:annotation>
			<xsd:documentation xml:lang="en">Determines what components part of the Global Collateral are affected by the selected Repo Curve.</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:normalizedString">
			<xsd:enumeration value="Both" />
			<xsd:enumeration value="Positive Quantity" />
			<xsd:enumeration value="Negative Quantity" />
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="RestrictedPercentage">
		<xsd:annotation>
		  <xsd:documentation xml:lang="en">A type defining a percentage specified as decimal from 0 to 1. A percentage of 5% would be represented as 0.05</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:double">
		  <xsd:minInclusive value="0"/>
		  <xsd:maxInclusive value="1"/>
		</xsd:restriction>
	</xsd:simpleType>
  <xsd:simpleType name="dateType">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">The date type of a swap (IMM monthly, IMM quartely...)</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:normalizedString">
      <xsd:enumeration value="Undefined"></xsd:enumeration>
      <xsd:enumeration value="Regular"></xsd:enumeration>
      <xsd:enumeration value="IMMMonthly"></xsd:enumeration>
      <xsd:enumeration value="IMMQuarterly"></xsd:enumeration>
      <xsd:enumeration value="IMMEquity"></xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
</xsd:schema>

