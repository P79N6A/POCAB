<?xml version="1.0" encoding="utf-8"?>
<xsd:schema targetNamespace="http://www.sophis.net/CorporateActions" xmlns:cans="http://www.sophis.net/CorporateActions" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:common="http://sophis.net/sophis/common" xmlns:tns="http://www.sophis.net/Instrument" elementFormDefault="qualified" attributeFormDefault="qualified">

  <xsd:import namespace="http://sophis.net/sophis/common" schemaLocation="common.xsd" />
  <xsd:import namespace="http://www.sophis.net/Instrument" schemaLocation="instrument.xsd" />

  <!-- Elements readable by Integration Service -->

  <xsd:element name="corporateActions" type="cans:CorporateActions" />
  <xsd:element name="corporateActionsIdentifier" type="tns:Identifier" />
  <!--<xsd:element name="misysCorporateActions" type="cans:MisysCorporateActions" />-->


  <!-- Useful types -->
  <xsd:simpleType name="TicketToGenerateType">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">Type of ticket to be generated by the merger engine. Available values are: Both (default), ClosingTicket, OpeningTicket.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:normalizedString">
      <xsd:enumeration value="Both" />
      <xsd:enumeration value="ClosingTicket" />
      <xsd:enumeration value="OpeningTicket" />
    </xsd:restriction>
  </xsd:simpleType>

  <xsd:simpleType name="ChoiceOptions">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">Choice option at adjustment level. Values: DontGenerateOption, GenerateOption, GenerateNotEditableOption.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:normalizedString">
      <xsd:enumeration value="GenerateOption" />
      <xsd:enumeration value="DontGenerateOption" />
      <xsd:enumeration value="GenerateNotEditableOption" />
    </xsd:restriction>
  </xsd:simpleType>

  <xsd:complexType name="ConversionRatio">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">Conversion ratio of the corporate action such as Split, Merger, Demerger...</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="numerator" type="xsd:double" />
      <xsd:element name="denominator" type="xsd:double" />
    </xsd:sequence>
  </xsd:complexType>

  <xsd:simpleType name="RoundingType">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">Method of rounding. Available methods are: Truncated, Upper, Rounded, Round. 4 digits.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:normalizedString">
      <xsd:enumeration value="Truncated" />
      <xsd:enumeration value="Upper" />
      <xsd:enumeration value="Rounded" />
      <xsd:enumeration value="Round. 4 dgts" />
    </xsd:restriction>
  </xsd:simpleType>

  <xsd:simpleType name="ResultType">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">Result of a voluntary CA or a CA with choice.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:normalizedString">
      <xsd:enumeration value="Pending" />
      <xsd:enumeration value="Confirmed" />
      <xsd:enumeration value="Failed" />
    </xsd:restriction>
  </xsd:simpleType>

  <xsd:simpleType name="CorporateActionCategory">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">Category of the CorporateAction. Available categories are: Mandatory, Mandatory with choice, Voluntary, Voluntary with choice.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:normalizedString">
      <xsd:enumeration value="Mandatory" />
      <xsd:enumeration value="Mandatory with choice" />
      <xsd:enumeration value="Voluntary" />
      <xsd:enumeration value="Voluntary with choice" />
    </xsd:restriction>
  </xsd:simpleType>

  <xsd:simpleType name="ImpactListed_desc">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">Impact listed instruments</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:normalizedString">
      <xsd:enumeration value="None"/>
      <xsd:enumeration value="LotSize"/>
      <xsd:enumeration value="NumberOfLots"/>
    </xsd:restriction>
  </xsd:simpleType>

  <!-- Internal business types -->

  <xsd:complexType name="CorporateActions">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">All corporate actions created for the selected instrument.</xsd:documentation>
    </xsd:annotation>
    <xsd:all>
      <!-- Instrument Id -->
      <xsd:element name="identifier" type="tns:Identifier" minOccurs="1" />
      <xsd:element name="corporateActionList" type="cans:CorporateActionList" minOccurs="0" maxOccurs="1" />
    </xsd:all>
    <xsd:attributeGroup ref="common:PersistentEntity.model" />
  </xsd:complexType>

  <xsd:complexType name="CorporateActionList">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">The list of corporate actions created on a specified instrument.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <!-- old CorporateAction definition used before 7.2 (internal); Removed by SRQ-36089, old format is no longer kept -->
      <!--<xsd:element name="corporateAction" type="cans:Adjustment" minOccurs="0" maxOccurs="unbounded" />-->
      <!-- CorporateAction to use from 7.2 (internal) -->
      <xsd:element name="corporateAction" type="cans:CorporateAction" minOccurs="0" maxOccurs="unbounded" />
    </xsd:sequence>
    <xsd:attribute name="withDeleteOld" type="xsd:boolean" use="optional" default="false">
      <xsd:annotation>
        <xsd:documentation source="http://www.sophis.net" xml:lang="en">Wether the previous corporate actions should be deleted or not</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="ignoreExisting" type="xsd:boolean" use="optional" default="false">
      <xsd:annotation>
        <xsd:documentation source="http://www.sophis.net" xml:lang="en">
        	This parameter is taken into account only when withDeleteOld="false" and ignored if withDeleteOld="true".
        	If ignoreExisting="true": we check if a CA similar to the one specified in the XML already exists (the check is done using 
        	the identifier if specified or by date and type otherwise). If it exists, ignore the one in the XML, otherwise insert a new one.
        </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
  </xsd:complexType>
  
  <xsd:complexType name="CAProperty">
		<xsd:simpleContent>
			<xsd:extension base="xsd:string">
				<xsd:attribute name="name" type="common:StringBounded39" use="required">
					<xsd:annotation>
						<xsd:documentation xml:lang="en">Identifier of the Corporate Action property.</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="toDelete" type="xsd:boolean" use="optional" default="false">
					<xsd:annotation>
						<xsd:documentation source="http://www.sophis.net" xml:lang="en">Whether the property should be deleted or not</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:simpleContent>
	</xsd:complexType>
	<xsd:complexType name="CAPropertyList">
		<xsd:sequence>
			<xsd:element minOccurs="0" maxOccurs="unbounded" name="property" type="cans:CAProperty"/>
		</xsd:sequence>
	</xsd:complexType>

  <!-- old CorporateAction definition used before 7.2 (internal), now used for Adjustments -->

  <xsd:complexType name="Adjustment">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">A description of an adjustment</xsd:documentation>
    </xsd:annotation>
    <xsd:all>
      <xsd:element name="corporateActionDate" type="xsd:date" minOccurs="1"/>
      <!-- Internal or external ID of the adjustment -->
      <xsd:element name="identifier" type="tns:Identifier" minOccurs="0"/>
      <!-- Internal engine of adjustment -->
      <xsd:element name="corporateActionType" type="xsd:string" minOccurs="1"/>
      <!-- If adjustment is applied of instrument different than the one on which we create the corporate action, then we set it here -->
      <xsd:element name="instrument" type="tns:Identifier" minOccurs="0"/>
      <xsd:element name="paymentDate" type="xsd:date" minOccurs="0"/>
      <xsd:element name="paymentDate2" type="xsd:date" minOccurs="0"/>
      <xsd:element name="marketFees" type="xsd:double" minOccurs="0"/>
      <xsd:element name="counterpartyFees" type="xsd:double" minOccurs="0"/>
      <xsd:element name="conversionRatio" type="cans:ConversionRatio" minOccurs="0"/>
      <xsd:element name="currency" type="tns:Currency" minOccurs="0"/>
      <xsd:element name="currencyRate" type="xsd:double" minOccurs="0"/>
      <xsd:element name="closingPrice" type="xsd:double" minOccurs="0"/>
      <xsd:element name="coefficient" type="xsd:double" minOccurs="0"/>
      <xsd:element name="cash" type="xsd:double" minOccurs="0"/>
      <xsd:element name="cashCurrency" type="tns:Currency" minOccurs="0"/>
      <xsd:element name="roundingType" type="cans:RoundingType" minOccurs="0"/>
      <xsd:element name="roundingOnClosingPosition" type="xsd:boolean" minOccurs="0" maxOccurs="1" />
      <xsd:element name="noImpactOnNetAmountIfRounding" type="xsd:boolean" minOccurs="0" maxOccurs="1" />
      <xsd:element name="ticketToGenerate" type="cans:TicketToGenerateType" minOccurs="0" />
      <xsd:element name="instrumentUnavailable" type="xsd:boolean" minOccurs="0" />
      <xsd:element name="businessEvent1" type="xsd:normalizedString" minOccurs="0"/>
      <xsd:element name="businessEvent2" type="xsd:normalizedString" minOccurs="0"/>
      <xsd:element name="diffusedCode" type="tns:Identifier" minOccurs="0"/>
      <xsd:element name="remark" type="xsd:string" minOccurs="0"/>
      <xsd:element name="exdivDate" type="xsd:date" minOccurs="0"/>
      <xsd:element name="rfactor" type="xsd:double" minOccurs="0"/>
      <xsd:element name="nameChange" type="xsd:string" minOccurs="0"/>
      <xsd:element name="newNameOfCompany" type="xsd:string" minOccurs="0"/>
      <xsd:element name="defaultChoice" type="xsd:short" minOccurs="0"/>
      <xsd:element name="choiceOption" type="cans:ChoiceOptions" minOccurs="0"/>
    </xsd:all>
  </xsd:complexType>

  <!-- CorporateAction to use from 7.2 (internal) -->

  <xsd:complexType name="CorporateAction">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">A specific corporate action such as dividend, split... Mono/Multi-adjustment(s)</xsd:documentation>
    </xsd:annotation>
    <xsd:all>
      <!-- Internal or external ID of the corporate action -->
      <xsd:element name="identifier" type="tns:Identifier" minOccurs="0" />
      <!-- Mandatory, Mandatory with choice, Voluntary, Voluntary with choice -->
      <xsd:element name="category" type="cans:CorporateActionCategory" minOccurs="0" />
      <!-- Split, Dividend, etc. -->
      <xsd:element name="type" type="xsd:string" minOccurs="0" />
      <xsd:element name="announcementDate" type="xsd:date" minOccurs="0" />
      <xsd:element name="recordDate" type="xsd:date" minOccurs="0" />
      <xsd:element name="electionStartDate" type="xsd:date" minOccurs="0" />
      <xsd:element name="electionEndDate" type="xsd:date" minOccurs="0"  />
      <xsd:element name="resultDate" type="xsd:date" minOccurs="0" />
      <!-- Result possible values: Confirmed, Pending, Failed -->
      <xsd:element name="result" type="cans:ResultType" minOccurs="0" />
      <xsd:element name="remark" type="xsd:string" minOccurs="0" />
      <xsd:element name="impactListed" type="cans:ImpactListed_desc" minOccurs="0" />
      <xsd:element name="adjustments" type="cans:AdjustmentList" minOccurs="0" />
	  <xsd:element name="properties" type="cans:CAPropertyList" minOccurs="0" maxOccurs="1" />
    </xsd:all>
  </xsd:complexType>

  <xsd:complexType name="AdjustmentList">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">A list of adjustments</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="adjustment" type="cans:Adjustment" minOccurs="1" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>


</xsd:schema>